"use strict";(self.webpackChunkqwksearch_api_docs=self.webpackChunkqwksearch_api_docs||[]).push([[4728],{42196:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>w,frontMatter:()=>x,metadata:()=>s,toc:()=>y});const s=JSON.parse('{"id":"api/write-language","title":"## Generate language model reply using agent prompts","description":"- \u2753 **Inputs**: \ud83d\udc44 Language Intelligence Provider, \ud83d\udd11 API Key,  \ud83e\udd16 agent template name, \ud83e\udde0 model name and options,","source":"@site/src/api/write-language.api.mdx","sourceDirName":"api","slug":"/api/write-language","permalink":"/docs/api/write-language","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"write-language","title":"## Generate language model reply using agent prompts","description":"- \u2753 **Inputs**: \ud83d\udc44 Language Intelligence Provider, \ud83d\udd11 API Key,  \ud83e\udd16 agent template name, \ud83e\udde0 model name and options,","sidebar_label":"## Generate language model reply using agent prompts","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"api/qwksearch-api","custom_edit_url":null,"hide_send_button":true},"sidebar":"default","previous":{"title":"## Search the web","permalink":"/docs/api/search-web"},"next":{"title":"agent-prompts","permalink":"/docs/functions/agents/agent-prompts"}}');var n=l(31085),a=l(71184),r=l(88672),i=l.n(r),o=l(1188),c=l.n(o),d=l(18414),h=l.n(d),g=l(90020),m=l.n(g),p=(l(11217),l(53759),l(54441));const x={id:"write-language",title:"## Generate language model reply using agent prompts",description:"- \u2753 **Inputs**: \ud83d\udc44 Language Intelligence Provider, \ud83d\udd11 API Key,  \ud83e\udd16 agent template name, \ud83e\udde0 model name and options,",sidebar_label:"## Generate language model reply using agent prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"api/qwksearch-api",custom_edit_url:null,hide_send_button:!0},u=void 0,f={},y=[{value:"\ud83d\udc44  Language Intelligence Providers (LIPs)",id:"--language-intelligence-providers-lips",level:3}];function j(e){const t={a:"a",br:"br",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(p.default,{as:"h1",className:"openapi__heading",children:"## Generate language model reply using agent prompts"}),"\n",(0,n.jsx)(i(),{method:"post",path:"/agents",context:"endpoint"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["\u2753 ",(0,n.jsx)(t.strong,{children:"Inputs"}),": \ud83d\udc44 Language Intelligence Provider, \ud83d\udd11 API Key,  \ud83e\udd16 agent template name, \ud83e\udde0 model name and options,\nand \ud83c\udd8e context variables for that agent"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["\ud83e\udd16 ",(0,n.jsx)(t.strong,{children:"Agent Instruction Templates"}),": ",(0,n.jsx)(t.a,{href:"https://smith.langchain.com/hub",children:"LangHub"})," template or custom:\nquestion(query, chat_history), summarize-bullets(article), summarize(article),\nsuggest-followups(chat_history, article), answer-cite-sources(context, chat_history, query),\nquery-resolution(chat_history, query), knowledge-graph-nodes(query, article),\nsummary-longtext(summaries)"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["\ud83e\udde0 ",(0,n.jsx)(t.strong,{children:"How Language Models Work"}),': Language models learn from billions of text examples to\nidentify statistical patterns and structures across diverse sources, converting words into\nhigh-dimensional vectors\u2014numerical lists that capture meaning and relationships between concepts.\nThese mathematical representations allow models to understand that "king/queen" share properties\nand "Paris/France" mirrors "Tokyo/Japan" through their transformer architecture, a neural network\nbackbone that processes information through multiple layers of analysis. The attention mechanism\nenables the system to dynamically focus on relevant parts of input text when generating each word,\nmaintaining context like humans tracking conversation threads, while calculating probability scores\nacross the entire vocabulary for each word position based on processed context. Rather than retrieving\nstored responses, models create novel text by selecting the most probable words given learned\npatterns, maintaining coherence across long passages while adapting to specific prompt nuances\nthrough deep pattern recognition.',(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Self-Attention"}),': Each word creates three representations: Query (what it\'s looking for), Key (what\nit offers), and Value (its actual content). For example, in "The cat sat on the mat," the word "cat"\nhas a Query vector that searches for actions, a Key vector that advertises itself as a subject, and\na Value vector containing its semantic meaning as an animal. The attention mechanism calculates how\nmuch "cat" should focus on other words by comparing its Query with their Keys - finding high\nsimilarity with "sat" (the action) - then combines the corresponding Value vectors to create a\ncontextualized representation where "cat" now understands it\'s the one doing the sitting.']}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["\ud83d\udcda ",(0,n.jsx)(t.strong,{children:"Learning Resources"}),":\n",(0,n.jsx)(t.a,{href:"https://github.com/vtempest/ai-research-agent/blob/master/packages/neural-net/src/train/predict-next-word.js",children:"LLM Training Example"}),",\n",(0,n.jsx)(t.a,{href:"https://medium.com/@terrycho/how-langchain-agent-works-internally-trace-by-using-langsmith-df23766e7fb4",children:"LangChain ReactAgent Tools"}),",\n",(0,n.jsx)(t.a,{href:"https://huggingface.co/learn",children:"Hugging Face Tutorials"}),", ",(0,n.jsx)(t.a,{href:"https://cookbook.openai.com",children:"OpenAI Cookbook"}),",\n",(0,n.jsx)(t.a,{href:"https://jalammar.github.io/illustrated-transformer/",children:"Transformer Overview"}),",\n",(0,n.jsx)(t.a,{href:"https://www.datacamp.com/tutorial/building-a-transformer-with-py-torch",children:"Building Transformer Guide"}),",\n",(0,n.jsx)(t.a,{href:"https://www.learnpytorch.io/pytorch_cheatsheet/",children:"PyTorch Overview"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"--language-intelligence-providers-lips",children:"\ud83d\udc44  Language Intelligence Providers (LIPs)"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83d\udc44 Provider"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83e\udd16 Model Families"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83d\udcda Docs"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83d\udd11 Keys"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83d\udcb0 Valuation"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83d\udcb8 Revenue (2024)"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\ud83d\udcb2 Cost (1M Output)"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"XAI"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Grok, Grok Vision"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://docs.x.ai/docs#models",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://console.x.ai/",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$80B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$100M"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$15.00"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"Groq"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Llama, DeepSeek, Gemini, Mistral"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://console.groq.com/docs/overview",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://console.groq.com/keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$2.8B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$0.79"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"Ollama"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"llama, mistral, mixtral, vicuna, gemma, qwen, deepseek, openchat, openhermes, codelama, codegemma, llava, minicpm, wizardcoder, wizardmath, meditrion, falcon"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://ollama.com/docs",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://ollama.com/settings/keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$3.2M"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$0"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"OpenAI"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"o1, o1-mini, o4, o4-mini, gpt-4, gpt-4-turbo, gpt-4-omni"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://platform.openai.com/docs/overview",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://platform.openai.com/api-keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$300B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$3.7B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$8.00"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"Anthropic"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Claude Sonnet, Claude Opus, Claude Haiku"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://docs.anthropic.com/en/docs/welcome",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://console.anthropic.com/settings/keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$61.5B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$1B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$15.00"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"TogetherAI"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Llama, Mistral, Mixtral, Qwen, Gemma, WizardLM, DBRX, DeepSeek, Hermes, SOLAR, StripedHyena"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://docs.together.ai/docs/quickstart",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://api.together.xyz/settings/api-keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$3.3B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$50M"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$0.90"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"Perplexity"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Sonar, Sonar Deep Research"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://docs.perplexity.ai/models/model-cards",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://www.perplexity.ai/account/api/keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$18B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$20M"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$15.00"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"Cloudflare"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Llama, Gemma, Mistral, Phi, Qwen, DeepSeek, Hermes, SQL Coder, Code Llama"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://developers.cloudflare.com/workers-ai/",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://dash.cloudflare.com/profile/api-tokens",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$62.3B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$1.67B"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$2.25"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.strong,{children:"Google"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Gemini"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models",children:"Docs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://cloud.google.com/vertex-ai/generative-ai/docs/start/express-mode/overview#api-keys",children:"Keys"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"~$400M"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"$10.00"})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{src:"https://i.imgur.com/bailW5n.gif",alt:"agent_arch_viz"}),"\n",(0,n.jsx)(t.img,{src:"https://i.imgur.com/uW6E9VJ.gif",alt:"agent_arch_viz2"})]}),"\n",(0,n.jsx)(p.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(c(),{parameters:void 0}),"\n",(0,n.jsx)(h(),{title:"Body",body:{required:!0,content:{"application/json":{schema:{type:"object",required:["provider","key"],properties:{agent:{type:"string",enum:["question","summarize-bullets","summarize","suggest-followups","answer-cite-sources","query-resolution","knowledge-graph-nodes","summary-longtext"],default:"question",description:"\ud83e\udd16 Agent name -  [LangHub](https://smith.langchain.com/hub) template or custom: \nquestion(query, chat_history), summarize-bullets(article), summarize(article), \nsuggest-followups(chat_history, article) : string[], answer-cite-sources(context, chat_history, query),\nquery-resolution(chat_history, query), knowledge-graph-nodes(query, article), \nsummary-longtext(summaries)\n"},provider:{type:"string",default:"groq",enum:["groq","openai","anthropic","together","xai","google","perplexity","ollama","cloudflare"],description:"\ud83d\udc44 LIPs Language Intelligence Providers"},key:{type:"string",description:"\ud83d\udd11 API key you provide for \ud83d\udc44 Language Intelligence Provider"},model:{type:"string",description:"\ud83e\udd16 Model name for \ud83d\udc44 Language Intelligence Provider, leave blank for default",default:"meta-llama/llama-4-maverick-17b-128e-instruct",enum:["dall-e-3","whisper-1","sora-video-gen","palm2","tii-falcon-40b","cohere-command-rplus","sonar-pro","sonar","sonar-reasoning-pro","sonar-reasoning","sonar-deep-research","llama-3.1-sonar-small-128k-online","llama-3.1-sonar-large-128k-online","llama-3.1-sonar-huge-128k-online","deepseek-r1-distill-llama-70b","meta-llama/llama-4-maverick-17b-128e-instruct","meta-llama/llama-4-scout-17b-16e-instruct","llama-3.3-70b-versatile","llama-3.3-70b-specdec","llama-3.2-3b-preview","llama-3.2-11b-vision-preview","llama-3.2-90b-vision-preview","llama-3.1-70b-versatile","llama-3.1-8b-instant","mixtral-8x7b-32768","gemma2-9b-it","gpt-4o","gpt-4o-mini","gpt-4-turbo","gpt-4","gpt-3.5-turbo","claude-opus-4-20250514","claude-sonnet-4-20250514","claude-sonnet-4-20250514-1106","claude-3-7-sonnet-20250219","claude-3-5-sonnet-20241022","claude-3-opus-20240229","claude-3-sonnet-20240229","claude-3-haiku-20240307","meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo","meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo","meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo","meta-llama/Meta-Llama-3-8B-Instruct-Turbo","meta-llama/Meta-Llama-3-70B-Instruct-Turbo","meta-llama/Llama-3.2-3B-Instruct-Turbo","meta-llama/Meta-Llama-3-8B-Instruct-Lite","meta-llama/Meta-Llama-3-70B-Instruct-Lite","meta-llama/Llama-3-8b-chat-hf","meta-llama/Llama-3-70b-chat-hf","nvidia/Llama-3.1-Nemotron-70B-Instruct-HF","Qwen/Qwen2.5-Coder-32B-Instruct","microsoft/WizardLM-2-8x22B","google/gemma-2-27b-it","google/gemma-2-9b-it","databricks/dbrx-instruct","deepseek-ai/deepseek-llm-67b-chat","google/gemma-2b-it","Gryphe/MythoMax-L2-13b","meta-llama/Llama-2-13b-chat-hf","mistralai/Mistral-7B-Instruct-v0.1","mistralai/Mistral-7B-Instruct-v0.2","mistralai/Mistral-7B-Instruct-v0.3","mistralai/Mixtral-8x7B-Instruct-v0.1","mistralai/Mixtral-8x22B-Instruct-v0.1","NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO","Qwen/Qwen2.5-7B-Instruct-Turbo","Qwen/Qwen2.5-72B-Instruct-Turbo","Qwen/Qwen2-72B-Instruct","togethercomputer/StripedHyena-Nous-7B","upstage/SOLAR-10.7B-Instruct-v1.0","meta-llama/Llama-Vision-Free","meta-llama/Llama-3.2-11B-Vision-Instruct-Turbo","meta-llama/Llama-3.2-90B-Vision-Instruct-Turbo","grok-beta","grok-vision-beta","gemini-2.5-pro-preview-05-06","gemini-2.5-flash-preview-04-17","gemini-2.0-flash-001","gemini-2.0-flash-lite-001","gemini-2.0-flash-live-preview-04-09","imagen-3.0-generate-002","imagen-3.0-fast-generate-001","meta-llama/Llama-3.3-70B","gemma-3","gemma-2","gemma"]},html:{type:"boolean",default:!0,description:"\ud83d\udcc4 Format of response. true=HTML, false=Markdown"},temperature:{type:"number",description:"\ud83d\udd25 Controls response predictability:\n   - 0 to 1.0: \ud83c\udfaf More deterministic, predictable responses\n   - 1.0 to 2.0: \ud83c\udfa8 More creative, varied responses\n",default:1},query:{type:"string",required:!1,description:"(context for some agents) Use query to answer"},chat_history:{type:"string",required:!1,description:"(context for some agents) Chat history"},article:{type:"string",required:!1,description:"(context for some agents) Article to summarize"}}}}}}}),"\n",(0,n.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Generated language model response (in HTML or Markdown)",content:{"application/json":{schema:{type:"object",properties:{content:{type:"string",description:"Generated language model response (in HTML or Markdown)"},extact:{type:"object",description:"Structured JSON extract from response, in some agents"}}}}}},500:{description:"Server error or missing prompt parameter",content:{"application/json":{schema:{type:"object",properties:{error:{type:"string",description:"Error message"}}}}}}}})]})}function w(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}}}]);