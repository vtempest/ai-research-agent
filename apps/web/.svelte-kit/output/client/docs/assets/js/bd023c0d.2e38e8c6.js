"use strict";(self.webpackChunkqwksearch_api_docs=self.webpackChunkqwksearch_api_docs||[]).push([[2753],{68664:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"neural-net/vectorize/similarity-remote-api","title":"similarity-remote-api","description":"neural-net-training / vectorize/similarity-remote-api","source":"@site/src/neural-net/vectorize/similarity-remote-api.md","sourceDirName":"neural-net/vectorize","slug":"/neural-net/vectorize/similarity-remote-api","permalink":"/docs/neural-net/vectorize/similarity-remote-api","draft":false,"unlisted":false,"editUrl":"https://github.com/vtempest/ai-research-agent/tree/master/apps/docs/src/neural-net/vectorize/similarity-remote-api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"default","previous":{"title":"predict-statistics","permalink":"/docs/neural-net/statistics/predict-statistics"},"next":{"title":"similarity-vector","permalink":"/docs/neural-net/vectorize/similarity-vector"}}');var r=i(31085),s=i(71184);const c={},l=void 0,d={},a=[{value:"Similarity",id:"similarity",level:2},{value:"weighRelevanceConceptVectorAPI()",id:"weighrelevanceconceptvectorapi",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/neural-net/modules",children:"neural-net-training"})," / vectorize/similarity-remote-api"]}),"\n",(0,r.jsx)(n.h2,{id:"similarity",children:"Similarity"}),"\n",(0,r.jsx)(n.h3,{id:"weighrelevanceconceptvectorapi",children:"weighRelevanceConceptVectorAPI()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function weighRelevanceConceptVectorAPI(\n   source_sentence: string, \n   sentences: string[], \n   options?: object): Promise<unknown>;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Defined in: ",(0,r.jsx)(n.a,{href:"https://github.com/vtempest/ai-research-agent/tree/master/packages/neural-net/src/vectorize/similarity-remote-api.js#L18",children:"vectorize/similarity-remote-api.js:18"})]}),"\n",(0,r.jsxs)(n.p,{children:["Calculate the semantic similarity between one text and a list of\nother sentences by comparing their embeddings.\n",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/detailed_parameters#sentence-similarity-task",children:"https://huggingface.co/docs/api-inference/detailed_parameters#sentence-similarity-task"})]}),"\n",(0,r.jsx)("img",{src:"https://i.imgur.com/ex2UWnu.png",width:"350px"}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Parameter"}),(0,r.jsx)("th",{children:"Type"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"source_sentence"})})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:"The string that you wish to\ncompare the other strings with. This can be a phrase, sentence,\nor longer passage, depending on the model being used."})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"sentences"})})}),(0,r.jsx)("td",{children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"string"}),"[]"]})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:"A list of strings which will be compared\nagainst the source_sentence."})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"options?"})})}),(0,r.jsx)("td",{children:(0,r.jsxs)(n.p,{children:["{ ",(0,r.jsx)(n.code,{children:"HF_API_KEY"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; ",(0,r.jsx)(n.code,{children:"model"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; }"]})}),(0,r.jsx)("td",{children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{}),"\n"]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"options.HF_API_KEY?"})})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})})}),(0,r.jsx)("td",{children:(0,r.jsxs)(n.p,{children:["Required ",(0,r.jsx)(n.a,{href:"https://huggingface.co/settings/tokens",children:"https://huggingface.co/settings/tokens"})]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"options.model?"})})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})})}),(0,r.jsx)("td",{children:(0,r.jsx)(n.p,{children:'default="sentence-transformers/all-MiniLM-L6-v2"'})})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"unknown"}),">"]}),"\n",(0,r.jsx)(n.p,{children:"array of 0-1 similarity scores for each sentence\n*"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var t=i(14041);const r={},s=t.createContext(r);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);