{"searchDocs":[{"title":"agent-tools","type":0,"sectionRef":"#","url":"/docs/functions/agents/agent-tools","content":"agent-tools ai-research-agent / agents/agent-tools","keywords":"","version":"Next"},{"title":"agent-prompts","type":0,"sectionRef":"#","url":"/docs/functions/agents/agent-prompts","content":"agent-prompts ai-research-agent / agents/agent-prompts Generate​ getAgentPrompts()​ function getAgentPrompts(agentName, options?): () =&gt; object Agent Prompts​ summarize-bullets: article summarize: article suggest-followups: chat_historyarticle answer: chat_historyquery query-resolution: chat_historyquery knowledge-graph-nodes: queryarticle summary-longtext: articlesections Returns an object with agent prompts based on the provided agent name and options Uses regex to detect any variables in %7Bbrackets%7D in the prompts and replace them with values from the options object Values inside brackets must be the matching variable name Parameters​ Parameter\tType\tDescription agentName string The name of the agent to generate prompts for. options? Object An options object that can contain the following properties: context: An object containing context variables to be used when generating the prompts. Returns​ Function An object with agent prompts. Returns​ object Name\tTypeprompt\tstring variablesNotProvided\t[] Author​ ai-research-agent (2024) Example​ var prompt = getAgentPrompts(&quot;summarize-bullets&quot;, {article}) ","keywords":"","version":"Next"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/functions/","content":"index Modules​ agents/agent-promptsagents/agent-toolsagents/api2aiagents/generate-reply-apiagents/languagereply-to-jsoncrawler/crawlerdatasets/compile-topic-modeldatasets/compress-json-jz64datasets/dictionary-importdatasets/human-names-importdatasets/metadata-statsdatasets/misspelled-typos-importdatasets/quora-importdatasets/term-frequency-importdatasets/wikipage-titles-importeditoreditoreditor/asRooteditor/deltaeditor/deltaeditor/delta/AttributeMapeditor/delta/Deltaeditor/delta/fast-diffeditor/delta/Opeditor/delta/util/cloneDeepeditor/delta/util/isEqualeditor/documenteditor/documenteditor/document/deltaToTexteditor/document/EditorRangeeditor/document/Lineeditor/document/LineOpeditor/document/TextChangeeditor/document/TextDocumenteditor/Editoreditor/moduleseditor/moduleseditor/modules/copyeditor/modules/decorationseditor/modules/defaultseditor/modules/historyeditor/modules/inputeditor/modules/keyboardeditor/modules/pasteeditor/modules/placeholdereditor/modules/renderingeditor/modules/scheduled-signaleditor/modules/selectioneditor/modules/shortcutFromEventeditor/modules/smartEntryeditor/modules/smartQuoteseditor/modules/tableseditor/modules/virtualRenderingeditor/poppereditor/rendering/htmleditor/rendering/positioneditor/rendering/renderingeditor/rendering/selectioneditor/rendering/vdomeditor/rendering/walkereditor/Sourceeditor/storeseditor/typesettingeditor/typesettingeditor/typesetting/defaultseditor/typesetting/embedseditor/typesetting/formatseditor/typesetting/lineseditor/typesetting/typeseteditor/util/EventDispatcherextractor/html-to-cite/extract-authorextractor/html-to-cite/extract-citeextractor/html-to-cite/extract-date/date-extractorsextractor/html-to-cite/extract-date/date-validatorsextractor/html-to-cite/extract-date/extract-dateextractor/html-to-cite/extract-date/extract-date-quickextractor/html-to-cite/extract-sourceextractor/html-to-cite/extract-titleextractor/html-to-cite/human-names-recognizeextractor/html-to-cite/metadata-to-citeextractor/html-to-cite/url-to-domainextractor/html-to-cite/url-to-faviconextractor/html-to-content/extract-content/extract-content-mercuryextractor/html-to-content/extract-content/extract-content-mercury-utilsextractor/html-to-content/extract-content/extract-content-readabilityextractor/html-to-content/html-to-basic-htmlextractor/html-to-content/html-to-contentextractor/html-to-content/html-utilsextractor/pdf-to-html/models/Annotationextractor/pdf-to-html/models/BlockTypeextractor/pdf-to-html/models/HeadlineFinderextractor/pdf-to-html/models/LineConverterextractor/pdf-to-html/models/LineItemextractor/pdf-to-html/models/LineItemBlockextractor/pdf-to-html/models/Metadataextractor/pdf-to-html/models/Pageextractor/pdf-to-html/models/PageItemextractor/pdf-to-html/models/ParsedElementsextractor/pdf-to-html/models/ParseResultextractor/pdf-to-html/models/StashingStreamextractor/pdf-to-html/models/TextItemextractor/pdf-to-html/models/TextItemLineGrouperextractor/pdf-to-html/models/Wordextractor/pdf-to-html/pdf-to-htmlextractor/pdf-to-html/transformations/CalculateGlobalStatsextractor/pdf-to-html/transformations/line-item-block/DetectCodeQuoteBlocksextractor/pdf-to-html/transformations/line-item-block/DetectListLevelsextractor/pdf-to-html/transformations/line-item-block/GatherBlocksextractor/pdf-to-html/transformations/line-item/CompactLinesextractor/pdf-to-html/transformations/line-item/DetectHeadersextractor/pdf-to-html/transformations/line-item/DetectListItemsextractor/pdf-to-html/transformations/line-item/DetectTOCextractor/pdf-to-html/transformations/line-item/RemoveRepetitiveElementsextractor/pdf-to-html/transformations/line-item/VerticalToHorizontalextractor/pdf-to-html/transformations/ToHTMLextractor/pdf-to-html/transformations/ToLineItemBlockTransformationextractor/pdf-to-html/transformations/ToLineItemTransformationextractor/pdf-to-html/transformations/ToTextBlocksextractor/pdf-to-html/transformations/ToTextItemTransformationextractor/pdf-to-html/transformations/Transformationextractor/pdf-to-html/util/is-url-pdfextractor/pdf-to-html/util/page-item-functionsextractor/pdf-to-html/util/page-number-functionsextractor/pdf-to-html/util/string-functionsextractor/url-to-content/docx-to-contentextractor/url-to-content/scrape-urlextractor/url-to-content/url-to-contentextractor/url-to-content/youtube-to-textinterface/highlight-codeinterface/youtube-embedmatch/compare-lettersmatch/match-quasarmatch/weigh-relevance-frequencysearch/ip-to-langsearch/search-enginessearch/search-streamsearch/search-websearch/search-wikipediasimilarity/embeddings-to-graphsimilarity/similarity-remote-apisimilarity/similarity-vectorsimilarity/usearchtokenize/stopwordstokenize/suggest-complete-wordtokenize/text-to-chunkstokenize/text-to-sentencestokenize/text-to-topic-tokenstokenize/word-to-root-stemtopics/ngramstopics/rank-sentences-keyphrasestopics/seektopic-keyphrasestopics/topic-distributiontrain/neural-net","keywords":"","version":"Next"},{"title":"api2ai","type":0,"sectionRef":"#","url":"/docs/functions/agents/api2ai","content":"api2ai ai-research-agent / agents/api2ai Generate​ convertOpenAPIToAgentTools()​ function convertOpenAPIToAgentTools(fileContents): any[] API2AI​ Translates any website's OpenAPI.yml file to LLM agent tool LangChain.js function format List of public apispublicapis Parameters​ Parameter\tType\tDescription fileContents string OpenAPI YAML file contents Returns​ any[] Array of tool use function objects Example​ const fileContents = fs.readFileSync(yamlPath, 'utf8'); const tools = convertOpenAPIToAgentTools(fileContents); ","keywords":"","version":"Next"},{"title":"crawler","type":0,"sectionRef":"#","url":"/docs/functions/crawler/","content":"crawler ai-research-agent / crawler/crawler","keywords":"","version":"Next"},{"title":"languagereply-to-json","type":0,"sectionRef":"#","url":"/docs/functions/agents/languagereply-to-json","content":"languagereply-to-json ai-research-agent / agents/languagereply-to-json Generate​ convertLanguageReplyToJSON()​ function convertLanguageReplyToJSON(text, key?): Object[] This function extracts and cleans content between XML-style tags and returns a JSON object. Parameters​ Parameter\tType\tDefault value\tDescription text string undefined Input text to parse key? string null Tag name to look for Returns​ Object[] Array of objects containing cleaned content items","keywords":"","version":"Next"},{"title":"generate-reply-api","type":0,"sectionRef":"#","url":"/docs/functions/agents/generate-reply-api","content":"generate-reply-api ai-research-agent / agents/generate-reply-api Generate​ CHAT_MODELS​ const CHAT_MODELS: object; List of default models for the chat providers and a list of models available for Groq Type declaration​ Name\tType anthropic object[] defaults {anthropic: string;groq: string;openai: string;together: string;xai: string; } groq object[] openai object[] together object[] xai object[] generateLanguageModelReply()​ function generateLanguageModelReply(query, options): Promise&lt;{ content: string; error: string; }&gt; Generates a reply using specified AI provider and model: Groq Docs Groq Keys: Llama 3.2 3B, Llama 3.2 11B Vision, Llama 3.2 90B Vision, Llama 3.1 70B, Llama 3.1 8B, Mixtral 8x7B, Gemma2 9BOpenAI Docs OpenAI Keys: GPT-3.5 Turbo, GPT-4, GPT-4 Turbo, GPT-4 Omni, GPT-4 Omni MiniAnthropic Docs Anthropic Keys: Claude 3.5 Sonnet, Claude 3 Opus, Claude 3 Sonnet, Claude 3 HaikuTogetherAI Docs TogetherAI Keys: Llama, Mistral, Mixtral, Qwen, Gemma, WizardLM, DBRX, DeepSeek, Hermes, SOLAR, StripedHyena.XAI Docs XAI Keys: Grok, Grok Vision Google Vertex DocsGoogle Vertex Keys: Gemini This function utilizes transformer-based language models Input Embedding: Converts input text into numerical vectors.Positional Encoding: Adds position information to maintain word order.Multi-Head Attention: Processes relationships between words in parallel.Feed-Forward Networks: Further processes the attention output.Layer Normalization &amp; Residual Connections: Stabilizes learning and prevents vanishing gradients.Output Layer: Generates probabilities for next tokens. Parameters​ Parameter\tType\tDescription query string | any[] User's input query text string or LangChain messages array options { apiKey: string; model: string; provider: string; temperature: number; } Options options.apiKey string API key for the specified provider options.model? string Optional model name. If not provided, uses default options.provider string LLM provider: groq, openai, anthropic, together, xai, google options.temperature? number Temperature is a way to control the overall confidence of the model's scores (the logits). What this means is that, if you use a lower value than 1.0, the relative distance between the tokens will become larger (more deterministic), and if you use a larger value than 1.0, the relative distance between the tokens becomes smaller (less deterministic). 1.0 Temperature is the original distribution that the model was trained to optimize for, since the scores remain the same. Returns​ Promise&lt;{content: string;error: string; }&gt; Generated response Author​ AI Research Contributors Example​ const response = await generateLanguageModelReply( &quot;Explain neural networks&quot;, {provider: &quot;groq&quot;, apiKey: &quot;your-api-key&quot;}) Other​ ChatModel​ Properties​ id​ id: string; The internal ID of the model model​ model: string; The model name name​ name: string; The display name of the model ChatModels​ Properties​ defaults​ defaults: Object; The default models for the chat providers groq​ groq: ChatModel[]; List of models available for Groq","keywords":"","version":"Next"},{"title":"compile-topic-model","type":0,"sectionRef":"#","url":"/docs/functions/datasets/compile-topic-model","content":"compile-topic-model ai-research-agent / datasets/compile-topic-model Other​ weightWikiWordSpecificity()​ function weightWikiWordSpecificity(query): number Find domain-specific unique words for a single doc with BM25 formula by using Wikipedia term frequencies as the common words corpus. All words in English Wikipedia are sorted by number of pages they are in for 325K words with frequencies of at least 32 wikipages, between 3 to 23 characters of Latin alphanumerics like az09, punctuation like .-, and diacritics like éï, but filtering out numbers and foreign language. Total Terms (frequency&gt;=32): 324896 Filesize (JSON, frequency&gt;=32): 4MB Total Articles (Wiki-en-2020): 5,989,879 Galkin, M., Malykh, V. (2020). Wikipedia TF-IDF Dataset Release (v1.0). Zenodo. https://doi.org/10.5281/zenodo.3631674 https://github.com/SmartDataAnalytics/Wikipedia_TF_IDF_Dataset Parameters​ Parameter\tType\tDescription query string phrase to search wiki-idf for each word Returns​ number score for term specificity 0-12~ Topics​ compileTopicModel()​ function compileTopicModel(options?): Promise&lt;void&gt; Compile a topic phrases model from a dictionary and Wikipedia page titles. Search and outline a research base using Wikipedia's 100k popular pages as the core topic phrases graph for LLM Research Agents. Most of the documents online (and by extension thinking in the collective conciousness) can revolve around core topic phrases linked as a graph. If all the available docs are nodes, the links in the graph can be extracted Wiki page entities and mappings of dictionary phrases to their wiki page. These can serve as topic labels, keywords, and suggestions for LLM followup questions. Documents can be linked in a graph with: wiki page entity recognition 2. frequent keyphrases 3. html links research paper references 5. keyphrases to query in global web search 6. site-specific recommendations. These can lay the foundation for LLM Research Agents to fully grok, summarize, and outline a research base. 240K total words &amp; phrases, first 117K first-word or single words to check every token against. 100K Wikipedia Page Titles and links - Wikipedia most popular pages titles. Also includes domain specificity score and what letters should be capital. 84K words and 67K phrases in dictionary lexicon OpenEnglishWordNet, a better updated version of Wordnet - multiple definitions per term, 120k definitions, 45 concept categories JSON Prefix Trie - arranged by sorting words and phrases for lookup by first word to tokenize by word, then find if it starts a phrase based on entries, for Phrase Extraction from a text. There is &quot;unanimous consensus&quot; that Prefix Trie O(1) lookups (instead of having to loop through the index for each lookup) makes it the best data type for this task. Parameters​ Parameter\tType\tDescription options? { addJSONLineBreaks: number; addWikiPageTitles: boolean; maxSynonymsPerTerm: number; minTermCharCount: number; sortInFirstTwoLettersTrie: boolean; } options.addJSONLineBreaks? number include line breaks in JSON output for debugging options.addWikiPageTitles? boolean true to add wiki page titles, false for dictionary only options.maxSynonymsPerTerm? number max synonyms per term options.minTermCharCount? number min length of term to include options.sortInFirstTwoLettersTrie? boolean sort the first words by first two letters Trie, needd for autocomplete after 2 letters typed Returns​ Promise&lt;void&gt;","keywords":"","version":"Next"},{"title":"dictionary-import","type":0,"sectionRef":"#","url":"/docs/functions/datasets/dictionary-import","content":"dictionary-import ai-research-agent / datasets/dictionary-import Functions​ importDictionary()​ function importDictionary(): object Open English WordNet 2023 (better maintained WordNet) Script to download, decompress, parse and process into JSON Total Terms: 151937 Phrases: 67444 words: 84493 concept categories: 45 119801 definiton sets ( multiple defs per term &amp; some terms share defs) like &quot;motion&quot; &quot;person&quot;, and 5 Part-of-Speech categories: &quot;n&quot;, &quot;v&quot;, &quot;r&quot;, &quot;a&quot;, &quot;s&quot;: noun, verb, adverb, adj, satellite adj*. Returns​ object Author​ McCrae, J.P., Rademaker, A., Bond, F., Rudnicka, E., and Fellbaum, C. (2019). English WordNet 2019 – An Open-Source WordNet for English. In Proceedings of the 10th Global WordNet Conference – GWC 2019, Wrocław. https://aclanthology.org/2019.gwc-1.31/","keywords":"","version":"Next"},{"title":"human-names-import","type":0,"sectionRef":"#","url":"/docs/functions/datasets/human-names-import","content":"human-names-import ai-research-agent / datasets/human-names-import Functions​ importHumanNames()​ function importHumanNames(): object Import 92k first and last human names sorted by popularity. Returns​ object Author​ American Registry for Internet Numbers (2011)","keywords":"","version":"Next"},{"title":"compress-json-jz64","type":0,"sectionRef":"#","url":"/docs/functions/datasets/compress-json-jz64","content":"compress-json-jz64 ai-research-agent / datasets/compress-json-jz64 Functions​ compressBase64ZipText()​ function compressBase64ZipText(dataOrZip, options?): Promise&lt;string&gt; Compress/decompress any data (such as JSON or text) with JSZip then convert zip binary to a Base64Zip text string which is easier to store in db or files. Parameters​ Parameter\tType\tDescription dataOrZip string data to compress, or Base64Zip to decompress options? { compressionLevel: number; decompress: boolean; } options.compressionLevel? number default=9 0-9, 9 has smallest size at ~40% but takes longer options.decompress? boolean default=false false to compress, true to decompress Returns​ Promise&lt;string&gt; base64-encoded string of the zipped data","keywords":"","version":"Next"},{"title":"quora-import","type":0,"sectionRef":"#","url":"/docs/functions/datasets/quora-import","content":"quora-import ai-research-agent / datasets/quora-import Functions​ importCommonQueries()​ function importCommonQueries(): object https://raw.githubusercontent.com/lumina-ai-inc/benchmark/master/search_benchmark/dataset/user_queries.jsonl https://raw.githubusercontent.com/lumina-ai-inc/benchmark/master/search_benchmark/dataset/generated_questions.jsonl Script to download, decompress, parse and process Quora question pairs dataset, great for training a semantic similarity model or Query-Response model Returns​ object Author​ Quora https://huggingface.co/datasets/BeIR/quora","keywords":"","version":"Next"},{"title":"metadata-stats","type":0,"sectionRef":"#","url":"/docs/functions/datasets/metadata-stats","content":"metadata-stats ai-research-agent / datasets/metadata-stats","keywords":"","version":"Next"},{"title":"misspelled-typos-import","type":0,"sectionRef":"#","url":"/docs/functions/datasets/misspelled-typos-import","content":"misspelled-typos-import ai-research-agent / datasets/misspelled-typos-import Functions​ importMisspelledTypos()​ function importMisspelledTypos(): object Common Misspelled Typos Dataset Importer Script to download, decompress, parse and process into JSON Total unique typos collected: 7969 Returns​ object Author​ Crowd-sourced often-updated Wikipedia list of common misspellingshttps://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings","keywords":"","version":"Next"},{"title":"term-frequency-import","type":0,"sectionRef":"#","url":"/docs/functions/datasets/term-frequency-import","content":"term-frequency-import ai-research-agent / datasets/term-frequency-import Functions​ importTermFrequency()​ function importTermFrequency(): object Script to download, decompress, parse and process Wikipedia term frequency dataset, compiled by SmartDataAnalytics in 2020 and containing term frequencies on Wikipedia articles. All words in English Wikipedia are sorted by number of pages they are in for 325K words with frequencies of at least 32 wikipages, between 3 to 23 characters of Latin alphanumerics like az09, punctuation like .-, and diacritics like éï, but filtering out numbers and foreign language. Total Terms (frequency&gt;=32): 324896 Filesize (JSON, frequency&gt;=32): 4MB Total Articles (Wiki-en-2020): 5,989,879 Returns​ object Author​ Galkin, M., Malykh, V. (2020). Wikipedia TF-IDF Dataset Release (v1.0). Zenodo. https://doi.org/10.5281/zenodo.3631674 https://github.com/SmartDataAnalytics/Wikipedia_TF_IDF_Dataset","keywords":"","version":"Next"},{"title":"delta","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta","content":"delta ai-research-agent / editor/delta References​ AttributeMap​ Renames and re-exports default cloneDeep​ Renames and re-exports default Delta​ Renames and re-exports default diff​ Renames and re-exports default isEqual​ Renames and re-exports default Op​ Renames and re-exports default OpIterator​ Re-exports OpIterator","keywords":"","version":"Next"},{"title":"wikipage-titles-import","type":0,"sectionRef":"#","url":"/docs/functions/datasets/wikipage-titles-import","content":"wikipage-titles-import ai-research-agent / datasets/wikipage-titles-import Functions​ importWikiPageTitles()​ function importWikiPageTitles(): void Script to download, decompress, parse and process Wiki Page Titles by Views Returns​ void Author​ Wikimedia Foundation","keywords":"","version":"Next"},{"title":"asRoot","type":0,"sectionRef":"#","url":"/docs/functions/editor/asRoot","content":"asRoot ai-research-agent / editor/asRoot Functions​ asRoot()​ function asRoot(root, editor): object Parameters​ Parameter\tType root HTMLElement editor Editor Returns​ object Name\tTypedestroy\t() =&gt; void update\t(newEditor) =&gt; void","keywords":"","version":"Next"},{"title":"fast-diff","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/fast-diff","content":"fast-diff ai-research-agent / editor/delta/fast-diff Functions​ default()​ function default( text1, text2, cursor_pos, cleanup): any[] Parameters​ Parameter\tType text1 any text2 any cursor_pos any cleanup any Returns​ any[]","keywords":"","version":"Next"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/AttributeMap/","content":"index ai-research-agent / editor/delta/AttributeMap Index​ Namespaces​ default Interfaces​ default​ Indexable​ [key: string]: any","keywords":"","version":"Next"},{"title":"default","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/AttributeMap/namespaces/default","content":"default ai-research-agent / editor/delta/AttributeMap / default Functions​ compose()​ function compose( a, b, keepNull?): default | undefined Parameters​ Parameter\tType a default b default keepNull? boolean Returns​ default | undefined diff()​ function diff(a, b): default | undefined Parameters​ Parameter\tType a default b default Returns​ default | undefined invert()​ function invert(attr, base): default Parameters​ Parameter\tType attr default base default Returns​ default transform()​ function transform( a, b, priority): default | undefined Parameters​ Parameter\tType\tDefault value a undefined | default undefined b undefined | default undefined priority boolean false Returns​ default | undefined","keywords":"","version":"Next"},{"title":"default","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/Op/namespaces/default","content":"default ai-research-agent / editor/delta/Op / default Functions​ iterator()​ function iterator(ops): OpIterator Parameters​ Parameter\tType ops default[] Returns​ OpIterator length()​ function length(op): number Parameters​ Parameter\tType op default Returns​ number","keywords":"","version":"Next"},{"title":"cloneDeep","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/util/cloneDeep","content":"cloneDeep ai-research-agent / editor/delta/util/cloneDeep Functions​ default()​ function default(value): any Parameters​ Parameter\tType value any Returns​ any","keywords":"","version":"Next"},{"title":"isEqual","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/util/isEqual","content":"isEqual ai-research-agent / editor/delta/util/isEqual Functions​ default()​ function default( value, other, options): boolean Parameters​ Parameter\tType\tDefault value value any undefined other any undefined options IsEqualOptions EMPTY_OBJ Returns​ boolean","keywords":"","version":"Next"},{"title":"document","type":0,"sectionRef":"#","url":"/docs/functions/editor/document","content":"document ai-research-agent / editor/document References​ AttributeMap​ Renames and re-exports default cloneDeep​ Renames and re-exports default Delta​ Renames and re-exports default deltaToText​ Re-exports deltaToText diff​ Renames and re-exports default EditorRange​ Re-exports EditorRange FormattingOptions​ Re-exports FormattingOptions hasFormat​ Re-exports hasFormat intersect​ Re-exports intersect isEqual​ Renames and re-exports default Line​ Renames and re-exports default LineIds​ Re-exports LineIds LineIterator​ Re-exports LineIterator LineOp​ Renames and re-exports default LineOpIterator​ Re-exports LineOpIterator LineRanges​ Re-exports LineRanges normalizeRange​ Re-exports normalizeRange Op​ Renames and re-exports default OpIterator​ Re-exports OpIterator TextChange​ Renames and re-exports default TextDocument​ Renames and re-exports default","keywords":"","version":"Next"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/functions/editor/delta/Op/","content":"index ai-research-agent / editor/delta/Op Index​ Namespaces​ default Classes​ OpIterator​ Constructors​ new OpIterator()​ new OpIterator(ops): OpIterator Parameters​ Parameter\tType ops default[] Returns​ OpIterator Methods​ hasNext()​ hasNext(): boolean Returns​ boolean next()​ next(length?): default Parameters​ Parameter\tType length? number Returns​ default peek()​ peek(): default Returns​ default peekLength()​ peekLength(): number Returns​ number peekType()​ peekType(): string Returns​ string rest()​ rest(): default[] Returns​ default[] Properties​ index​ index: number; offset​ offset: number; ops​ ops: default[]; Interfaces​ default​ Properties​ attributes?​ optional attributes: default; delete?​ optional delete: number; insert?​ optional insert: string | Record&lt;string, any&gt;; retain?​ optional retain: number; ","keywords":"","version":"Next"},{"title":"editor","type":0,"sectionRef":"#","url":"/docs/functions/editor","content":"editor ai-research-agent / editor Functions​ input()​ function input(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypeallowComposition() destroy() init() keyboard()​ function keyboard(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypedestroy() init() paste()​ function paste(editor, options?): object Parameters​ Parameter\tType editor Editor options? PasteModuleOptions Returns​ object Name\tTypecommands\t{ paste: (__namedParameters) =&gt; void; } destroy() init() rendering()​ function rendering(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTyperender\t(what?) =&gt; void destroy() selection()​ function selection(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypepause\t() =&gt; void renderSelection\t() =&gt; void resume\t() =&gt; void destroy() init() References​ activeStore​ Re-exports activeStore addShortcutsToEvent​ Re-exports addShortcutsToEvent applyDecorations​ Re-exports applyDecorations asRoot​ Re-exports asRoot AttributeMap​ Renames and re-exports default BasicType​ Re-exports BasicType BLOCK_ELEMENTS​ Re-exports BLOCK_ELEMENTS blockquote​ Re-exports blockquote bold​ Re-exports bold br​ Re-exports br BubbleMenu​ Re-exports BubbleMenu cleanText​ Re-exports cleanText cloneDeep​ Renames and re-exports default code​ Re-exports code codeblock​ Re-exports codeblock Combined​ Re-exports Combined CombinedEntry​ Re-exports CombinedEntry combineLines​ Re-exports combineLines Commands​ Re-exports Commands copy​ Re-exports copy CopyData​ Re-exports CopyData CopyOptions​ Re-exports CopyOptions DecorateEvent​ Re-exports DecorateEvent DecorateEventInit​ Re-exports DecorateEventInit decorations​ Re-exports decorations Decorations​ Re-exports Decorations DecorationsModule​ Re-exports DecorationsModule Decorator​ Re-exports Decorator defaultHandlers​ Re-exports defaultHandlers defaultModules​ Re-exports defaultModules defaultTypes​ Re-exports defaultTypes Delta​ Renames and re-exports default deltaFromDom​ Re-exports deltaFromDom deltaFromHTML​ Re-exports deltaFromHTML DeltaFromHTMLOptions​ Re-exports DeltaFromHTMLOptions deltaToText​ Re-exports deltaToText derivedEditorStore​ Re-exports derivedEditorStore diff​ Renames and re-exports default dl​ Re-exports dl docFromDom​ Re-exports docFromDom docFromHTML​ Re-exports docFromHTML docStore​ Re-exports docStore docToHTML​ Re-exports docToHTML Editor​ Re-exports Editor EditorChangeEvent​ Re-exports EditorChangeEvent EditorChangeEventInit​ Re-exports EditorChangeEventInit EditorEventMap​ Re-exports EditorEventMap EditorFormatEvent​ Re-exports EditorFormatEvent EditorFormatEventInit​ Re-exports EditorFormatEventInit EditorOptions​ Re-exports EditorOptions EditorRange​ Re-exports EditorRange editorStores​ Re-exports editorStores EditorStores​ Re-exports EditorStores EditorTextChange​ Re-exports EditorTextChange embed​ Re-exports embed EmbedType​ Re-exports EmbedType EventDispatcher​ Re-exports EventDispatcher focusStore​ Re-exports focusStore format​ Re-exports format FormattingOptions​ Re-exports FormattingOptions FormatType​ Re-exports FormatType FromDom​ Re-exports FromDom FromDomOptions​ Re-exports FromDomOptions fromNode​ Re-exports fromNode getBoudingBrowserRange​ Re-exports getBoudingBrowserRange getBrowserRange​ Re-exports getBrowserRange getChangedRanges​ Re-exports getChangedRanges getIndexFromNode​ Re-exports getIndexFromNode getIndexFromNodeAndOffset​ Re-exports getIndexFromNodeAndOffset getIndexFromPoint​ Re-exports getIndexFromPoint getLineElementAt​ Re-exports getLineElementAt getLineInfoFromPoint​ Re-exports getLineInfoFromPoint getLineNodeEnd​ Re-exports getLineNodeEnd getLineNodeStart​ Re-exports getLineNodeStart getNodeAndOffset​ Re-exports getNodeAndOffset getNodeLength​ Re-exports getNodeLength getNodesForRange​ Re-exports getNodesForRange getSelection​ Re-exports getSelection h​ Re-exports h H​ Re-exports H Handler​ Re-exports Handler hasFormat​ Re-exports hasFormat header​ Re-exports header history​ Re-exports history HistoryModule​ Re-exports HistoryModule hr​ Re-exports hr HTMLLineElement​ Re-exports HTMLLineElement image​ Re-exports image initHistory​ Re-exports initHistory InlineMenu​ Renames and re-exports BubbleMenu inlineToHTML​ Re-exports inlineToHTML intersect​ Re-exports intersect isBRPlaceholder​ Re-exports isBRPlaceholder isEqual​ Renames and re-exports default italic​ Re-exports italic KeyboardEventWithShortcut​ Re-exports KeyboardEventWithShortcut line​ Re-exports line Line​ Renames and re-exports default LineData​ Re-exports LineData LineIds​ Re-exports LineIds LineInfo​ Re-exports LineInfo LineIterator​ Re-exports LineIterator LineOp​ Renames and re-exports default LineOpIterator​ Re-exports LineOpIterator LineRanges​ Re-exports LineRanges lineReplace​ Re-exports lineReplace lineReplacements​ Re-exports lineReplacements LineType​ Re-exports LineType link​ Re-exports link linkReplace​ Re-exports linkReplace linkReplacements​ Re-exports linkReplacements list​ Re-exports list mark​ Re-exports mark markReplace​ Re-exports markReplace markReplacements​ Re-exports markReplacements Module​ Re-exports Module ModuleInitializer​ Re-exports ModuleInitializer ModuleInitializers​ Re-exports ModuleInitializers Modules​ Re-exports Modules MultiLineRenderer​ Re-exports MultiLineRenderer normalizeRange​ Re-exports normalizeRange Op​ Renames and re-exports default OpIterator​ Re-exports OpIterator options​ Re-exports options Options​ Re-exports Options paragraph​ Re-exports paragraph PasteEvent​ Re-exports PasteEvent PasteEventInit​ Re-exports PasteEventInit PasteModuleOptions​ Re-exports PasteModuleOptions PasteOptions​ Re-exports PasteOptions patch​ Re-exports patch placeholder​ Re-exports placeholder Props​ Re-exports Props React​ Re-exports React Readable​ Re-exports Readable recycleNode​ Re-exports recycleNode render​ Re-exports render renderChanges​ Re-exports renderChanges renderCombined​ Re-exports renderCombined renderDoc​ Re-exports renderDoc Renderer​ Re-exports Renderer renderInline​ Re-exports renderInline renderLine​ Re-exports renderLine renderMultiLine​ Re-exports renderMultiLine renderSingleLine​ Re-exports renderSingleLine RenderWhat​ Re-exports RenderWhat Replacement​ Re-exports Replacement Root​ Renames and re-exports BubbleMenu rootStore​ Re-exports rootStore selectionStore​ Re-exports selectionStore setLineNodesRanges​ Re-exports setLineNodesRanges setSelection​ Re-exports setSelection ShortcutEvent​ Re-exports ShortcutEvent ShortcutEventInit​ Re-exports ShortcutEventInit shortcutFromEvent​ Re-exports shortcutFromEvent Shortcuts​ Re-exports Shortcuts ShouldCombine​ Re-exports ShouldCombine smartEntry​ Re-exports smartEntry smartQuotes​ Re-exports smartQuotes Source​ Re-exports Source SourceString​ Re-exports SourceString StackEntry​ Re-exports StackEntry Subscriber​ Re-exports Subscriber TextChange​ Renames and re-exports default TextDocument​ Renames and re-exports default textNodeLength​ Re-exports textNodeLength textReplace​ Re-exports textReplace TextReplacement​ Re-exports TextReplacement textReplacements​ Re-exports textReplacements Toolbar​ Renames and re-exports BubbleMenu transformHistoryStack​ Re-exports transformHistoryStack TypeMap​ Re-exports TypeMap Types​ Re-exports Types Typeset​ Re-exports Typeset TypesetTypes​ Re-exports TypesetTypes underline​ Re-exports underline undoStack​ Re-exports undoStack UndoStack​ Re-exports UndoStack Unsubscriber​ Re-exports Unsubscriber VChild​ Re-exports VChild virtualRendering​ Re-exports virtualRendering VirtualRenderWhat​ Re-exports VirtualRenderWhat VNode​ Re-exports VNode","keywords":"","version":"Next"},{"title":"deltaToText","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/deltaToText","content":"deltaToText ai-research-agent / editor/document/deltaToText Functions​ deltaToText()​ function deltaToText(delta): string Parameters​ Parameter\tType delta default Returns​ string","keywords":"","version":"Next"},{"title":"EditorRange","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/EditorRange","content":"EditorRange ai-research-agent / editor/document/EditorRange Functions​ normalizeRange()​ function normalizeRange(range): EditorRange Parameters​ Parameter\tType range EditorRange Returns​ EditorRange Type Aliases​ EditorRange​ type EditorRange: [number, number]; ","keywords":"","version":"Next"},{"title":"default","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/LineOp/namespaces/default","content":"default ai-research-agent / editor/document/LineOp / default Functions​ iterator()​ function iterator(lines, lineIds?): LineOpIterator Parameters​ Parameter\tType lines default[] lineIds? LineIds Returns​ LineOpIterator length()​ function length(op): number Parameters​ Parameter\tType op default Returns​ number","keywords":"","version":"Next"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/Line/","content":"index ai-research-agent / editor/document/Line Index​ Namespaces​ default Classes​ LineIterator​ Constructors​ new LineIterator()​ new LineIterator(lines, lineIds?): LineIterator Parameters​ Parameter\tType lines default[] lineIds? LineIds Returns​ LineIterator Methods​ hasNext()​ hasNext(): boolean Returns​ boolean next()​ next(length?): default Parameters​ Parameter\tType length? number Returns​ default peek()​ peek(): default Returns​ default peekLength()​ peekLength(): number Returns​ number rest()​ rest(): default[] Returns​ default[] Properties​ index​ index: number; lineIds​ lineIds: LineIds; lines​ lines: default[]; offset​ offset: number; Interfaces​ default​ Properties​ attributes​ attributes: default; content​ content: default; id​ id: string; length​ length: number; Type Aliases​ LineIds​ type LineIds: Map&lt;string, default&gt;; LineRanges​ type LineRanges: Map&lt;default, any&gt;; ","keywords":"","version":"Next"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/LineOp/","content":"index ai-research-agent / editor/document/LineOp Index​ Namespaces​ default Classes​ LineOpIterator​ Constructors​ new LineOpIterator()​ new LineOpIterator(lines, lineIds?): LineOpIterator Parameters​ Parameter\tType lines default[] lineIds? LineIds Returns​ LineOpIterator Methods​ hasNext()​ hasNext(): boolean Returns​ boolean next()​ next(length?): default Parameters​ Parameter\tType length? number Returns​ default nextLine()​ nextLine(): default Returns​ default peek()​ peek(): default Returns​ default peekLength()​ peekLength(): number Returns​ number peekLine()​ peekLine(): default Returns​ default peekLineLength()​ peekLineLength(): number Returns​ number peekType()​ peekType(): string Returns​ string restCurrentLine()​ restCurrentLine(): default[] Returns​ default[] restLines()​ restLines(): default[] Returns​ default[] Properties​ lineIterator​ lineIterator: LineIterator; opIterator​ opIterator: OpIterator; ","keywords":"","version":"Next"},{"title":"default","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/Line/namespaces/default","content":"default ai-research-agent / editor/document/Line / default Functions​ create()​ function create( content, attributes, id?): default Parameters​ Parameter\tType content default attributes default id? string | LineIds Returns​ default createFrom()​ function createFrom( line?, content?, lineIds?): default Parameters​ Parameter\tType line? default content? default lineIds? LineIds Returns​ default createId()​ function createId(existing): string Parameters​ Parameter\tType\tDefault value existing LineIds EMPTY_MAP Returns​ string equal()​ function equal(value, other): boolean Parameters​ Parameter\tType value default other default Returns​ boolean fromDelta()​ function fromDelta(delta, existing?): default[] Parameters​ Parameter\tType delta default existing? LineIds Returns​ default[] getId()​ function getId(line): string Parameters​ Parameter\tType line default Returns​ string getLineRanges()​ function getLineRanges(lines): LineRanges Parameters​ Parameter\tType lines default[] Returns​ LineRanges iterator()​ function iterator(lines, lineIds?): LineIterator Parameters​ Parameter\tType lines default[] lineIds? LineIds Returns​ LineIterator length()​ function length(line): number Parameters​ Parameter\tType line default Returns​ number linesToLineIds()​ function linesToLineIds(lines): Map&lt;any, any&gt; Parameters​ Parameter\tType lines default[] Returns​ Map&lt;any, any&gt; toDelta()​ function toDelta(lines): default Parameters​ Parameter\tType lines default[] Returns​ default","keywords":"","version":"Next"},{"title":"modules","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules","content":"modules ai-research-agent / editor/modules Functions​ input()​ function input(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypeallowComposition() destroy() init() keyboard()​ function keyboard(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypedestroy() init() paste()​ function paste(editor, options?): object Parameters​ Parameter\tType editor Editor options? PasteModuleOptions Returns​ object Name\tTypecommands\t{ paste: (__namedParameters) =&gt; void; } destroy() init() rendering()​ function rendering(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTyperender\t(what?) =&gt; void destroy() selection()​ function selection(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypepause\t() =&gt; void renderSelection\t() =&gt; void resume\t() =&gt; void destroy() init() References​ addShortcutsToEvent​ Re-exports addShortcutsToEvent applyDecorations​ Re-exports applyDecorations copy​ Re-exports copy CopyData​ Re-exports CopyData CopyOptions​ Re-exports CopyOptions DecorateEvent​ Re-exports DecorateEvent DecorateEventInit​ Re-exports DecorateEventInit decorations​ Re-exports decorations Decorations​ Re-exports Decorations DecorationsModule​ Re-exports DecorationsModule Decorator​ Re-exports Decorator defaultHandlers​ Re-exports defaultHandlers defaultModules​ Re-exports defaultModules Handler​ Re-exports Handler history​ Re-exports history HistoryModule​ Re-exports HistoryModule initHistory​ Re-exports initHistory KeyboardEventWithShortcut​ Re-exports KeyboardEventWithShortcut lineReplace​ Re-exports lineReplace lineReplacements​ Re-exports lineReplacements linkReplace​ Re-exports linkReplace linkReplacements​ Re-exports linkReplacements markReplace​ Re-exports markReplace markReplacements​ Re-exports markReplacements Options​ Re-exports Options PasteEvent​ Re-exports PasteEvent PasteEventInit​ Re-exports PasteEventInit PasteModuleOptions​ Re-exports PasteModuleOptions PasteOptions​ Re-exports PasteOptions placeholder​ Re-exports placeholder RenderWhat​ Re-exports RenderWhat Replacement​ Re-exports Replacement ShortcutEvent​ Re-exports ShortcutEvent ShortcutEventInit​ Re-exports ShortcutEventInit shortcutFromEvent​ Re-exports shortcutFromEvent smartEntry​ Re-exports smartEntry smartQuotes​ Re-exports smartQuotes StackEntry​ Re-exports StackEntry textReplace​ Re-exports textReplace TextReplacement​ Re-exports TextReplacement textReplacements​ Re-exports textReplacements transformHistoryStack​ Re-exports transformHistoryStack undoStack​ Re-exports undoStack UndoStack​ Re-exports UndoStack virtualRendering​ Re-exports virtualRendering VirtualRenderWhat​ Re-exports VirtualRenderWhat","keywords":"","version":"Next"},{"title":"copy","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/copy","content":"copy ai-research-agent / editor/modules/copy Functions​ copy()​ function copy(editor, options): object Parameters​ Parameter\tType\tDefault value editor Editor undefined options CopyOptions defaultOptions Returns​ object Name\tTypecommands\t{ getCopy: (selection?) =&gt; object; } destroy() init() Interfaces​ CopyData​ Properties​ html?​ optional html: string; selection?​ optional selection: null | EditorRange; text?​ optional text: string; CopyOptions​ Properties​ copyHTML?​ optional copyHTML: boolean; copyPlainText?​ optional copyPlainText: boolean; ","keywords":"","version":"Next"},{"title":"TextChange","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/TextChange","content":"TextChange ai-research-agent / editor/document/TextChange Functions​ hasFormat()​ function hasFormat(format, attributes): boolean Parameters​ Parameter\tType format default attributes default Returns​ boolean intersect()​ function intersect(value, other): object Parameters​ Parameter\tType value object other object Returns​ object Classes​ default​ Extended by​ EditorTextChange Accessors​ contentChanged​ Get Signature​ get contentChanged(): boolean Returns​ boolean selectionChanged​ Get Signature​ get selectionChanged(): boolean Returns​ boolean Constructors​ new default()​ new default( doc, delta, selection?, activeFormats?): default Parameters​ Parameter\tType doc null | default delta default selection? null | EditorRange activeFormats? default Returns​ default Methods​ apply()​ apply(): void Returns​ void clone()​ clone(): default Returns​ default delete()​ delete(range, options?): default Parameters​ Parameter\tType range null | EditorRange options? { dontFixNewline: boolean; } options.dontFixNewline? boolean Returns​ default formatLine()​ formatLine( range, format, decoration?): default Parameters​ Parameter\tType range number | EditorRange format default decoration? boolean Returns​ default formatText()​ formatText(range, format?): default Parameters​ Parameter\tType range EditorRange format? default Returns​ default insert()​ insert( at, insert, format?, options?): default Parameters​ Parameter\tType at number insert string | object format? default options? { dontFixNewline: boolean; } options.dontFixNewline? boolean Returns​ default insertContent()​ insertContent(at, content): default Parameters​ Parameter\tType at number content default Returns​ default isFor()​ isFor(doc): boolean Parameters​ Parameter\tType doc default Returns​ boolean removeFormat()​ removeFormat(range): default Parameters​ Parameter\tType range EditorRange Returns​ default select()​ select(at): default Parameters​ Parameter\tType at null | number | EditorRange Returns​ default setActiveFormats()​ setActiveFormats(activeFormats): default Parameters​ Parameter\tType activeFormats default Returns​ default setDelta()​ setDelta(delta): default Parameters​ Parameter\tType delta default Returns​ default toggleLineFormat()​ toggleLineFormat(range, format): default Parameters​ Parameter\tType range number | EditorRange format default Returns​ default toggleTextFormat()​ toggleTextFormat(range, format): default Parameters​ Parameter\tType range EditorRange format default Returns​ default transform()​ transform(change, priority?): default Parameters​ Parameter\tType change default priority? boolean Returns​ default transformAgainst()​ transformAgainst(delta, priority?): default Parameters​ Parameter\tType delta default | default priority? boolean Returns​ default transformSelection()​ transformSelection(selection, priority?): null | EditorRange Parameters​ Parameter\tType selection null | EditorRange priority? boolean Returns​ null | EditorRange Properties​ activeFormats?​ optional activeFormats: default; delta​ delta: default; doc​ doc: null | default; selection?​ optional selection: null | EditorRange; ","keywords":"","version":"Next"},{"title":"TextDocument","type":0,"sectionRef":"#","url":"/docs/functions/editor/document/TextDocument","content":"TextDocument ai-research-agent / editor/document/TextDocument Classes​ default​ Accessors​ change​ Get Signature​ get change(): default Returns​ default Constructors​ new default()​ new default(linesOrDocOrDelta?, selection?): default Parameters​ Parameter\tType\tDefault value linesOrDocOrDelta? default | default[] | default undefined selection? null | EditorRange null Returns​ default Methods​ apply()​ apply( change, selection?, throwOnError?): default Parameters​ Parameter\tType change default | default selection? null | EditorRange throwOnError? boolean Returns​ default equals()​ equals(other, options?): boolean Parameters​ Parameter\tType other default options? { contentOnly: boolean; } options.contentOnly? boolean Returns​ boolean getFormats()​ getFormats(at, options?): default Parameters​ Parameter\tType at number | EditorRange options? FormattingOptions Returns​ default getLineAt()​ getLineAt(at): default Parameters​ Parameter\tType at number Returns​ default getLineBy()​ getLineBy(id): default Parameters​ Parameter\tType id string Returns​ default getLineFormat()​ getLineFormat(at, options?): default Parameters​ Parameter\tType at number | EditorRange options? FormattingOptions Returns​ default getLineRange()​ getLineRange(at): EditorRange Parameters​ Parameter\tType at string | number | default Returns​ EditorRange getLineRanges()​ getLineRanges(at?): any[] Parameters​ Parameter\tType at? number | EditorRange Returns​ any[] getLinesAt()​ getLinesAt(atOrRange, encompassed?): default[] Parameters​ Parameter\tType atOrRange number | EditorRange encompassed? boolean Returns​ default[] getText()​ getText(range?): string Parameters​ Parameter\tType range? EditorRange Returns​ string getTextFormat()​ getTextFormat(at, options?): default Parameters​ Parameter\tType at number | EditorRange options? FormattingOptions Returns​ default replace()​ replace(delta?, selection?): default Parameters​ Parameter\tType delta? default selection? null | EditorRange Returns​ default slice()​ slice(start, end): default Parameters​ Parameter\tType\tDefault value start number 0 end number Infinity Returns​ default toDelta()​ toDelta(): default Returns​ default toJSON()​ toJSON(): default Returns​ default toString()​ toString(): string Returns​ string Properties​ byId​ byId: LineIds; length​ length: number; lines​ lines: default[]; selection​ selection: null | EditorRange; Interfaces​ FormattingOptions​ Properties​ allFormats?​ optional allFormats: boolean; nameOnly?​ optional nameOnly: boolean; ","keywords":"","version":"Next"},{"title":"defaults","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/defaults","content":"defaults ai-research-agent / editor/modules/defaults Variables​ defaultModules​ const defaultModules: object; Type declaration​ Name\tType copy (editor, options) =&gt; object decorations (editor) =&gt; DecorationsModule history (editor) =&gt; object input (editor) =&gt; object keyboard (editor) =&gt; object paste (editor, options?) =&gt; object rendering (editor) =&gt; object selection (editor) =&gt; object","keywords":"","version":"Next"},{"title":"input","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/input","content":"input ai-research-agent / editor/modules/input Functions​ input()​ function input(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypeallowComposition() destroy() init()\t","keywords":"","version":"Next"},{"title":"keyboard","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/keyboard","content":"keyboard ai-research-agent / editor/modules/keyboard Functions​ keyboard()​ function keyboard(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypedestroy() init()\t","keywords":"","version":"Next"},{"title":"history","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/history","content":"history ai-research-agent / editor/modules/history Functions​ history()​ function history(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypeclearHistory\t() =&gt; void commands\t{ redo: () =&gt; void; undo: () =&gt; void; } cutoffHistory\t() =&gt; void getStack\t() =&gt; UndoStack hasRedo\t() =&gt; boolean hasUndo\t() =&gt; boolean options\tOptions redo\t() =&gt; void setStack\t(value) =&gt; void shortcuts\t{ mac:Cmd+Shift+Z: string; mac:Cmd+Z: string; win:Ctrl+Y: string; win:Ctrl+Z: string; } undo\t() =&gt; void destroy() getActive() init() initHistory()​ function initHistory(initOptions): (editor) =&gt; object History is a view module for storing user changes and undoing/redoing those changes. Stores history for all user-generated changes. Like-changes will be combined until a selection or a delay timeout cuts off the combining. E.g. if a user types &quot;Hello&quot; the 5 changes will be combined into one history entry. If the user moves the cursor somewhere and then back to the end and types &quot; World&quot; the next 6 changes are combined separately from the first 5 because selection changes add a cutoff history entries. The default options can be overridden by passing alternatives to history. To add a timeout to force a cutoff after so many milliseconds set a delay like this: const modules = { history: history({ delay: 4000 }) }; Parameters​ Parameter\tType initOptions Partial&lt;Options&gt; Returns​ Function Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypeclearHistory\t() =&gt; void commands\t{ redo: () =&gt; void; undo: () =&gt; void; } cutoffHistory\t() =&gt; void getStack\t() =&gt; UndoStack hasRedo\t() =&gt; boolean hasUndo\t() =&gt; boolean options\tOptions redo\t() =&gt; void setStack\t(value) =&gt; void shortcuts\t{ mac:Cmd+Shift+Z: string; mac:Cmd+Z: string; win:Ctrl+Y: string; win:Ctrl+Z: string; } undo\t() =&gt; void destroy() getActive() init() transformHistoryStack()​ function transformHistoryStack(stack, delta): void Parameters​ Parameter\tType stack UndoStack delta default | default Returns​ void undoStack()​ function undoStack(): UndoStack Returns​ UndoStack Interfaces​ HistoryModule​ Methods​ destroy()​ destroy(): void Returns​ void Properties​ clearHistory()​ clearHistory: () =&gt; void; Returns​ void cutoffHistory()​ cutoffHistory: () =&gt; void; Returns​ void getStack()​ getStack: () =&gt; UndoStack; Returns​ UndoStack hasRedo()​ hasRedo: () =&gt; boolean; Returns​ boolean hasUndo()​ hasUndo: () =&gt; boolean; Returns​ boolean options​ options: Options; redo()​ redo: () =&gt; void; Returns​ void setStack()​ setStack: (value) =&gt; void; Parameters​ Parameter\tType value UndoStack Returns​ void undo()​ undo: () =&gt; void; Returns​ void Options​ Properties​ delay​ delay: number; maxStack​ maxStack: number; unrecordedSources​ unrecordedSources: Set&lt;string&gt;; StackEntry​ Properties​ redo​ redo: default; undo​ undo: default; UndoStack​ Properties​ redo​ redo: StackEntry[]; undo​ undo: StackEntry[]; ","keywords":"","version":"Next"},{"title":"placeholder","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/placeholder","content":"placeholder ai-research-agent / editor/modules/placeholder Functions​ placeholder()​ function placeholder(placeholder, options?): (editor) =&gt; object Set placeholder text in the editable area when there is no content. Then add the css: .placeholder { position: relative; } .placeholder::before { content: attr(data-placeholder); position: absolute; left: 0; right: 0; opacity: 0.5; } Parameters​ Parameter\tType placeholder string | Function options? PlaceholderOptions Returns​ Function Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypedestroy()\t","keywords":"","version":"Next"},{"title":"paste","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/paste","content":"paste ai-research-agent / editor/modules/paste Functions​ paste()​ function paste(editor, options?): object Parameters​ Parameter\tType editor Editor options? PasteModuleOptions Returns​ object Name\tTypecommands\t{ paste: (__namedParameters) =&gt; void; } destroy() init() Classes​ PasteEvent​ Extends​ Event Constructors​ new PasteEvent()​ new PasteEvent(type, init): PasteEvent Parameters​ Parameter\tType type string init PasteEventInit Returns​ PasteEvent Overrides​ Event.constructor Properties​ delta​ delta: default; html?​ optional html: string; text?​ optional text: string; Interfaces​ PasteEventInit​ Extends​ EventInit Properties​ delta​ delta: default; html?​ optional html: string; text?​ optional text: string; PasteModuleOptions​ Properties​ allowHTMLPaste?​ optional allowHTMLPaste: boolean; htmlParser()?​ optional htmlParser: (editor, html) =&gt; default; Parameters​ Parameter\tType editor Editor html string Returns​ default PasteOptions​ Properties​ html?​ optional html: string; selection?​ optional selection: null | EditorRange; text?​ optional text: string; ","keywords":"","version":"Next"},{"title":"rendering","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/rendering","content":"rendering ai-research-agent / editor/modules/rendering Functions​ rendering()​ function rendering(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTyperender\t(what?) =&gt; void destroy() Interfaces​ RenderWhat​ Properties​ doc?​ optional doc: default; old?​ optional old: default; ","keywords":"","version":"Next"},{"title":"decorations","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/decorations","content":"decorations ai-research-agent / editor/modules/decorations Functions​ applyDecorations()​ function applyDecorations( vnode, attributes, defaultClasses?): VNode Parameters​ Parameter\tType vnode VNode attributes undefined | default defaultClasses? string[] Returns​ VNode decorations()​ function decorations(editor): DecorationsModule Parameters​ Parameter\tType editor Editor Returns​ DecorationsModule Classes​ DecorateEvent​ Extends​ Event Constructors​ new DecorateEvent()​ new DecorateEvent(type, init): DecorateEvent Parameters​ Parameter\tType type string init DecorateEventInit Returns​ DecorateEvent Overrides​ Event.constructor Properties​ change?​ optional change: default; changedLines?​ optional changedLines: default[]; doc​ doc: default; old​ old: default; Decorator​ Constructors​ new Decorator()​ new Decorator( name, doc, decoration, apply, remove): Decorator Parameters​ Parameter\tType name string doc default decoration undefined | default apply (name, updates) =&gt; void remove (name) =&gt; void Returns​ Decorator Methods​ apply()​ apply(): void Returns​ void clear()​ clear(range?): Decorator Parameters​ Parameter\tType range? EditorRange Returns​ Decorator clearLine()​ clearLine(value): Decorator Parameters​ Parameter\tType value string | number | default Returns​ Decorator clearLines()​ clearLines(lines): Decorator Parameters​ Parameter\tType lines default[] Returns​ Decorator decorateLine()​ decorateLine(range, decoration): Decorator Parameters​ Parameter\tType range number | EditorRange decoration Decorations Returns​ Decorator decorateText()​ decorateText(range, decoration): Decorator Parameters​ Parameter\tType range EditorRange decoration Decorations Returns​ Decorator getDecoration()​ getDecoration(): default Returns​ default hasDecorations()​ hasDecorations(): boolean Returns​ boolean insertDecoration()​ insertDecoration(at, decoration): Decorator Parameters​ Parameter\tType at number decoration Decorations Returns​ Decorator invert()​ invert(range?): default Parameters​ Parameter\tType range? EditorRange Returns​ default remove()​ remove(): void Returns​ void Properties​ change​ change: default; Interfaces​ DecorateEventInit​ Extends​ EventInit Properties​ change?​ optional change: default; changedLines?​ optional changedLines: default[]; doc​ doc: default; old​ old: default; Decorations​ Indexable​ [attributeName: string]: any Properties​ class?​ optional class: string; style?​ optional style: string; DecorationsModule​ Methods​ destroy()​ destroy(): void Returns​ void init()​ init(): void Returns​ void Properties​ clearDecorations()​ clearDecorations: () =&gt; void; Returns​ void doc​ readonly doc: default; gatherDecorations()​ gatherDecorations: (change?, changedLines?) =&gt; void; Parameters​ Parameter\tType change? default changedLines? default[] Returns​ void getDecorator()​ getDecorator: (name) =&gt; Decorator; Parameters​ Parameter\tType name string Returns​ Decorator old​ readonly old: default; removeDecorations()​ removeDecorations: (name) =&gt; boolean; Parameters​ Parameter\tType name string Returns​ boolean","keywords":"","version":"Next"},{"title":"selection","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/selection","content":"selection ai-research-agent / editor/modules/selection Functions​ selection()​ function selection(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypepause\t() =&gt; void renderSelection\t() =&gt; void resume\t() =&gt; void destroy() init()\t","keywords":"","version":"Next"},{"title":"scheduled-signal","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/scheduled-signal","content":"scheduled-signal ai-research-agent / editor/modules/scheduled-signal Functions​ readable()​ function readable(initialValue, start): object Parameters​ Parameter\tType\tDefault value initialValue any undefined start () =&gt; void noop Returns​ object Name\tTypeget\t() =&gt; any subscribe\t(subscriber, invalidate) =&gt; any writable()​ function writable(value, start): object Parameters​ Parameter\tType\tDefault value value any undefined start () =&gt; void noop Returns​ object Name\tTypeget\t() =&gt; any set\t(newValue) =&gt; void subscribe\t(subscriber, invalidate) =&gt; any update\t(fn) =&gt; void","keywords":"","version":"Next"},{"title":"smartQuotes","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/smartQuotes","content":"smartQuotes ai-research-agent / editor/modules/smartQuotes Functions​ smartQuotes()​ function smartQuotes(editor): object Replaces regular quotes with smart quotes as they are typed. Also affects pasted content. Uses the text-changing event to prevent the original change and replace it with the new one. This makes the smart- quotes act more seemlessly and includes them as part of regular text undo/redo instead of breaking it like the smart- entry conversions do. Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypedestroy()\t","keywords":"","version":"Next"},{"title":"tables","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/tables","content":"tables ai-research-agent / editor/modules/tables Functions​ table()​ function table(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypecommands\t{ addColumn: (direction) =&gt; void; addColumnLeft: () =&gt; void; addColumnRight: () =&gt; void; addRow: (direction) =&gt; void; addRowAbove: () =&gt; void; addRowBelow: () =&gt; void; deleteColumn: () =&gt; void; deleteRow: () =&gt; void; deleteTable: () =&gt; void; insertTable: (rows, columns) =&gt; void; }","keywords":"","version":"Next"},{"title":"shortcutFromEvent","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/shortcutFromEvent","content":"shortcutFromEvent ai-research-agent / editor/modules/shortcutFromEvent Functions​ addShortcutsToEvent()​ function addShortcutsToEvent(event): KeyboardEventWithShortcut Parameters​ Parameter\tType event KeyboardEventWithShortcut Returns​ KeyboardEventWithShortcut shortcutFromEvent()​ function shortcutFromEvent(event): string Returns the textual representation of a shortcut given a keyboard event. Examples of shortcuts: Cmd+L Cmd+Shift+M Ctrl+O Backspace T Right Shift+Down Shift+F1 Space Parameters​ Parameter\tType event KeyboardEvent Returns​ string Classes​ ShortcutEvent​ Extends​ KeyboardEvent Constructors​ new ShortcutEvent()​ new ShortcutEvent(type, init?): ShortcutEvent Parameters​ Parameter\tType type string init? ShortcutEventInit Returns​ ShortcutEvent Overrides​ KeyboardEvent.constructor Methods​ fromKeyboardEvent()​ static fromKeyboardEvent(event): ShortcutEvent Parameters​ Parameter\tType event KeyboardEvent Returns​ ShortcutEvent Properties​ modShortcut​ readonly modShortcut: string; osShortcut​ readonly osShortcut: string; shortcut​ readonly shortcut: string; Interfaces​ KeyboardEventWithShortcut​ Extends​ KeyboardEvent Properties​ modShortcut?​ optional modShortcut: string; osShortcut?​ optional osShortcut: string; shortcut?​ optional shortcut: string; ShortcutEventInit​ Extends​ KeyboardEventInit Properties​ shortcut?​ optional shortcut: string; ","keywords":"","version":"Next"},{"title":"popper","type":0,"sectionRef":"#","url":"/docs/functions/editor/popper","content":"popper ai-research-agent / editor/popper Variables​ OFFSCREEN_RECT​ const OFFSCREEN_RECT: DOMRect; ","keywords":"","version":"Next"},{"title":"smartEntry","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/smartEntry","content":"smartEntry ai-research-agent / editor/modules/smartEntry Functions​ lineReplace()​ function lineReplace( editor, index, prefix): boolean Allow text representations to format a line Parameters​ Parameter\tType editor Editor index number prefix string Returns​ boolean linkReplace()​ function linkReplace( editor, index, prefix): boolean Parameters​ Parameter\tType editor Editor index number prefix string Returns​ boolean markReplace()​ function markReplace( editor, index, prefix, wholeText): boolean Parameters​ Parameter\tType editor Editor index number prefix string wholeText string Returns​ boolean smartEntry()​ function smartEntry(handlers): (editor) =&gt; object Parameters​ Parameter\tType\tDefault value handlers Handler[] defaultHandlers Returns​ Function Parameters​ Parameter\tType editor Editor Returns​ object Name\tTypedestroy() textReplace()​ function textReplace( editor, index, prefix): boolean Parameters​ Parameter\tType editor Editor index number prefix string Returns​ boolean Type Aliases​ Handler()​ type Handler: (editor?, index?, prefix?, wholeText?) =&gt; void; Parameters​ Parameter\tType editor? Editor index? number prefix? string wholeText? string Returns​ void Replacement​ type Replacement: [RegExp, (captured, attr) =&gt; default]; TextReplacement​ type TextReplacement: [RegExp, (captured) =&gt; string]; Variables​ defaultHandlers​ const defaultHandlers: (editor, index, prefix) =&gt; boolean[]; Allow text representations to format a line Parameters​ Parameter\tType editor Editor index number prefix string Returns​ boolean lineReplacements​ const lineReplacements: Replacement[]; A list of [ RegExp, Function ] tuples to convert text into a formatted line with the attributes returned by the function. The function's argument will be the captured text from the regular expression. linkReplacements​ const linkReplacements: Replacement[]; markReplacements​ const markReplacements: Replacement[]; A list of [ RegExp, Function ] tuples to convert text into formatted text with the attributes returned by the function. The function's argument will be the captured text from the regular expression. textReplacements​ const textReplacements: TextReplacement[]; A list of [ RegExp, Function ] tuples to convert text into another string of text which is returned by the function. The function's argument will be the captured text from the regular expression.","keywords":"","version":"Next"},{"title":"virtualRendering","type":0,"sectionRef":"#","url":"/docs/functions/editor/modules/virtualRendering","content":"virtualRendering ai-research-agent / editor/modules/virtualRendering Functions​ virtualRendering()​ function virtualRendering(editor): object Parameters​ Parameter\tType editor Editor Returns​ object Name\tTyperender\t(what?) =&gt; void destroy() init() Interfaces​ VirtualRenderWhat​ Properties​ doc?​ optional doc: default; old?​ optional old: default; selection​ selection: null | EditorRange; ","keywords":"","version":"Next"},{"title":"selection","type":0,"sectionRef":"#","url":"/docs/functions/editor/rendering/selection","content":"selection ai-research-agent / editor/rendering/selection Functions​ getSelection()​ function getSelection(editor): EditorRange | null Get the selection range from the current browser selection Parameters​ Parameter\tType editor Editor Returns​ EditorRange | null setSelection()​ function setSelection(editor, range): void Set the current browser selection to the given selection range Parameters​ Parameter\tType editor Editor range null | EditorRange Returns​ void","keywords":"","version":"Next"},{"title":"rendering","type":0,"sectionRef":"#","url":"/docs/functions/editor/rendering/","content":"rendering ai-research-agent / editor/rendering/rendering Functions​ combineLines()​ function combineLines(editor, lines): CombinedData Parameters​ Parameter\tType editor Editor lines default[] Returns​ CombinedData getChangedRanges()​ function getChangedRanges(oldC, newC): LineRanges Parameters​ Parameter\tType oldC Combined newC Combined Returns​ LineRanges getLineNodeEnd()​ function getLineNodeEnd(root, node): number Parameters​ Parameter\tType root HTMLElement node Node Returns​ number getLineNodeStart()​ function getLineNodeStart(root, node): number Parameters​ Parameter\tType root HTMLElement node Node Returns​ number render()​ function render(editor, doc): void Parameters​ Parameter\tType editor Editor doc default Returns​ void renderChanges()​ function renderChanges( editor, oldDoc, newDoc): void Parameters​ Parameter\tType editor Editor oldDoc default newDoc default Returns​ void renderCombined()​ function renderCombined( editor, combined, forHTML?): VNode[] Parameters​ Parameter\tType editor Editor combined Combined forHTML? boolean Returns​ VNode[] renderDoc()​ function renderDoc( editor, doc, forHTML?): VNode[] Parameters​ Parameter\tType editor Editor doc default forHTML? boolean Returns​ VNode[] renderInline()​ function renderInline( editor, line, forHTML?): VChild[] Parameters​ Parameter\tType editor Editor line default forHTML? boolean Returns​ VChild[] renderLine()​ function renderLine( editor, line, forHTML?): VNode Parameters​ Parameter\tType editor Editor line CombinedEntry forHTML? boolean Returns​ VNode renderMultiLine()​ function renderMultiLine( editor, lines, forHTML?): VNode Parameters​ Parameter\tType editor Editor lines default[] forHTML? boolean Returns​ VNode renderSingleLine()​ function renderSingleLine( editor, line, forHTML?): VNode Parameters​ Parameter\tType editor Editor line default forHTML? boolean Returns​ VNode setLineNodesRanges()​ function setLineNodesRanges(editor): void Parameters​ Parameter\tType editor Editor Returns​ void Interfaces​ HTMLLineElement​ Extends​ HTMLElement Properties​ key​ key: string; Type Aliases​ Combined​ type Combined: CombinedEntry[]; CombinedEntry​ type CombinedEntry: default | default[]; ","keywords":"","version":"Next"},{"title":"html","type":0,"sectionRef":"#","url":"/docs/functions/editor/rendering/html","content":"html ai-research-agent / editor/rendering/html Functions​ cleanText()​ function cleanText(delta): void Parameters​ Parameter\tType delta default Returns​ void deltaFromDom()​ function deltaFromDom(editor, options): default Parameters​ Parameter\tType\tDefault value editor Editor undefined options FromDomOptions defaultOptions Returns​ default deltaFromHTML()​ function deltaFromHTML( editor, html, options?): default Parameters​ Parameter\tType editor Editor html string options? DeltaFromHTMLOptions Returns​ default docFromDom()​ function docFromDom(editor, root): default Parameters​ Parameter\tType editor Editor root HTMLElement Returns​ default docFromHTML()​ function docFromHTML( editor, html, selection?): default Parameters​ Parameter\tType editor Editor html string selection? null | EditorRange Returns​ default docToHTML()​ function docToHTML(editor, doc): string Parameters​ Parameter\tType editor Editor doc default Returns​ string fromNode()​ function fromNode(editor, dom): undefined | default | default[] Parameters​ Parameter\tType editor Editor dom HTMLElement Returns​ undefined | default | default[] inlineToHTML()​ function inlineToHTML(editor, delta): string Parameters​ Parameter\tType editor Editor delta default Returns​ string isBRPlaceholder()​ function isBRPlaceholder(editor, node): boolean Parameters​ Parameter\tType editor Editor node Node Returns​ boolean Interfaces​ DeltaFromHTMLOptions​ Properties​ collapseWhitespace?​ optional collapseWhitespace: boolean; possiblePartial?​ optional possiblePartial: boolean; FromDomOptions​ Properties​ collapseWhitespace?​ optional collapseWhitespace: boolean; endNode?​ optional endNode: Node; includeIds?​ optional includeIds: boolean; offset?​ optional offset: number; possiblePartial?​ optional possiblePartial: boolean; root?​ optional root: HTMLElement; startNode?​ optional startNode: Node; Variables​ BLOCK_ELEMENTS​ const BLOCK_ELEMENTS: &quot;address, article, aside, blockquote, editor, dd, div, dl, dt, fieldset, figcaption, figure, footer, form, header, hr, li, main, nav, noscript, ol, output, p, pre, section, table, tfoot, ul, video&quot; = 'address, article, aside, blockquote, editor, dd, div, dl, dt, fieldset, figcaption, figure, footer, form, header, hr, li, main, nav, noscript, ol, output, p, pre, section, table, tfoot, ul, video'; ","keywords":"","version":"Next"},{"title":"position","type":0,"sectionRef":"#","url":"/docs/functions/editor/rendering/position","content":"position ai-research-agent / editor/rendering/position Functions​ getBoudingBrowserRange()​ function getBoudingBrowserRange(editor, range): Range Parameters​ Parameter\tType editor Editor range EditorRange Returns​ Range getBrowserRange()​ function getBrowserRange(editor, range): Range Parameters​ Parameter\tType editor Editor range EditorRange Returns​ Range getIndexFromNode()​ function getIndexFromNode(editor, startNode): number Parameters​ Parameter\tType editor Editor startNode Node Returns​ number getIndexFromNodeAndOffset()​ function getIndexFromNodeAndOffset( editor, node, offset, current?): number Parameters​ Parameter\tType editor Editor node Node offset number current? null | number Returns​ number getIndexFromPoint()​ function getIndexFromPoint( editor, x, y): null | number Parameters​ Parameter\tType editor Editor x number y number Returns​ null | number getLineElementAt()​ function getLineElementAt(editor, index): undefined | HTMLLineElement Parameters​ Parameter\tType editor Editor index number Returns​ undefined | HTMLLineElement getLineInfoFromPoint()​ function getLineInfoFromPoint(editor, y): LineInfo | undefined Parameters​ Parameter\tType editor Editor y number Returns​ LineInfo | undefined getNodeAndOffset()​ function getNodeAndOffset( editor, index, direction): NodeOffsetAndFrozen Parameters​ Parameter\tType editor Editor index number direction 0 | 1 Returns​ NodeOffsetAndFrozen getNodeLength()​ function getNodeLength(editor, parentNode): number Parameters​ Parameter\tType editor Editor parentNode Node Returns​ number getNodesForRange()​ function getNodesForRange(editor, range): [Node | null, number, Node | null, number] Parameters​ Parameter\tType editor Editor range EditorRange Returns​ [Node | null, number, Node | null, number] textNodeLength()​ function textNodeLength(lines, node): number Parameters​ Parameter\tType lines Types&lt;BasicType&gt; node Node Returns​ number Interfaces​ LineInfo​ Properties​ belowMid​ belowMid: boolean; element​ element: HTMLLineElement; line​ line: default; rect​ rect: DOMRect; ","keywords":"","version":"Next"},{"title":"walker","type":0,"sectionRef":"#","url":"/docs/functions/editor/rendering/walker","content":"walker ai-research-agent / editor/rendering/walker Functions​ createTreeWalker()​ function createTreeWalker(root, filter?): TreeWalker Parameters​ Parameter\tType root Node filter? (node) =&gt; number | boolean Returns​ TreeWalker","keywords":"","version":"Next"},{"title":"Source","type":0,"sectionRef":"#","url":"/docs/functions/editor/Source","content":"Source ai-research-agent / editor/Source Enumerations​ Source​ Enumeration Members​ Enumeration Member\tValue api &quot;api&quot; history &quot;history&quot; input &quot;input&quot; paste &quot;paste&quot; user &quot;user&quot; Type Aliases​ SourceString​ type SourceString: Source | string; ","keywords":"","version":"Next"},{"title":"vdom","type":0,"sectionRef":"#","url":"/docs/functions/editor/rendering/vdom","content":"vdom ai-research-agent / editor/rendering/vdom Functions​ h()​ Call Signature​ function h&lt;T, P, C&gt;( type, props?, ch?): T Type Parameters​ Type Parameter T P extends undefined | null | Props C extends VChild | VChild[] Parameters​ Parameter\tType type (props, children) =&gt; T props? P ch? C Returns​ T Call Signature​ function h( type, props?, ch?): VNode Parameters​ Parameter\tType type string props? null | Props ch? VChild | VChild[] Returns​ VNode patch()​ function patch( dom, vdom, oldKids?): Node Parameters​ Parameter\tType dom Node vdom VNode | VNode[] oldKids? ChildNode[] Returns​ Node recycleNode()​ function recycleNode(dom): any Parameters​ Parameter\tType dom Node Returns​ any Interfaces​ H()​ interface H&lt;T, P, C&gt;( type, props?, ch?): T Type Parameters​ Type Parameter T P extends undefined | null | Props C extends VChild | VChild[] Parameters​ Parameter\tType type (props, children) =&gt; T props? P ch? C Returns​ T interface H( type, props?, ch?): VNode Parameters​ Parameter\tType type string props? null | Props ch? VChild | VChild[] Returns​ VNode Props​ Indexable​ [key: string]: any VNode​ Properties​ children​ children: VChild[]; key​ key: any; props​ props: Props; type​ type: string; Type Aliases​ VChild​ type VChild: VNode | string; Variables​ options​ const options: object; Type declaration​ Name\tType\tDefault value renderKeys boolean false React​ const React: object; Type declaration​ Name\tType\tDefault value createElement H h","keywords":"","version":"Next"},{"title":"defaults","type":0,"sectionRef":"#","url":"/docs/functions/editor/typesetting/defaults","content":"defaults ai-research-agent / editor/typesetting/defaults Variables​ defaultTypes​ const defaultTypes: TypesetTypes; ","keywords":"","version":"Next"},{"title":"typesetting","type":0,"sectionRef":"#","url":"/docs/functions/editor/typesetting","content":"typesetting ai-research-agent / editor/typesetting References​ BasicType​ Re-exports BasicType blockquote​ Re-exports blockquote bold​ Re-exports bold br​ Re-exports br code​ Re-exports code codeblock​ Re-exports codeblock Commands​ Re-exports Commands defaultTypes​ Re-exports defaultTypes dl​ Re-exports dl embed​ Re-exports embed EmbedType​ Re-exports EmbedType format​ Re-exports format FormatType​ Re-exports FormatType FromDom​ Re-exports FromDom header​ Re-exports header hr​ Re-exports hr image​ Re-exports image italic​ Re-exports italic line​ Re-exports line LineData​ Re-exports LineData LineType​ Re-exports LineType link​ Re-exports link list​ Re-exports list mark​ Re-exports mark MultiLineRenderer​ Re-exports MultiLineRenderer paragraph​ Re-exports paragraph Renderer​ Re-exports Renderer ShouldCombine​ Re-exports ShouldCombine TypeMap​ Re-exports TypeMap Types​ Re-exports Types Typeset​ Re-exports Typeset TypesetTypes​ Re-exports TypesetTypes underline​ Re-exports underline","keywords":"","version":"Next"},{"title":"embeds","type":0,"sectionRef":"#","url":"/docs/functions/editor/typesetting/embeds","content":"embeds ai-research-agent / editor/typesetting/embeds Variables​ br​ const br: EmbedType; image​ const image: EmbedType; ","keywords":"","version":"Next"},{"title":"formats","type":0,"sectionRef":"#","url":"/docs/functions/editor/typesetting/formats","content":"formats ai-research-agent / editor/typesetting/formats Variables​ bold​ const bold: FormatType; code​ const code: FormatType; italic​ const italic: FormatType; link​ const link: FormatType; mark​ const mark: FormatType; underline​ const underline: FormatType; ","keywords":"","version":"Next"},{"title":"lines","type":0,"sectionRef":"#","url":"/docs/functions/editor/typesetting/lines","content":"lines ai-research-agent / editor/typesetting/lines Variables​ blockquote​ const blockquote: LineType; codeblock​ const codeblock: LineType; dl​ const dl: LineType; header​ const header: LineType; hr​ const hr: LineType; list​ const list: LineType; paragraph​ const paragraph: LineType; ","keywords":"","version":"Next"},{"title":"stores","type":0,"sectionRef":"#","url":"/docs/functions/editor/stores","content":"stores ai-research-agent / editor/stores Functions​ activeStore()​ function activeStore(editorStore): Readable&lt;default&gt; Parameters​ Parameter\tType editorStore Readable&lt;Editor&gt; Returns​ Readable&lt;default&gt; derivedEditorStore()​ function derivedEditorStore&lt;T&gt;( editorStore, defaultValue, changeEvents, update, checkEquality?): Readable&lt;T&gt; Type Parameters​ Type Parameter T Parameters​ Parameter\tType editorStore Readable&lt;Editor&gt; defaultValue T changeEvents string[] update (editor) =&gt; T checkEquality? boolean Returns​ Readable&lt;T&gt; docStore()​ function docStore(editorStore): Readable&lt;default&gt; Parameters​ Parameter\tType editorStore Readable&lt;Editor&gt; Returns​ Readable&lt;default&gt; editorStores()​ function editorStores(editor): EditorStores Parameters​ Parameter\tType editor Editor Returns​ EditorStores focusStore()​ function focusStore(editorStore): Readable&lt;boolean&gt; Parameters​ Parameter\tType editorStore Readable&lt;Editor&gt; Returns​ Readable&lt;boolean&gt; rootStore()​ function rootStore(editorStore): Readable&lt;undefined | HTMLElement&gt; Parameters​ Parameter\tType editorStore Readable&lt;Editor&gt; Returns​ Readable&lt;undefined | HTMLElement&gt; selectionStore()​ function selectionStore(editorStore): Readable&lt;null | EditorRange&gt; Parameters​ Parameter\tType editorStore Readable&lt;Editor&gt; Returns​ Readable&lt;null | EditorRange&gt; Interfaces​ EditorStores​ Methods​ updateEditor()​ updateEditor(editor): void Parameters​ Parameter\tType editor Editor Returns​ void Properties​ active​ active: Readable&lt;default&gt;; doc​ doc: Readable&lt;default&gt;; focus​ focus: Readable&lt;boolean&gt;; root​ root: Readable&lt;undefined | HTMLElement&gt;; selection​ selection: Readable&lt;null | EditorRange&gt;; Readable&lt;T&gt;​ Type Parameters​ Type Parameter T Methods​ get()​ get(): T Return the current value. Returns​ T subscribe()​ subscribe(callback): Unsubscriber Subscribe to changes with a callback. Returns an unsubscribe function. Parameters​ Parameter\tType callback Subscriber&lt;T&gt; Returns​ Unsubscriber Type Aliases​ Subscriber()&lt;T&gt;​ type Subscriber&lt;T&gt;: (value) =&gt; void; Callback to inform of a value updates. Type Parameters​ Type Parameter T Parameters​ Parameter\tType value T Returns​ void Unsubscriber()​ type Unsubscriber: () =&gt; void; Unsubscribes from value updates. Returns​ void","keywords":"","version":"Next"},{"title":"extract-author","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-author","content":"extract-author ai-research-agent / extractor/html-to-cite/extract-author Functions​ extractAuthor()​ function extractAuthor(document): null | object Extracts the author from the document and validates it as a human name Parameters​ Parameter\tType\tDescription document Document Returns​ null | object author_cite, author_short, author_type - or null if no valid author found","keywords":"","version":"Next"},{"title":"extract-cite","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-cite","content":"extract-cite ai-research-agent / extractor/html-to-cite/extract-cite Extract​ extractCite()​ function extractCite(document, options): object 📚💎 Extract Expert Excerpt​ Extract author, date, source, and title from HTML using meta tags and common class names. Validates human name from author string to check against common list of 90k first names, last names,and organizations to infer if it should be reversed starting by author last name (accounting for affixes/titles), since organizations are not reversed.Article Extraction Benchmark Parameters​ Parameter\tType\tDescription document Document dom object or html string with article content options {} ‐ Returns​ object An object containing extracted citation information. Name\tTypeauthor\tstring author_cite\tstring author_short\tstring date\tstring source\tstring title\tstring Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"EventDispatcher","type":0,"sectionRef":"#","url":"/docs/functions/editor/util/EventDispatcher","content":"EventDispatcher ai-research-agent / editor/util/EventDispatcher Classes​ EventDispatcher&lt;T&gt;​ Extended by​ Editor Type Parameters​ Type Parameter\tDefault type T extends Record&lt;string, any&gt; Record&lt;string, Event&gt; Constructors​ new EventDispatcher()​ new EventDispatcher&lt;T&gt;(): EventDispatcher&lt;T&gt; Returns​ EventDispatcher&lt;T&gt; Methods​ addEventListener()​ Call Signature​ addEventListener&lt;K&gt;( type, listener, options?): void Type Parameters​ Type Parameter K extends string | number | symbol Parameters​ Parameter\tType type K listener (event) =&gt; any options? AddEventListenerOptions Returns​ void Call Signature​ addEventListener( type, listener, options?): void Parameters​ Parameter\tType type string listener (event) =&gt; any options? AddEventListenerOptions Returns​ void dispatchEvent()​ dispatchEvent(event, catchErrors?): void Parameters​ Parameter\tType event Event catchErrors? boolean Returns​ void off()​ Call Signature​ off&lt;K&gt;( type, listener, options?): void Type Parameters​ Type Parameter K extends string | number | symbol Parameters​ Parameter\tType type K listener (event) =&gt; any options? AddEventListenerOptions Returns​ void Call Signature​ off( type, listener, options?): void Parameters​ Parameter\tType type string listener (event) =&gt; any options? AddEventListenerOptions Returns​ void on()​ Call Signature​ on&lt;K&gt;( type, listener, options?): void Type Parameters​ Type Parameter K extends string | number | symbol Parameters​ Parameter\tType type K listener (event) =&gt; any options? AddEventListenerOptions Returns​ void Call Signature​ on( type, listener, options?): void Parameters​ Parameter\tType type string listener (event) =&gt; any options? AddEventListenerOptions Returns​ void removeEventListener()​ Call Signature​ removeEventListener&lt;K&gt;( type, listener, options?): void Type Parameters​ Type Parameter K extends string | number | symbol Parameters​ Parameter\tType type K listener (event) =&gt; any options? AddEventListenerOptions Returns​ void Call Signature​ removeEventListener( type, listener, options?): void Parameters​ Parameter\tType type string listener (event) =&gt; any options? AddEventListenerOptions Returns​ void","keywords":"","version":"Next"},{"title":"extract-date","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-date/","content":"extract-date ai-research-agent / extractor/html-to-cite/extract-date/extract-date Functions​ extractDate()​ function extractDate( htmlobject, extensive_search?, original_date?, outputformat?, url?, verbose?, min_date?, max_date?, deferred_url_extractor?): null | string Extract date from document using various methods Parameters​ Parameter\tType\tDefault value\tDescription htmlobject Document undefined DOM object with article content extensive_search? boolean true perform extensive search if true original_date? boolean false return original date if true outputformat? string &quot;%Y-%m-%d&quot; output format url? string null URL of the page verbose? boolean false log debug messages if true min_date? Date null minimum date to consider max_date? Date null maximum date to consider deferred_url_extractor? boolean false if true, do not extract date from URL Returns​ null | string Extracted date or null if not found Author​ ai-research-agent (2024)Based on Barbaresi (2020) Variables​ CLASS_ATTRS​ const CLASS_ATTRS: Set&lt;string&gt;; DATE_ATTRIBUTES​ const DATE_ATTRIBUTES: Set&lt;string&gt;; ITEMPROP_ATTRS​ const ITEMPROP_ATTRS: Set&lt;string&gt;; ITEMPROP_ATTRS_MODIFIED​ const ITEMPROP_ATTRS_MODIFIED: Set&lt;string&gt;; ITEMPROP_ATTRS_ORIGINAL​ const ITEMPROP_ATTRS_ORIGINAL: Set&lt;string&gt;; NAME_MODIFIED​ const NAME_MODIFIED: Set&lt;string&gt;; NON_DIGITS_REGEX​ const NON_DIGITS_REGEX: RegExp; PROPERTY_MODIFIED​ const PROPERTY_MODIFIED: Set&lt;string&gt;; ","keywords":"","version":"Next"},{"title":"extract-date-quick","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-date/extract-date-quick","content":"extract-date-quick ai-research-agent / extractor/html-to-cite/extract-date/extract-date-quick Functions​ extractDateQuick()​ function extractDateQuick(document, url): null | string Extract date from document using various methods Parameters​ Parameter\tType\tDescription document Document DOM object with article content url string URL of the page Returns​ null | string Extracted date or null if not found","keywords":"","version":"Next"},{"title":"extract-source","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-source","content":"extract-source ai-research-agent / extractor/html-to-cite/extract-source Functions​ extractSource()​ function extractSource(document): object Extract source from document using common class names Parameters​ Parameter\tType\tDescription document Document document or dom object with article content Returns​ object source","keywords":"","version":"Next"},{"title":"date-validators","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-date/date-validators","content":"date-validators ai-research-agent / extractor/html-to-cite/extract-date/date-validators Functions​ check_date_input()​ function check_date_input(date_object, default_date): any Parameters​ Parameter\tType date_object any default_date any Returns​ any check_extracted_reference()​ function check_extracted_reference(reference, options): null | string Parameters​ Parameter\tType reference any options any Returns​ null | string compare_values()​ function compare_values( reference, attempt, options): any Parameters​ Parameter\tType reference any attempt any options any Returns​ any convert_date()​ function convert_date( datestring, inputformat, outputformat): any Parameters​ Parameter\tType datestring any inputformat any outputformat any Returns​ any filter_ymd_candidate()​ function filter_ymd_candidate( bestmatch, pattern, original_date, copyear, outputformat, min_date, max_date): any Parameters​ Parameter\tType bestmatch any pattern any original_date any copyear any outputformat any min_date any max_date any Returns​ any get_max_date()​ function get_max_date(max_date): any Parameters​ Parameter\tType max_date any Returns​ any get_min_date()​ function get_min_date(min_date): any Parameters​ Parameter\tType min_date any Returns​ any is_valid_date()​ function is_valid_date( date_input, outputformat, earliest, latest): boolean Parameters​ Parameter\tType date_input any outputformat any earliest any latest any Returns​ boolean is_valid_format()​ function is_valid_format(outputformat): boolean Parameters​ Parameter\tType outputformat any Returns​ boolean plausible_year_filter()​ function plausible_year_filter( htmlstring, pattern, yearpat, earliest, latest, incomplete): Map&lt;any, any&gt; Parameters​ Parameter\tType\tDefault value htmlstring any undefined pattern any undefined yearpat any undefined earliest any undefined latest any undefined incomplete boolean false Returns​ Map&lt;any, any&gt;","keywords":"","version":"Next"},{"title":"date-extractors","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-date/date-extractors","content":"date-extractors ai-research-agent / extractor/html-to-cite/extract-date/date-extractors Functions​ custom_parse()​ function custom_parse( string, outputformat, min_date, max_date): null | string Parameters​ Parameter\tType string any outputformat any min_date any max_date any Returns​ null | string discard_unwanted()​ function discard_unwanted(tree): any[] Parameters​ Parameter\tType tree any Returns​ any[] external_date_parser()​ function external_date_parser(string, outputformat): null | string Parameters​ Parameter\tType string any outputformat any Returns​ null | string extract_url_date()​ function extract_url_date(testurl, options): null | string Parameters​ Parameter\tType testurl any options any Returns​ null | string idiosyncrasies_search()​ function idiosyncrasies_search(htmlstring, options): null | string Parameters​ Parameter\tType htmlstring any options any Returns​ null | string img_search()​ function img_search(tree, options): null | string Parameters​ Parameter\tType tree any options any Returns​ null | string json_search()​ function json_search(tree, options): any Parameters​ Parameter\tType tree any options any Returns​ any pattern_search()​ function pattern_search( text, date_pattern, options): any Parameters​ Parameter\tType text any date_pattern any options any Returns​ any regex_parse()​ function regex_parse(string): null | Date Parameters​ Parameter\tType string any Returns​ null | Date try_date_expr()​ function try_date_expr( string, outputformat, extensive_search, min_date, max_date): null | string Parameters​ Parameter\tType string any outputformat any extensive_search any min_date any max_date any Returns​ null | string Variables​ COPYRIGHT_PATTERN​ const COPYRIGHT_PATTERN: RegExp; DATE_EXPRESSIONS​ const DATE_EXPRESSIONS: string; DATESTRINGS_CATCH​ const DATESTRINGS_CATCH: RegExp; DATESTRINGS_PATTERN​ const DATESTRINGS_PATTERN: RegExp; FAST_PREPEND​ const FAST_PREPEND: &quot;&quot; = ''; FREE_TEXT_EXPRESSIONS​ const FREE_TEXT_EXPRESSIONS: &quot;.//*[self::div or self::h2 or self::h3 or self::h4 or self::li or self::p or self::span or self::time or self::ul]/text()&quot; = &quot;.//*[self::div or self::h2 or self::h3 or self::h4 or self::li or self::p or self::span or self::time or self::ul]/text()&quot;; MAX_SEGMENT_LEN​ const MAX_SEGMENT_LEN: 52 = 52; MIN_SEGMENT_LEN​ const MIN_SEGMENT_LEN: 6 = 6; MMYYYY_PATTERN​ const MMYYYY_PATTERN: RegExp; MMYYYY_YEAR​ const MMYYYY_YEAR: RegExp; SELECT_YMD_PATTERN​ const SELECT_YMD_PATTERN: RegExp; SELECT_YMD_YEAR​ const SELECT_YMD_YEAR: RegExp; SIMPLE_PATTERN​ const SIMPLE_PATTERN: RegExp; SLASHES_PATTERN​ const SLASHES_PATTERN: RegExp; SLASHES_YEAR​ const SLASHES_YEAR: RegExp; SLOW_PREPEND​ const SLOW_PREPEND: &quot;&quot; = &quot;&quot;; THREE_CATCH​ const THREE_CATCH: RegExp; THREE_COMP_REGEX_A​ const THREE_COMP_REGEX_A: RegExp; THREE_COMP_REGEX_B​ const THREE_COMP_REGEX_B: RegExp; THREE_LOOSE_CATCH​ const THREE_LOOSE_CATCH: RegExp; THREE_LOOSE_PATTERN​ const THREE_LOOSE_PATTERN: RegExp; THREE_PATTERN​ const THREE_PATTERN: RegExp; TIMESTAMP_PATTERN​ const TIMESTAMP_PATTERN: RegExp; TWO_COMP_REGEX​ const TWO_COMP_REGEX: RegExp; YEAR_PATTERN​ const YEAR_PATTERN: RegExp; YMD_PATTERN​ const YMD_PATTERN: RegExp; YMD_YEAR​ const YMD_YEAR: RegExp; YYYYMM_CATCH​ const YYYYMM_CATCH: RegExp; YYYYMM_PATTERN​ const YYYYMM_PATTERN: RegExp; ","keywords":"","version":"Next"},{"title":"extract-title","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/extract-title","content":"extract-title ai-research-agent / extractor/html-to-cite/extract-title Functions​ extractTitle()​ function extractTitle(document): string Extract and clean title from document Parameters​ Parameter\tType\tDescription document Document DOM object with article content Returns​ string Extracted and cleaned title","keywords":"","version":"Next"},{"title":"human-names-recognize","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/human-names-recognize","content":"human-names-recognize ai-research-agent / extractor/html-to-cite/human-names-recognize Functions​ extractHumanName()​ function extractHumanName(author, options): Object Validates and formats an author name string by comparing it against common lists of first names, last names, name affixes, and organizations. This function determines whether the name should be reversed (starting with the last name) for citation purposes, as organizations are not reversed. It also checks against common salutations, middle parts, and titles to properly format the citation in &quot;Last, First Middle&quot; format. Parameters​ Parameter\tType\tDescription author string The author name string to be processed. options {} ‐ Returns​ Object An object containing the following properties: author_cite : The formatted author name for citation (e.g., &quot;Last, First Middle&quot;).author_short : A shortened version of the author name.author_type : The type of author, which can be one of: &quot;single&quot;: A single author or a two-word name.&quot;two-author&quot;: Two authors.&quot;more-than-two&quot;: More than two authors.&quot;organization&quot;: A non-human name (organization) that should not be reversed.","keywords":"","version":"Next"},{"title":"metadata-to-cite","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/metadata-to-cite","content":"metadata-to-cite ai-research-agent / extractor/html-to-cite/metadata-to-cite Functions​ extractCiteFromMetadata()​ function extractCiteFromMetadata(doc): object Extract cite info from common property names in webpage's metadata Parameters​ Parameter\tType\tDescription doc Document dom object of document Returns​ object author, date, title, source","keywords":"","version":"Next"},{"title":"url-to-domain","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/url-to-domain","content":"url-to-domain ai-research-agent / extractor/html-to-cite/url-to-domain Functions​ convertURLToDomain()​ function convertURLToDomain(domain): string Extract TLD and hostname from domain in Regex. There's two or more part TLDsso it is hard to tell if host.secondTLD.tld or host.tld is correct way to get root domain (e.g. abc.go.jp, abc.co.uk) Parameters​ Parameter\tType\tDescription domain string Returns​ string rootDomain","keywords":"","version":"Next"},{"title":"url-to-favicon","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-cite/url-to-favicon","content":"url-to-favicon ai-research-agent / extractor/html-to-cite/url-to-favicon Extract​ convertFaviconToBase64String()​ function convertFaviconToBase64String(url, size?): Promise&lt;string&gt; Convert a ICO/PNG favicon from URL using npm sharp into 16px image base64 string. This prevents the need for many requests to fetch for each site's favicon which can cause delays. Parameters​ Parameter\tType\tDefault value\tDescription url string undefined The URL of the favicon size? number 16 Pixel size of the resized favicon Returns​ Promise&lt;string&gt; Base64 string of resized favicon Throws​ If there's an issue downloading or processing Example​ const base64String = await convertFaviconToBase64String('https://www.amazon.com/favicon.ico'); console.log(base64String); ","keywords":"","version":"Next"},{"title":"typeset","type":0,"sectionRef":"#","url":"/docs/functions/editor/typesetting/typeset","content":"typeset ai-research-agent / editor/typesetting/typeset Functions​ embed()​ function embed(type): EmbedType Parameters​ Parameter\tType type EmbedType Returns​ EmbedType format()​ function format(type): FormatType Parameters​ Parameter\tType type FormatType Returns​ FormatType line()​ function line(type): LineType Parameters​ Parameter\tType type LineType Returns​ LineType Classes​ Types&lt;T&gt;​ A type store to hold types and make it easy to manage them. Type Parameters​ Type Parameter\tDefault type T extends BasicType BasicType Accessors​ default​ Get Signature​ get default(): T Returns​ T Constructors​ new Types()​ new Types&lt;T&gt;(types): Types&lt;T&gt; Parameters​ Parameter\tType types T[] Returns​ Types&lt;T&gt; Methods​ add()​ add(type): void Parameters​ Parameter\tType type T Returns​ void findByAttributes()​ Call Signature​ findByAttributes(attributes, fallbackToDefault): T Parameters​ Parameter\tType attributes undefined | default fallbackToDefault true Returns​ T Call Signature​ findByAttributes(attributes, fallbackToDefault?): undefined | T Parameters​ Parameter\tType attributes undefined | default fallbackToDefault? boolean Returns​ undefined | T findByNode()​ Call Signature​ findByNode(node, fallbackToDefault): T Parameters​ Parameter\tType node Node fallbackToDefault true Returns​ T Call Signature​ findByNode(node, fallbackToDefault?): undefined | T Parameters​ Parameter\tType node Node fallbackToDefault? boolean Returns​ undefined | T get()​ get(name): T Parameters​ Parameter\tType name string Returns​ T init()​ init(): void Returns​ void matches()​ matches(node): undefined | boolean Parameters​ Parameter\tType node null | Node Returns​ undefined | boolean priority()​ priority(name): number Parameters​ Parameter\tType name string Returns​ number remove()​ remove(type): void Parameters​ Parameter\tType type string | T Returns​ void Properties​ list​ list: T[]; priorities​ priorities: object; Index Signature​ [name: string]: number selector​ selector: string; types​ types: TypeMap&lt;T&gt;; Typeset​ Constructors​ new Typeset()​ new Typeset(types): Typeset Parameters​ Parameter\tType types TypesetTypes Returns​ Typeset Properties​ embeds​ embeds: Types&lt;EmbedType&gt;; formats​ formats: Types&lt;FormatType&gt;; lines​ lines: Types&lt;LineType&gt;; embed()​ static embed: (type) =&gt; EmbedType; Parameters​ Parameter\tType type EmbedType Returns​ EmbedType format()​ static format: (type) =&gt; FormatType; Parameters​ Parameter\tType type FormatType Returns​ FormatType line()​ static line: (type) =&gt; LineType; Parameters​ Parameter\tType type LineType Returns​ LineType Interfaces​ BasicType​ Extended by​ FormatTypeEmbedTypeLineType Properties​ commands()?​ optional commands: (editor) =&gt; Function | Commands; Parameters​ Parameter\tType editor Editor Returns​ Function | Commands fromDom?​ optional fromDom: false | FromDom; name​ name: string; render?​ optional render: Renderer; selector​ selector: string; shortcuts?​ optional shortcuts: string | Shortcuts; styleSelector?​ optional styleSelector: string; Commands​ Indexable​ [name: string]: (...args) =&gt; any EmbedType​ Extends​ BasicType Properties​ commands()?​ optional commands: (editor) =&gt; Function | Commands; Parameters​ Parameter\tType editor Editor Returns​ Function | Commands Inherited from​ BasicType.commands fromDom?​ optional fromDom: false | FromDom; Inherited from​ BasicType.fromDom name​ name: string; Inherited from​ BasicType.name noFill?​ optional noFill: boolean; render?​ optional render: Renderer; Inherited from​ BasicType.render selector​ selector: string; Inherited from​ BasicType.selector shortcuts?​ optional shortcuts: string | Shortcuts; Inherited from​ BasicType.shortcuts styleSelector?​ optional styleSelector: string; Inherited from​ BasicType.styleSelector FormatType​ Extends​ BasicType Properties​ commands()?​ optional commands: (editor) =&gt; Function | Commands; Parameters​ Parameter\tType editor Editor Returns​ Function | Commands Inherited from​ BasicType.commands fromDom?​ optional fromDom: false | FromDom; Inherited from​ BasicType.fromDom greedy?​ optional greedy: boolean; name​ name: string; Inherited from​ BasicType.name render?​ optional render: Renderer; Inherited from​ BasicType.render selector​ selector: string; Inherited from​ BasicType.selector shortcuts?​ optional shortcuts: string | Shortcuts; Inherited from​ BasicType.shortcuts styleSelector?​ optional styleSelector: string; Inherited from​ BasicType.styleSelector LineType​ Extends​ BasicType Properties​ child?​ optional child: boolean; commands()?​ optional commands: (editor) =&gt; Function | Commands; Parameters​ Parameter\tType editor Editor Returns​ Function | Commands Inherited from​ BasicType.commands contained?​ optional contained: boolean; defaultFollows?​ optional defaultFollows: boolean; fromDom?​ optional fromDom: false | FromDom; Inherited from​ BasicType.fromDom frozen?​ optional frozen: boolean; indentable?​ optional indentable: boolean; name​ name: string; Inherited from​ BasicType.name nextLineAttributes()?​ optional nextLineAttributes: (attributes) =&gt; default; Parameters​ Parameter\tType attributes default Returns​ default onEmptyEnter()?​ optional onEmptyEnter: (editor, line) =&gt; boolean; Parameters​ Parameter\tType editor Editor line default Returns​ boolean onEnter()?​ optional onEnter: (editor) =&gt; void; Parameters​ Parameter\tType editor Editor Returns​ void onTab()?​ optional onTab: (editor, shiftKey) =&gt; void; Parameters​ Parameter\tType editor Editor shiftKey boolean Returns​ void render?​ optional render: Renderer; Overrides​ BasicType.render renderMultiple?​ optional renderMultiple: MultiLineRenderer; selector​ selector: string; Inherited from​ BasicType.selector shortcuts?​ optional shortcuts: string | Shortcuts; Inherited from​ BasicType.shortcuts shouldCombine?​ optional shouldCombine: ShouldCombine; styleSelector?​ optional styleSelector: string; Inherited from​ BasicType.styleSelector TypeMap&lt;T&gt;​ Type Parameters​ Type Parameter\tDefault type T extends BasicType BasicType Indexable​ [name: string]: T TypesetTypes​ Properties​ embeds?​ optional embeds: (string | EmbedType)[]; formats?​ optional formats: (string | FormatType)[]; lines?​ optional lines: (string | LineType)[]; Type Aliases​ FromDom()​ type FromDom: (node) =&gt; any; Parameters​ Parameter\tType node HTMLElement Returns​ any LineData​ type LineData: [default, VChild[], string]; MultiLineRenderer()​ type MultiLineRenderer: (lines, editor, forHTML?) =&gt; VNode; Parameters​ Parameter\tType lines LineData[] editor Editor forHTML? boolean Returns​ VNode Renderer()​ type Renderer: (attributes, children, line, editor, forHTML?) =&gt; VNode; Parameters​ Parameter\tType attributes default children VChild[] line default editor Editor forHTML? boolean Returns​ VNode ShouldCombine()​ type ShouldCombine: (prev, next) =&gt; boolean; Parameters​ Parameter\tType prev default next default Returns​ boolean","keywords":"","version":"Next"},{"title":"extract-content-mercury","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-content/extract-content/extract-content-mercury","content":"extract-content-mercury ai-research-agent / extractor/html-to-content/extract-content/extract-content-mercury Extract​ extractMainContentFromHTML2()​ function extractMainContentFromHTML2(html, opts?): string HTML-to-Main-Content Extractor #2​ The algorithm starts by loading the HTML content using linkedom, a lightweight DOM parser for Node.js.It then applies a series of cleaning and scoring techniques to identify the main content of the page, starting with stripping unlikely candidates (e.g., elements with class names like &quot;comment&quot; or &quot;sidebar&quot;).The HTML is converted into a series of paragraph elements, which are then scored based on various factors such as text length, number of commas, and the presence of certain class names or IDs.The algorithm assigns scores to parent and grandparent elements based on the scores of their children, with parents receiving the full score and grandparents receiving half.After scoring, the algorithm finds the top candidate element by selecting the node with the highest score.The top candidate's siblings are then examined to see if they should be included in the main content, based on their scores and other factors like link density.The algorithm then cleans the selected content by removing unnecessary tags, attributes, and empty elements.It also handles special cases like cleaning up header tags, images, and other potentially irrelevant content.Throughout the process, the algorithm uses various regular expressions and scoring heuristics to identify positive and negative indicators of content relevance.Finally, the cleaned and extracted content is returned as an HTML string, representing the main body of the article or webpage. Article Extraction Benchmark Parameters​ Parameter\tType\tDescription html string The HTML content to extract from. opts? { cleanConditionally: boolean; stripUnlikelyCandidates: boolean; weightNodes: boolean; } The options for content extraction. opts.cleanConditionally? boolean default=true - Clean the node to remove superfluous content like forms, ads, etc. Initially, pass in the most restrictive options which will return the highest quality content. On each failure, retry with slightly more lax options. opts.stripUnlikelyCandidates? boolean default=true - Remove elements that match non-article- like criteria first (e.g., elements with a classname of &quot;comment&quot;). opts.weightNodes? boolean default=true - Modify an element's score based on certain classNames or IDs (e.g., subtract if a node has a className of 'comment', add if a node has an ID of 'entry-content'). Returns​ string The extracted content as an HTML string, or null if extraction fails. Author​ ai-research-agent (2024)Based on Postlight Mercury Parser (2017-) Example​ var url = &quot;https://en.wikipedia.org/wiki/David_Hilbert&quot; var html = await (await fetch(url)).text(); var content = extractMainContentFromHTML(html); console.log(content); // HTML content of main article body ","keywords":"","version":"Next"},{"title":"html-to-content","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-content/","content":"html-to-content ai-research-agent / extractor/html-to-content/html-to-content Functions​ extractContentAndCite()​ function extractContentAndCite(documentOrHTML, options): Object Extracts the main content and citation information from a document or HTML string Parameters​ Parameter\tType\tDescription documentOrHTML string | object The document or HTML string to extract content from options { formatting: boolean; images: boolean; links: boolean; url: string; useExtractor2: boolean; } Optional configuration options options.formatting boolean default=true - Whether to preserve formatting in the extracted content options.images boolean default=true - Whether to include images in the extracted content options.links boolean default=true - Whether to include links in the extracted content options.url string The URL of the original document, if available, for absolutify-ing URLs options.useExtractor2 boolean default=false - false uses Mozilla Readability, true uses Postlight Mercury. then use the alternate if the first returns less than 200 characters Returns​ Object The extracted content and citation information Author​ ai-research-agent (2024) Interfaces​ ExtractedContent​ Properties​ author​ author: string; The author's name author_cite​ author_cite: string; The full citation for the author author_short​ author_short: string; A shortened version of the author's name date​ date: string; The publication date html​ html: string; The extracted main content in HTML format source​ source: string; The source of the content title​ title: string; The title of the content","keywords":"","version":"Next"},{"title":"extract-content-readability","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-content/extract-content/extract-content-readability","content":"extract-content-readability ai-research-agent / extractor/html-to-content/extract-content/extract-content-readability Extract​ extractMainContentFromHTML()​ function extractMainContentFromHTML(html, options?): Element HTML-to-Main-Content Extractor #1​ The function extracts main content with regex patterns, cleaning HTML, scoring nodes based on content indicators like paragraphs and id/class names, selecting the top candidate, extracting it, and cleaning up content around it. Define regular expressions: Various regex patterns are defined to identify content and non-content areas. Define helper functions: normalizeSpaces: Normalizes whitespace in a string.stripTags: Removes all HTML tags from a string.getTextLength: Calculates the length of text after stripping tags.calculateLinkDensity: Calculates the ratio of link text to total text. Clean HTML: Remove unlikely candidates (e.g., ads, sidebars) from the HTML. Define scoring function: scoreNode: Assigns a score to an HTML node based on content and attributes.Increases score for positive indicators (e.g., article, body, content tags).Decreases score for negative indicators (e.g., hidden, footer, sidebar tags).Adds to score based on paragraph tags and text length. Find and score candidate nodes: Identify potential content nodes in the cleaned HTML.Score each node using the scoreNode function. Select top candidate: Sort candidates by score and select the highest-scoring node. Extract content: Use regex to extract content around the top candidate node. Clean up extracted content: Remove script and style tags and their contents.Process anchor tags based on content density.Keep only specific HTML tags (a, p, img, h1-h6, ul, ol, li).Remove excess whitespace from the final content. Article Extraction Benchmark Parameters​ Parameter\tType\tDescription html any ‐ options? { minContentLength: number; minScore: number; minTextLength: number; retryLength: number; } options.minContentLength? number default=140 - Minimum length of content to be considered valid options.minScore? number default=20 - Minimum score for content to be considered valid options.minTextLength? number default=25 - Minimum length of text to be considered valid options.retryLength? number default=250 - Length to retry content extraction if initial attempt fails Returns​ Element Extracted HTML element of main content such as article body Example​ var url = &quot;https://www.nytimes.com/2024/08/28/business/telegram-ceo-pavel-durov-charged.html&quot; const html = await (await fetch(url)).text(); var articleContent = extractMainContentFromHTML(html); Author​ ai-research-agent (2024)Based on Mozilla Readability (2015), Arc90 (2010)","keywords":"","version":"Next"},{"title":"html-to-basic-html","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-content/html-to-basic-html","content":"html-to-basic-html ai-research-agent / extractor/html-to-content/html-to-basic-html HTML Utilities​ convertHTMLToBasicHTML()​ function convertHTMLToBasicHTML(html, options?): string Strip HTML to ~30 basic markup HTML tags, lists, tables, images. Convert anchors and relative urls to absolute urls. Basic HTML supports the same elements as Markdown, which is used in writing plain text. Markdown is converted to HTML anyways to display it, and it is better to edit basic HTML in a rich text editor. Mozilla DOM Reference Source Code of Browser HTML DOM RegExp JS V8 Code Parameters​ Parameter\tType\tDescription html string Any page's HTML to process options? { allowedAttributes: string; allowTags: string; formatting: boolean; images: boolean; links: boolean; url: string; videos: boolean; } options.allowedAttributes? string default=&quot;text,tag,href, src,type,width, height,id,data&quot; List of allowed HTML attributes options.allowTags? string default=&quot;br,p,u,b,i ,em,strong,h1,h2,h3,h4, h5,h6,blockquote, code,ul,ol,li,dd,dl, table,th,tr,td,sub,sup&quot; - Comma-separated list of allowed HTML tags. options.formatting? boolean default=true - Whether to include formatting options.images? boolean default=true - Whether to include images options.links? boolean default=true - Whether to include links options.url? string base URL for converting relative URLs to absolute options.videos? boolean default=true - Whether to include videos or not Returns​ string basic text formatting html Author​ ai-research-agent (2024) Other​ addDOMFunctions()​ function addDOMFunctions(domObject): any Parameters​ Parameter\tType domObject any Returns​ any","keywords":"","version":"Next"},{"title":"pdf-to-html","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/","content":"pdf-to-html ai-research-agent / extractor/pdf-to-html/pdf-to-html Extract​ convertPDFToHTML()​ function convertPDFToHTML(pdfURLOrBuffer, options?): string | Object Convert PDF to HTML​ Extracts formatted text from PDF with parsing of linebreaks , page headers, footnotes, and section headings. Supports fonts, links, bold, italics, lists, headings, headers, footnotes, and Table of Contents, Quotes, and Code Blocks, . Removes repeated headers, links footnote anchors to the footnote, and preserves number of the PDF page with invisible I element. This function uses pdfjs-serverlessto work in more environments than PDF.js-based tools: Cloudflare workers, serverless, node.js, and front-end only. Parameters​ Parameter\tType\tDescription pdfURLOrBuffer string URL to a PDF file or buffer from fs.readFile options? { addPageNumbers: boolean; removePageHeaders: boolean; } options.addPageNumbers? boolean default=false - Adds # to end of each page options.removePageHeaders? boolean default=true - Removes repeated headers found on each page Returns​ string | Object HTML formatted text Author​ ai-research-agent (2024),pdf-to-markdown (2017),pdf.js (2012-),","keywords":"","version":"Next"},{"title":"html-utils","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-content/html-utils","content":"html-utils ai-research-agent / extractor/html-to-content/html-utils HTML Utilities​ convertHTMLToEscapedHTML()​ function convertHTMLToEscapedHTML(str, unescape): string Converts HTML special characters like &amp;&quot;'`’ to &amp; escaped codes or vice versa. It handles named entities and hexadecimal numeric character references. Parameters​ Parameter\tType\tDefault value\tDescription str string undefined The string to process. unescape boolean true default=true - If true, converts &amp; codes to characters. If false, converts characters to codes. Returns​ string The processed string. Example​ var normalHTML = convertHTMLToEscapedHTML('&amp;lt;p&amp;gt;This &amp;amp; that &amp;copy; 2023 '+ '&amp;quot;Quotes&amp;quot;&amp;#39;Apostrophes&amp;#39; &amp;euro;100 &amp;#x263A;&amp;lt;/p&amp;gt;', true) console.log(normalHTML) // Returns: &quot;&lt;p&gt;This &amp; that © 2023 &quot;Quotes&quot; 'Apostrophes' €100 ☺&lt;/p&gt;&quot; convertMarkdownToHTML()​ function convertMarkdownToHTML(content, toHtml): string Converts Markdown text to HTML. It handles the following Markdown elements: Headers (h1 to h6)Bold textItalic textUnordered listsOrdered listsParagraphsImagesLinksCode blocks Parameters​ Parameter\tType\tDefault value\tDescription content string undefined The Markdown or HTML content to be converted. toHtml boolean true default=true - If true, converts Markdown to HTML. If false, converts HTML to Markdown. Returns​ string The resulting HTML string. Example​ const markdown = &quot;# Header\\n\\nThis is **bold** and *italic* text.\\n\\n* List item 1\\n* List item 2&quot;; const html = convertMarkdownToHTML(markdown); console.log(html); // Output: // &lt;h1&gt;Header&lt;/h1&gt; // &lt;p&gt;This is &lt;strong&gt;bold&lt;/strong&gt; and &lt;em&gt;italic&lt;/em&gt; text.&lt;/p&gt; // &lt;ul&gt;&lt;li&gt;List item 1&lt;/li&gt;&lt;li&gt;List item 2&lt;/li&gt;&lt;/ul&gt; convertMathLaTexToImage()​ function convertMathLaTexToImage(html): string Convert LaTex &lt;math&gt; equations found inside HTML into easy-to-read SVG and HTML with KaTex.js. Parameters​ Parameter\tType\tDescription html string html with math Latex Returns​ string html with SVG of equations convertURLToAbsoluteURL()​ function convertURLToAbsoluteURL(base, relative): string Convert relative URL to absolute URL using base URL. Parameters​ Parameter\tType\tDescription base string base url of the domain relative string partial urls like ../images/image.jpg #hash Returns​ string absolute URL Example​ var absoluteURL = convertURLToAbsoluteURL('https://example.com', 'images/image.jpg') console.log(absoluteURL) // Returns: &quot;https://example.com/images/image.jpg&quot; var absoluteURL = convertURLToAbsoluteURL('https://example.com', '//images/image.jpg') console.log(absoluteURL) // Returns: &quot;https:images/image.jpg&quot; Author​ ai-research-agent (2024) copyHTMLToClipboard()​ function copyHTMLToClipboard(html, options): Promise&lt;void&gt; Copy HTML to clipboard. When pasting into rich text field, pastes rich text. When pasting into plain text field, pastes: plain text, html, or markdown. Parameters​ Parameter\tType\tDescription html string The HTML content to be copied. options { pastePlainFormat: number; } The options object. options.pastePlainFormat number default=0 0 - plain text 1 - markdown 2 - html Returns​ Promise&lt;void&gt; A promise that resolves when the HTML is copied to the clipboard. Author​ ai-research-agent (2024) Other​ convertHTMLToMarkdown()​ function convertHTMLToMarkdown(html): any Parameters​ Parameter\tType html any Returns​ any","keywords":"","version":"Next"},{"title":"Annotation","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/Annotation","content":"Annotation ai-research-agent / extractor/pdf-to-html/models/Annotation Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Properties​ category​ category: any; color​ color: any; Variables​ ADDED_ANNOTATION​ const ADDED_ANNOTATION: default; DETECTED_ANNOTATION​ const DETECTED_ANNOTATION: default; MODIFIED_ANNOTATION​ const MODIFIED_ANNOTATION: default; REMOVED_ANNOTATION​ const REMOVED_ANNOTATION: default; UNCHANGED_ANNOTATION​ const UNCHANGED_ANNOTATION: default; ","keywords":"","version":"Next"},{"title":"extract-content-mercury-utils","type":0,"sectionRef":"#","url":"/docs/functions/extractor/html-to-content/extract-content/extract-content-mercury-utils","content":"extract-content-mercury-utils ai-research-agent / extractor/html-to-content/extract-content/extract-content-mercury-utils Functions​ brsToPs()​ function brsToPs(document): any Parameters​ Parameter\tType document any Returns​ any cleanAttributes()​ function cleanAttributes(article, document): any Parameters​ Parameter\tType article any document any Returns​ any cleanHOnes()​ function cleanHOnes(article, document): any Parameters​ Parameter\tType article any document any Returns​ any cleanImages()​ function cleanImages(article, document): any Parameters​ Parameter\tType article any document any Returns​ any convertNodeTo()​ function convertNodeTo( node, document, tag): any Parameters​ Parameter\tType\tDefault value node any undefined document any undefined tag string &quot;p&quot; Returns​ any convertToParagraphs()​ function convertToParagraphs(document): any Parameters​ Parameter\tType document any Returns​ any getAttrs()​ function getAttrs(node): any Parameters​ Parameter\tType node any Returns​ any isWordpress()​ function isWordpress(document): boolean Parameters​ Parameter\tType document any Returns​ boolean linkDensity()​ function linkDensity(node): number Parameters​ Parameter\tType node any Returns​ number nodeIsSufficient()​ function nodeIsSufficient(node): boolean Parameters​ Parameter\tType node any Returns​ boolean normalizeSpaces()​ function normalizeSpaces(text): any Parameters​ Parameter\tType text any Returns​ any paragraphize()​ function paragraphize( node, document, br): any Parameters​ Parameter\tType\tDefault value node any undefined document any undefined br boolean false Returns​ any removeEmpty()​ function removeEmpty(article): any Parameters​ Parameter\tType article any Returns​ any removeUnlessContent()​ function removeUnlessContent(node, weight): void Parameters​ Parameter\tType node any weight any Returns​ void rewriteTopLevel()​ function rewriteTopLevel(article, document): any Parameters​ Parameter\tType article any document any Returns​ any setAttr()​ function setAttr( node, attr, val): any Parameters​ Parameter\tType node any attr any val any Returns​ any setAttrs()​ function setAttrs(node, attrs): any Parameters​ Parameter\tType node any attrs any Returns​ any stripJunkTags()​ function stripJunkTags( article, document, tags): any Parameters​ Parameter\tType\tDefault value article any undefined document any undefined tags any[] [] Returns​ any stripTags()​ function stripTags(text, document): any Parameters​ Parameter\tType text any document any Returns​ any stripUnlikelyCandidates()​ function stripUnlikelyCandidates(document): any Parameters​ Parameter\tType document any Returns​ any textLength()​ function textLength(text): any Parameters​ Parameter\tType text any Returns​ any withinComment()​ function withinComment(node): boolean Parameters​ Parameter\tType node any Returns​ boolean","keywords":"","version":"Next"},{"title":"index","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/BlockType/","content":"index ai-research-agent / extractor/pdf-to-html/models/BlockType Index​ Namespaces​ default Variables​ default​ const default: object; Type declaration​ Name\tType CODE {mergeToBlock: boolean;name: string;toText: string; } FOOTNOTES {mergeFollowingNonTypedItems: boolean;mergeToBlock: boolean;name: string;toText: string; } H1 {headline: boolean;headlineLevel: number;name: string;toText: string; } H2 {headline: boolean;headlineLevel: number;name: string;toText: string; } H3 {headline: boolean;headlineLevel: number;name: string;toText: string; } H4 {headline: boolean;headlineLevel: number;name: string;toText: string; } H5 {headline: boolean;headlineLevel: number;name: string;toText: string; } H6 {headline: boolean;headlineLevel: number;name: string;toText: string; } LIST {mergeFollowingNonTypedItemsWithSmallDistance: boolean;mergeToBlock: boolean;name: string;toText: string; } PARAGRAPH {name: string;toText: string; } TOC {mergeToBlock: boolean;name: string;toText: string; }","keywords":"","version":"Next"},{"title":"default","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/BlockType/namespaces/default","content":"default ai-research-agent / extractor/pdf-to-html/models/BlockType / default Functions​ blockToText()​ function blockToText(block): any Parameters​ Parameter\tType block any Returns​ any headlineByLevel()​ function headlineByLevel(level): object Parameters​ Parameter\tType level any Returns​ object Name\tType\tDefault valueheadline\tboolean\ttrue headlineLevel\tnumber\t1 name\tstring\t'H1' toText() - isHeadline()​ function isHeadline(type): any Parameters​ Parameter\tType type any Returns​ any","keywords":"","version":"Next"},{"title":"HeadlineFinder","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/HeadlineFinder","content":"HeadlineFinder ai-research-agent / extractor/pdf-to-html/models/HeadlineFinder Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Methods​ consume()​ consume(lineItem): null | any[] Parameters​ Parameter\tType lineItem any Returns​ null | any[] matchAll()​ matchAll(normalizedCharCodes): boolean Parameters​ Parameter\tType normalizedCharCodes any Returns​ boolean Properties​ headlineCharCodes​ headlineCharCodes: any[]; stackedChars​ stackedChars: number; stackedLineItems​ stackedLineItems: any[]; ","keywords":"","version":"Next"},{"title":"LineConverter","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/LineConverter","content":"LineConverter ai-research-agent / extractor/pdf-to-html/models/LineConverter Classes​ default​ Constructors​ new default()​ new default(fontToFormats): default Parameters​ Parameter\tType fontToFormats any Returns​ default Methods​ compact()​ compact(textItems): default Parameters​ Parameter\tType textItems any Returns​ default Properties​ fontToFormats​ fontToFormats: any; Variables​ WordFormat​ const WordFormat: object; Type declaration​ Name\tType BOLD {endSymbol: string;name: string;startSymbol: string; } BOLD_OBLIQUE {endSymbol: string;name: string;startSymbol: string; } OBLIQUE {endSymbol: string;name: string;startSymbol: string; } WordType​ const WordType: object; Type declaration​ Name\tType FOOTNOTE {name: string;toText: string; } FOOTNOTE_LINK {attachWithoutWhitespace: boolean;name: string;plainTextFormat: boolean;toText: string; } LINK {name: string;toText: string; }","keywords":"","version":"Next"},{"title":"LineItemBlock","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/LineItemBlock","content":"LineItemBlock ai-research-agent / extractor/pdf-to-html/models/LineItemBlock Classes​ default​ Extends​ default Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Overrides​ default.constructor Methods​ addItem()​ addItem(item): void Parameters​ Parameter\tType item any Returns​ void Properties​ annotation​ annotation: any; Inherited from​ default.annotation items​ items: any[]; parsedElements​ parsedElements: any; Inherited from​ default.parsedElements type​ type: any; Inherited from​ default.type","keywords":"","version":"Next"},{"title":"Metadata","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/Metadata","content":"Metadata ai-research-agent / extractor/pdf-to-html/models/Metadata Classes​ default​ Constructors​ new default()​ new default(originalMetadata): default Parameters​ Parameter\tType originalMetadata any Returns​ default Properties​ author​ author: any; creator​ creator: any; producer​ producer: any; title​ title: any; ","keywords":"","version":"Next"},{"title":"LineItem","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/LineItem","content":"LineItem ai-research-agent / extractor/pdf-to-html/models/LineItem Classes​ default​ Extends​ default Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Overrides​ default.constructor Methods​ text()​ text(): any Returns​ any wordStrings()​ wordStrings(): any Returns​ any Properties​ annotation​ annotation: any; Inherited from​ default.annotation height​ height: any; parsedElements​ parsedElements: any; Inherited from​ default.parsedElements type​ type: any; Inherited from​ default.type width​ width: any; words​ words: any; x​ x: any; y​ y: any; ","keywords":"","version":"Next"},{"title":"Page","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/Page","content":"Page ai-research-agent / extractor/pdf-to-html/models/Page Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Properties​ index​ index: any; items​ items: any; ","keywords":"","version":"Next"},{"title":"PageItem","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/PageItem","content":"PageItem ai-research-agent / extractor/pdf-to-html/models/PageItem Classes​ default​ Extended by​ defaultdefault Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Properties​ annotation​ annotation: any; parsedElements​ parsedElements: any; type​ type: any; ","keywords":"","version":"Next"},{"title":"ParseResult","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/ParseResult","content":"ParseResult ai-research-agent / extractor/pdf-to-html/models/ParseResult Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Properties​ globals​ globals: any; messages​ messages: any; pages​ pages: any; ","keywords":"","version":"Next"},{"title":"ParsedElements","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/ParsedElements","content":"ParsedElements ai-research-agent / extractor/pdf-to-html/models/ParsedElements Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Methods​ add()​ add(parsedElements): void Parameters​ Parameter\tType parsedElements any Returns​ void Properties​ containLinks​ containLinks: any; footnoteLinks​ footnoteLinks: any; footnotes​ footnotes: any; formattedWords​ formattedWords: any; ","keywords":"","version":"Next"},{"title":"Word","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/Word","content":"Word ai-research-agent / extractor/pdf-to-html/models/Word Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Properties​ format​ format: any; string​ string: any; type​ type: any; ","keywords":"","version":"Next"},{"title":"TextItemLineGrouper","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/TextItemLineGrouper","content":"TextItemLineGrouper ai-research-agent / extractor/pdf-to-html/models/TextItemLineGrouper Classes​ default​ Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Methods​ group()​ group(textItems): any[][] Parameters​ Parameter\tType textItems any Returns​ any[][] Properties​ mostUsedDistance​ mostUsedDistance: any; ","keywords":"","version":"Next"},{"title":"TextItem","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/TextItem","content":"TextItem ai-research-agent / extractor/pdf-to-html/models/TextItem Classes​ default​ Extends​ PageItem Constructors​ new default()​ new default(options): default Parameters​ Parameter\tType options any Returns​ default Overrides​ PageItem.constructor Properties​ annotation​ annotation: any; Inherited from​ PageItem.annotation font​ font: any; height​ height: any; lineFormat​ lineFormat: any; parsedElements​ parsedElements: any; Inherited from​ PageItem.parsedElements text​ text: any; type​ type: any; Inherited from​ PageItem.type unclosedFormat​ unclosedFormat: any; unopenedFormat​ unopenedFormat: any; width​ width: any; x​ x: any; y​ y: any; ","keywords":"","version":"Next"},{"title":"StashingStream","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/models/StashingStream","content":"StashingStream ai-research-agent / extractor/pdf-to-html/models/StashingStream Classes​ default​ Constructors​ new default()​ new default(): default Returns​ default Methods​ complete()​ complete(): any[] Returns​ any[] consume()​ consume(item): void Parameters​ Parameter\tType item any Returns​ void consumeAll()​ consumeAll(items): void Parameters​ Parameter\tType items any Returns​ void doFlushStash()​ doFlushStash(stash, results): void Parameters​ Parameter\tType stash any results any Returns​ void doMatchesStash()​ doMatchesStash(lastItem, item): void Parameters​ Parameter\tType lastItem any item any Returns​ void flushStash()​ flushStash(): void Returns​ void matchesStash()​ matchesStash(item): true | void Parameters​ Parameter\tType item any Returns​ true | void onPushOnStash()​ onPushOnStash(item): void Parameters​ Parameter\tType item any Returns​ void pushOnStash()​ pushOnStash(item): void Parameters​ Parameter\tType item any Returns​ void shouldStash()​ shouldStash(item): void Parameters​ Parameter\tType item any Returns​ void Properties​ results​ results: any[]; stash​ stash: any[]; ","keywords":"","version":"Next"},{"title":"DetectCodeQuoteBlocks","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item-block/DetectCodeQuoteBlocks","content":"DetectCodeQuoteBlocks ai-research-agent / extractor/pdf-to-html/transformations/line-item-block/DetectCodeQuoteBlocks Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"CalculateGlobalStats","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/CalculateGlobalStats","content":"CalculateGlobalStats ai-research-agent / extractor/pdf-to-html/transformations/CalculateGlobalStats Classes​ default​ Extends​ default Constructors​ new default()​ new default(fontMap): default Parameters​ Parameter\tType fontMap any Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ fontMap​ fontMap: any; itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"DetectListLevels","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item-block/DetectListLevels","content":"DetectListLevels ai-research-agent / extractor/pdf-to-html/transformations/line-item-block/DetectListLevels Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"GatherBlocks","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item-block/GatherBlocks","content":"GatherBlocks ai-research-agent / extractor/pdf-to-html/transformations/line-item-block/GatherBlocks Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"DetectHeaders","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item/DetectHeaders","content":"DetectHeaders ai-research-agent / extractor/pdf-to-html/transformations/line-item/DetectHeaders Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"CompactLines","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item/CompactLines","content":"CompactLines ai-research-agent / extractor/pdf-to-html/transformations/line-item/CompactLines Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"DetectListItems","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item/DetectListItems","content":"DetectListItems ai-research-agent / extractor/pdf-to-html/transformations/line-item/DetectListItems Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"DetectTOC","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item/DetectTOC","content":"DetectTOC ai-research-agent / extractor/pdf-to-html/transformations/line-item/DetectTOC Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"ToHTML","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/ToHTML","content":"ToHTML ai-research-agent / extractor/pdf-to-html/transformations/ToHTML Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"VerticalToHorizontal","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item/VerticalToHorizontal","content":"VerticalToHorizontal ai-research-agent / extractor/pdf-to-html/transformations/line-item/VerticalToHorizontal Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"RemoveRepetitiveElements","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/line-item/RemoveRepetitiveElements","content":"RemoveRepetitiveElements ai-research-agent / extractor/pdf-to-html/transformations/line-item/RemoveRepetitiveElements Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"ToLineItemBlockTransformation","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/ToLineItemBlockTransformation","content":"ToLineItemBlockTransformation ai-research-agent / extractor/pdf-to-html/transformations/ToLineItemBlockTransformation Classes​ default​ Extends​ default Extended by​ defaultdefaultdefault Constructors​ new default()​ new default(name): default Parameters​ Parameter\tType name any Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Overrides​ default.completeTransform transform()​ transform(parseResult): void Parameters​ Parameter\tType parseResult any Returns​ void Inherited from​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"ToLineItemTransformation","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/ToLineItemTransformation","content":"ToLineItemTransformation ai-research-agent / extractor/pdf-to-html/transformations/ToLineItemTransformation Classes​ default​ Extends​ default Extended by​ defaultdefaultdefaultdefaultdefaultdefault Constructors​ new default()​ new default(name): default Parameters​ Parameter\tType name any Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Overrides​ default.completeTransform transform()​ transform(parseResult): void Parameters​ Parameter\tType parseResult any Returns​ void Inherited from​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"ToTextBlocks","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/ToTextBlocks","content":"ToTextBlocks ai-research-agent / extractor/pdf-to-html/transformations/ToTextBlocks Classes​ default​ Extends​ default Constructors​ new default()​ new default(): default Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Inherited from​ default.completeTransform transform()​ transform(parseResult): default Parameters​ Parameter\tType parseResult any Returns​ default Overrides​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"ToTextItemTransformation","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/ToTextItemTransformation","content":"ToTextItemTransformation ai-research-agent / extractor/pdf-to-html/transformations/ToTextItemTransformation Classes​ default​ Extends​ default Extended by​ default Constructors​ new default()​ new default(name): default Parameters​ Parameter\tType name any Returns​ default Overrides​ default.constructor Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any Overrides​ default.completeTransform transform()​ transform(parseResult): void Parameters​ Parameter\tType parseResult any Returns​ void Inherited from​ default.transform Properties​ itemType​ itemType: any; Inherited from​ default.itemType name​ name: any; Inherited from​ default.name","keywords":"","version":"Next"},{"title":"Transformation","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/transformations/Transformation","content":"Transformation ai-research-agent / extractor/pdf-to-html/transformations/Transformation Classes​ default​ Extended by​ defaultdefaultdefaultdefaultdefault Constructors​ new default()​ new default(name, itemType): default Parameters​ Parameter\tType name any itemType any Returns​ default Methods​ completeTransform()​ completeTransform(parseResult): any Parameters​ Parameter\tType parseResult any Returns​ any transform()​ transform(parseResult): void Parameters​ Parameter\tType parseResult any Returns​ void Properties​ itemType​ itemType: any; name​ name: any; ","keywords":"","version":"Next"},{"title":"is-url-pdf","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/util/is-url-pdf","content":"is-url-pdf ai-research-agent / extractor/pdf-to-html/util/is-url-pdf Extract​ isUrlPDF()​ function isUrlPDF(url): Promise&lt;boolean&gt; Detects if a given URL points to a PDF file by checking the stream's first bytes for %PDF- then ends the request. Useful for hidden pdf url that does not end with pdf Parameters​ Parameter\tType\tDescription url string The URL to check. Returns​ Promise&lt;boolean&gt; True if the URL points to a PDF, false otherwise. Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"page-item-functions","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/util/page-item-functions","content":"page-item-functions ai-research-agent / extractor/pdf-to-html/util/page-item-functions Functions​ minXFromBlocks()​ function minXFromBlocks(blocks): null | number Parameters​ Parameter\tType blocks any Returns​ null | number minXFromPageItems()​ function minXFromPageItems(items): null | number Parameters​ Parameter\tType items any Returns​ null | number sortByX()​ function sortByX(items): void Parameters​ Parameter\tType items any Returns​ void","keywords":"","version":"Next"},{"title":"page-number-functions","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/util/page-number-functions","content":"page-number-functions ai-research-agent / extractor/pdf-to-html/util/page-number-functions Functions​ findFirstPage()​ function findFirstPage(pageIndexNumMap): object Checks when the page number first begins and returns it Parameters​ Parameter\tType\tDescription pageIndexNumMap object object Returns​ object For example: pageIndex: 10, pageNum: 3 findPageNumbers()​ function findPageNumbers( pageIndexNumMap, pageIndex, items): object Searches both top and bottom area and returns an object Parameters​ Parameter\tType\tDescription pageIndexNumMap object object pageIndex number index of the page items array textContent.items Returns​ object pageIndexNumMap object removePageNumber()​ function removePageNumber(textContent, pageNum): object Return textContent with items that have pageNum removed Parameters​ Parameter\tType\tDescription textContent object object pageNum number Returns​ object filteredContent - textContent without items that have pageNum","keywords":"","version":"Next"},{"title":"url-to-content","type":0,"sectionRef":"#","url":"/docs/functions/extractor/url-to-content/","content":"url-to-content ai-research-agent / extractor/url-to-content/url-to-content Extract​ extractContent()​ function extractContent(urlOrDoc, options?): object 🚜📜 Tractor the Text Extractor​ Main Content Detection: Extract the main content from a URL by combining Mozilla Readability and Postlight Mercury algorithms, utilizing over 100 custom adapters for major sites for article, author, date HTML classes.Basic HTML Standardization: Transform complex HTML into a simplified reading-mode format of basic HTML, making it ideal for research note archival and focused reading, with headings, images and links.YouTube Transcript Processing: When a YouTube video URL is detected, retrieve the complete video transcript including both manual captions and auto-generated subtitles, maintaining proper timestamp synchronization and speaker identification where available.PDF to HTML: Process PDF documents by extracting formatted text while intelligently handling line breaks, page headers, footnotes. The system analyzes text height statistics to automatically infer heading levels, creating a properly structured document hierarchy based on standard deviation from mean text size.Citation Information Extraction: Identify and extract citation metadata including author names, publication dates, sources, and titles using HTML meta tags and common class name patterns. The system validates author names against a comprehensive database of 90,000 first and last names, distinguishing between personal and organizational authors to properly format citations.Author Name Formatting: Process author names by checking against known name databases, handling affixes and titles correctly, and determining whether to reverse the name order based on whether it's a personal or organizational author, ensuring proper citation formatting.Content Validation: Verify the extracted content's accuracy by comparing results from multiple extraction methods, ensuring all essential elements are preserved and properly formatted for the intended use case. Parameters​ Parameter\tType\tDescription urlOrDoc string | Document url or dom object with article content options? { absoluteURLs: boolean; formatting: boolean; images: boolean; links: boolean; timeout: number; } options.absoluteURLs? boolean default=true - convert URLs to absolute options.formatting? boolean default=true - preserve formatting options.images? boolean default=true - include images options.links? boolean default=true - include links options.timeout? number http request timeout Returns​ object cite - Cite in APA Format with Author name in Last, First Initial formaturl - The URL of the articlehtml - The HTML content of the articleauthor - The author of the articleauthor_cite - Author name in Last, First Middle formatauthor_short - Author name in Last formatauthor_type - Author type [&quot;single&quot;, &quot;two-author&quot;, &quot;more-than-two&quot;, &quot;organization&quot;]date - The publication date of the articletitle - The title of the articlesource - The source or origin of the articleword_count - The word count of the full text (without HTML tags) Name\tTypeauthor\tstring author_cite\tstring cite\tstring date\tstring html\tstring source\tstring title\tstring word_count\tnumber Author​ ai-research-agent (2024) Other​ Article​ Properties​ author​ author: string; The full name of the author of the article author_cite​ author_cite: string; Author name in Last, First Initial format author_short​ author_short: string; Author name in Last format author_type​ author_type: number; Author type [&quot;single&quot;, &quot;two-author&quot;, &quot;more-than-two&quot;, &quot;organization&quot;] cite​ cite: string; Cite in APA Format with Author name in Last, First Initial format date​ date: string; The publication date of the article html​ html: string; The Basic HTML content of the article source​ source: string; The source or publisher of the article title​ title: string; The title of the article url​ url: string; The URL of the article word_count​ word_count: number; The word count of the full text (without HTML tags)","keywords":"","version":"Next"},{"title":"scrape-url","type":0,"sectionRef":"#","url":"/docs/functions/extractor/url-to-content/scrape-url","content":"scrape-url ai-research-agent / extractor/url-to-content/scrape-url Extract​ scrapeURL()​ function scrapeURL(url, options?): Promise&lt;string&gt; Tardigrade the Web Crawler​ Use Fetch API, check for bot detection. Scrape any domain's URL to get its HTML, JSON, or arraybuffer. Scraping internet pages is a free speech right. Features: timeout, redirects, default UA, referer as google, and bot detection checking. If fetch method does not get needed HTML, use Docker proxy as backup. Setup Dockercontainer with NodeJS server API renders with puppeteer DOM to get all HTML loaded by secondary in-page API requests after the initial page request, including user login and cookie storage. Bypass Cloudflare bot check: A webpage proxy that request through Chromium (puppeteer) - can be used to bypass Cloudflare anti bot using cookie id javascript method. Send your request to the server with the port 3000 and add your URL to the &quot;url&quot; query string like this: http://localhost:3000/?url=https://example.org Optional: Setup residential IP proxy to access sites that IP-block datacenters and manage rotation with Scrapoxy. Recommended:HypeproxyNinjasProxyProxy-CheapLiveProxies Parameters​ Parameter\tType\tDescription url string any domain's URL options? { changeReferer: number; checkBotDetection: number; checkRobotsAllowed: boolean; maxRedirects: number; proxy: string; timeout: number; userAgentIndex: number; } options.changeReferer? number default=true - set referer as google options.checkBotDetection? number default=true - check for bot detection messages options.checkRobotsAllowed? boolean default=false - check robots.txt rules options.maxRedirects? number default=3 - max redirects to follow options.proxy? string default=false - use proxy url options.timeout? number default=5 - abort request if not retrived, in seconds options.userAgentIndex? number default=0 - index of [google bot, default chrome] Returns​ Promise&lt;string&gt; HTML, JSON, arraybuffer, or error object Example​ await scrapeURL(&quot;https://hckrnews.com&quot;, {timeout: 5, userAgentIndex: 1}) Author​ ai-research-agent (2024) Other​ fetchScrapingRules()​ function fetchScrapingRules(url): Promise&lt;Object&gt; Fetches and parses the robots.txt file for a given URL. Parameters​ Parameter\tType\tDescription url string The base URL to fetch the robots.txt from. Returns​ Promise&lt;Object&gt; A JSON object representing the parsed robots.txt.","keywords":"","version":"Next"},{"title":"string-functions","type":0,"sectionRef":"#","url":"/docs/functions/extractor/pdf-to-html/util/string-functions","content":"string-functions ai-research-agent / extractor/pdf-to-html/util/string-functions Functions​ charCodeArray()​ function charCodeArray(string): any[] Parameters​ Parameter\tType string any Returns​ any[] hasOnly()​ function hasOnly(string, char): boolean Parameters​ Parameter\tType string any char any Returns​ boolean hasUpperCaseCharacterInMiddleOfWord()​ function hasUpperCaseCharacterInMiddleOfWord(text): boolean Parameters​ Parameter\tType text any Returns​ boolean isDigit()​ function isDigit(charCode): boolean Parameters​ Parameter\tType charCode any Returns​ boolean isListItem()​ function isListItem(string): boolean Parameters​ Parameter\tType string any Returns​ boolean isListItemCharacter()​ function isListItemCharacter(string): boolean Parameters​ Parameter\tType string any Returns​ boolean isNumber()​ function isNumber(string): boolean Parameters​ Parameter\tType string any Returns​ boolean isNumberedListItem()​ function isNumberedListItem(string): boolean Parameters​ Parameter\tType string any Returns​ boolean normalizedCharCodeArray()​ function normalizedCharCodeArray(string): any[] Parameters​ Parameter\tType string any Returns​ any[] prefixAfterWhitespace()​ function prefixAfterWhitespace(prefix, string): any Parameters​ Parameter\tType prefix any string any Returns​ any removeLeadingWhitespaces()​ function removeLeadingWhitespaces(string): any Parameters​ Parameter\tType string any Returns​ any removeTrailingWhitespaces()​ function removeTrailingWhitespaces(string): any Parameters​ Parameter\tType string any Returns​ any suffixBeforeWhitespace()​ function suffixBeforeWhitespace(string, suffix): any Parameters​ Parameter\tType string any suffix any Returns​ any wordMatch()​ function wordMatch(string1, string2): number Parameters​ Parameter\tType string1 any string2 any Returns​ number","keywords":"","version":"Next"},{"title":"docx-to-content","type":0,"sectionRef":"#","url":"/docs/functions/extractor/url-to-content/docx-to-content","content":"docx-to-content ai-research-agent / extractor/url-to-content/docx-to-content Extract​ convertDOCXToHTML()​ function convertDOCXToHTML(input, options?): Promise&lt;string&gt; Converts a DOCX document to HTML Parameters​ Parameter\tType\tDescription input string | Blob | ArrayBuffer | File DOCX input to convert options? DocxOptions Conversion options Returns​ Promise&lt;string&gt; The converted HTML Throws​ If conversion fails Example​ const html = await convertDOCXToHTML('https://example.com/doc.docx'); const html = await convertDOCXToHTML(fileInput.files[0]); Other​ DocxOptions​ Properties​ imgPath?​ optional imgPath: string; Base path for image resources includeStyles?​ optional includeStyles: boolean; Whether to include document styles preserveShapes?​ optional preserveShapes: boolean; Whether to preserve shape elements ParagraphStyle​ Properties​ alignment?​ optional alignment: string; Text alignment (left, right, center, justify) indentation?​ optional indentation: string; Paragraph indentation keepNext?​ optional keepNext: boolean; Keep with next paragraph pageBreakBefore?​ optional pageBreakBefore: boolean; Force page break before spacing?​ optional spacing: string; Line spacing RunStyle​ Properties​ bold?​ optional bold: boolean; Bold text color?​ optional color: string; Text color font?​ optional font: string; Font family highlight?​ optional highlight: string; Highlight color italic?​ optional italic: boolean; Italic text size?​ optional size: string; Font size underline?​ optional underline: boolean; Underlined text StyleConfig​ Properties​ block​ block: boolean; If true, element is rendered as block class?​ optional class: string; CSS class name element​ element: string; HTML element name heading?​ optional heading: boolean; If true, element is a heading xmlName?​ optional xmlName: string; DOCX XML element name","keywords":"","version":"Next"},{"title":"youtube-to-text","type":0,"sectionRef":"#","url":"/docs/functions/extractor/url-to-content/youtube-to-text","content":"youtube-to-text ai-research-agent / extractor/url-to-content/youtube-to-text Extract​ convertYoutubeToText()​ function convertYoutubeToText(videoUrl, options?): object Fetch youtube.com video's webpage HTML for embedded transcript. If blocked, use scraper of alternative sites providing transcripts. Parameters​ Parameter\tType\tDescription videoUrl string options? { addTimestamps: boolean; timeout: boolean; } options.addTimestamps? boolean default=true - true to return timestamps, default true options.timeout? boolean default=5 - http request timeout Returns​ object where content is the full text of the transcript, timestamps is a string of comma-separated [characterIndex, timeSeconds] pairs, and word_count is the number of words in the transcript. Name\tTypecontent\tstring timestamps\tstring word_count\tnumber Author​ ai-research-agent (2024) Other​ fetchViaYoutubeToTranscriptCom()​ function fetchViaYoutubeToTranscriptCom(videoId, options): Object Fetch-based scraper of youtubetotranscript.com Parameters​ Parameter\tType videoId any options {} Returns​ Object content, timestamps - where content is the full text of the transcript, and timestamps is an array of [characterIndex, timeSeconds]","keywords":"","version":"Next"},{"title":"highlight-code","type":0,"sectionRef":"#","url":"/docs/functions/interface/highlight-code","content":"highlight-code ai-research-agent / interface/highlight-code HTML Utilities​ highlightCodeSyntax()​ function highlightCodeSyntax(node): Object Take a node and make it so that any code blocks are syntax highlighted. Parameters​ Parameter\tType\tDescription node Node The node to be highlighted. Returns​ Object An object with a destroy method to clean up the mutation observer. Example​","keywords":"","version":"Next"},{"title":"compare-letters","type":0,"sectionRef":"#","url":"/docs/functions/match/compare-letters","content":"compare-letters ai-research-agent / match/compare-letters Match​ weighSimilarityByCharacter()​ function weighSimilarityByCharacter(s1, s2): number Jaro-Winkler String Similarity Comparison​ Measures similarity between two strings, taking into account the common characters and their positions. Jaro-Winkler is often used in record linkage and data cleansing to improve the accuracy of string matching, particularly for names and addresses, by giving more weight to the common prefix and penalizing longer string differences. It is more optimalfor words than Levenshtein distance: Edit operations: Levenshtein considers insertions, deletions, and substitutions, while Jaro focuses on transpositions.Sensitivity to string length: Levenshtein is more sensitive to overall string length, while Jaro normalizes for length in its formula.Prefix matching: The Jaro-Winkler variant explicitly rewards matching prefixes, which Levenshtein does not.Scale of results: Levenshtein produces an edit distance (usually converted to a similarity score), while Jaro directly produces a similarity score. A Comprehensive List of Similarity Search Algorithms Parameters​ Parameter\tType\tDescription s1 string First string s2 string Second string Returns​ number 0-1 string similarity score Author​ Jaro, M., Winkler, W. (1990)","keywords":"","version":"Next"},{"title":"match-quasar","type":0,"sectionRef":"#","url":"/docs/functions/match/match-quasar","content":"match-quasar ai-research-agent / match/match-quasar Match​ matchQUASAR()​ function matchQUASAR(document, query): boolean QUASAR: Quotes-Unifying Alphanumeric Search-All RegExp​ Search document for all words of query ignoring casing but &quot;words in quotes&quot; as necessarily together like users expect in web search engines. Single line function that can be used anywhere, such as UI inputs to filter a data list. Parameters​ Parameter\tType\tDescription document string query string Returns​ boolean true if doc has all words and &quot;phrases in quotes&quot; Example​ var isFound = matchQUASAR(`Ask not what your country can do for you, ask what you can do for your country. is nothing to fear but fear itself.`, ` &quot;Ask not&quot; &quot;but fear itself&quot; nothing`) // returns true Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"weigh-relevance-frequency","type":0,"sectionRef":"#","url":"/docs/functions/match/weigh-relevance-frequency","content":"weigh-relevance-frequency ai-research-agent / match/weigh-relevance-frequency Match​ weighRelevanceTermFrequency()​ function weighRelevanceTermFrequency( document, query, options?): number 📈📝 WRITEFAT: Weigh Relevance by Inference of Topics, Entities, and Frequency Averages for Terms​ Calculate term specificity for a single doc with BM25 formulaby using Wikipedia term frequencies as the baseline IDF. Parameters​ Parameter\tType\tDescription document string a single document to calculate the score for query string phrase to search tf and idf for each word options? { avgDocWordCount: number; normalizeLength: number; saturationWeight: number; totalWikiPages: number; } options.avgDocWordCount? number Estimated average word count of all documents options.normalizeLength? number normalizeLengthcontrols the document length normalization. It ranges from 0 to 1, with 0.75 being a common default value. When normalizeLength=1: Full length normalization is applied. Longer documents are penalized more heavily. options.saturationWeight? number saturationWeight controls the impact of term frequency saturation. It typically ranges from 1.2 to 2.0, with 1.5 being a common default value. As saturationWeight increases: The impact of term frequency increases (i.e., multiple occurrences of a term in a document become more significant). options.totalWikiPages? number Total number of Wikipedia pages used to calculate IDF Returns​ number score for term specificity Author​ ai-research-agent (2024) Other​ calculatePhraseSpecificity()​ function calculatePhraseSpecificity(phrase, options): number Calculate overall domain-speicificity after Query Resolution to Phrases. Words are tokenized into phrases and their specificity is calculated based on how many Wiki pages they appear in. Parameters​ Parameter\tType\tDescription phrase string options any ‐ Returns​ number domain specificity 0-12~","keywords":"","version":"Next"},{"title":"ip-to-lang","type":0,"sectionRef":"#","url":"/docs/functions/search/ip-to-lang","content":"ip-to-lang ai-research-agent / search/ip-to-lang Functions​ getLanguageFromIP()​ function getLanguageFromIP(ip): Promise&lt;undefined | Object&gt; Retrieves language information for a given IP address using a remote API. Rate limit 45 req/min You should first use Accept-Language header or navigator.language in front-end for user-set languagehttps://stackoverflow.com/questions/673905/how-can-i-determine-a-users-locale-within-the-browser/31135571#31135571 Parameters​ Parameter\tType\tDescription ip string The IP address to look up. Returns​ Promise&lt;undefined | Object&gt; A promise that resolves to an object containing country and language information, or undefined if not found. returns.country - The name of the country. returns.code - The two-letter country code. returns.lang - The two-letter language code. returns.language - The full name of the language. returns.greeting - A greeting in the detected language. Author​ ai-research-agent (2024) Variables​ countryToLanguage​ const countryToLanguage: object[]; Type declaration​ Name\tType\tDefault value code string &quot;ad&quot; country string &quot;Andorra&quot; lang string &quot;es&quot;","keywords":"","version":"Next"},{"title":"search-engines","type":0,"sectionRef":"#","url":"/docs/functions/search/search-engines","content":"search-engines ai-research-agent / search/search-engines Search​ searchEngines​ const searchEngines: Object[]; A list of search engines which can be used to search selected text. Each item in the list is an object with the following properties: name: The name of the search engine.url: The base search URL that should have the query appended.icon: A URL or data URL of an SVG icon for the search engine. Prepend &quot;data:image/png;base64,&quot;","keywords":"","version":"Next"},{"title":"youtube-embed","type":0,"sectionRef":"#","url":"/docs/functions/interface/youtube-embed","content":"youtube-embed ai-research-agent / interface/youtube-embed Interface​ embedYoutubePlayer()​ function embedYoutubePlayer(): YouTubePlayer Creates video player wrapping YouTube IFrame Player APIin a div element with the specified ID. Returns​ YouTubePlayer An object containing the YouTube API functionality. Example​ // &lt;div id=&quot;player&quot;&gt;&lt;/div&gt; const YT = embedYoutubePlayer(); new YT.Player('player', { height: '360', width: '640', videoId: 'dQw4w9WgXcQ', events: { 'onReady': onPlayerReady, 'onStateChange': null, 'onTimeChange': onTimeChange, } }); function onPlayerReady(event) { event.target.playVideo(); } function onTimeChange(time) { console.log(time) } Other​ YouTubePlayer​ Properties​ addEventListener​ addEventListener: Function; Adds an event listener. cuePlaylist​ cuePlaylist: Function; Cues a playlist. cueVideoById​ cueVideoById: Function; Cues a specified video. cueVideoByUrl​ cueVideoByUrl: Function; Cues a video by URL. destroy​ destroy: Function; Destroys the player instance. getAvailablePlaybackRates​ getAvailablePlaybackRates: Function; Gets available playback rates. getCurrentTime​ getCurrentTime: Function; Gets the current playback time. getDuration​ getDuration: Function; Gets the video duration. getIframe​ getIframe: Function; Gets the player iframe element. getPlaybackRate​ getPlaybackRate: Function; Gets the playback rate. getPlayerState​ getPlayerState: Function; Gets the current player state. getPlaylist​ getPlaylist: Function; Gets the current playlist. getPlaylistIndex​ getPlaylistIndex: Function; Gets the index of the current playlist item. getVideoEmbedCode​ getVideoEmbedCode: Function; Gets the embed code for the current video. getVideoLoadedFraction​ getVideoLoadedFraction: Function; Gets the fraction of the video loaded. getVideoUrl​ getVideoUrl: Function; Gets the URL of the current video. getVolume​ getVolume: Function; Gets the player volume. isMuted​ isMuted: Function; Checks if the player is muted. loadPlaylist​ loadPlaylist: Function; Loads a playlist. loadVideoById​ loadVideoById: Function; Loads a specified video. loadVideoByUrl​ loadVideoByUrl: Function; Loads a video by URL. mute​ mute: Function; Mutes the player. nextVideo​ nextVideo: Function; Plays the next video in the playlist. pauseVideo​ pauseVideo: Function; Pauses the currently playing video. playVideo​ playVideo: Function; Plays the currently loaded video. playVideoAt​ playVideoAt: Function; Plays a specific video in the playlist. previousVideo​ previousVideo: Function; Plays the previous video in the playlist. removeEventListener​ removeEventListener: Function; Removes an event listener. seekTo​ seekTo: Function; Seeks to a specified time in the video. setLoop​ setLoop: Function; Sets whether the player should loop playlists. setPlaybackRate​ setPlaybackRate: Function; Sets the playback rate. setShuffle​ setShuffle: Function; Sets whether playlists should be shuffled. setSize​ setSize: Function; Sets the player size. setVolume​ setVolume: Function; Sets the player volume. stopVideo​ stopVideo: Function; Stops the currently playing video. unMute​ unMute: Function; Unmutes the player.","keywords":"","version":"Next"},{"title":"search-web","type":0,"sectionRef":"#","url":"/docs/functions/search/search-web","content":"search-web ai-research-agent / search/search-web Search​ searchWeb()​ function searchWeb(query, options?): Promise&lt;object[]&gt; Search Web via SearXNG metasearch of all major search engines. Options are 10 search categories, recency, and how many times to retry other domains if first time fails. SearXNG is a free internet metasearch engine which aggregates results from more than 180+ search sources. Searxng OverviewSearxng Installation Guide Parameters​ Parameter\tType\tDescription query string The search query string. options? { category: string; maxRetries: number; page: number; privateSearxng: string | boolean; proxy: string; recency: number; } options.category? string default=general - [&quot;general&quot;, &quot;news&quot;, &quot;videos&quot;, &quot;images&quot;, &quot;science&quot;,&quot;it&quot;, &quot;files&quot;, &quot;social+media&quot;, &quot;map&quot;, &quot;music&quot;] options.maxRetries? number default=3 - Maximum number of retry attempts if the initial search fails. options.page? number default=1 - The page number to retrieve. options.privateSearxng? string | boolean default=null - Use your custom domain SearXNG options.proxy? string default=false - Use corsproxy.io to access in frontend JS options.recency? number default=0 - [&quot;&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;year&quot;] Returns​ Promise&lt;object[]&gt; An array of search result objects. Example​ const advancedResults = await searchWeb('Node.js', { category: 2, recency: 1, maxRetries: 5 }); Author​ ai-research-agent (2024)Heiser, M., Tauber, A., Flament, A., et al. (2014-)","keywords":"","version":"Next"},{"title":"search-stream","type":0,"sectionRef":"#","url":"/docs/functions/search/search-stream","content":"search-stream ai-research-agent / search/search-stream Search​ searchSTREAM()​ function searchSTREAM(query, options?): Promise&lt;any[]&gt; 🤖🔎 STREAM: Search with Top Result Extraction &amp; Answer Model​ Searches the Web for the query via metasearch of major engines or custom data. Extracts text of top results using Tractor the Text Extractor. Implements SEEKTOPIC to extract Keyphrase Topics and Top Sentences that centralize those topics. Reranks document chunks based on relevance to the query, using embeddings to convert text to concept vectors within LLM &quot;concept space&quot;, and calculates cosine similarity of query to topic. Uses a Research Agent prompt with key sentences from relevant sources to generate an answer via Groq Llama, OpenAI, or Anthropic API, and suggests follow-up queries. Parameters​ Parameter\tType\tDescription query string The search query string. options? { categoryIndex: number; customSearxngDomain: null | string; maxRetries: number; maxTopResultsToExtract: number; recencyIndex: number; } options.categoryIndex? number default=0 - Index of the search category. options.customSearxngDomain? null | string default=null - Use your custom domain SearXNG options.maxRetries? number default=5 - Maximum number of retry attempts for the search. options.maxTopResultsToExtract? number default=6 - Maximum number of top results to extract and analyze. options.recencyIndex? number default=0 - Index representing the recency of results. Returns​ Promise&lt;any[]&gt; A promise that resolves to an array containing the search results, extracted information, and generated answer. Example​ const advancedResults = await searchSTREAM('Latest developments in quantum computing', { categoryIndex: 2, recencyIndex: 1, maxRetries: 5, maxTopResultsToExtract: 10 }); Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"search-wikipedia","type":0,"sectionRef":"#","url":"/docs/functions/search/search-wikipedia","content":"search-wikipedia ai-research-agent / search/search-wikipedia Search​ searchWikipedia()​ function searchWikipedia(query, options?): object Function to query phrase in Wikipedia Search API and return page titles, images and first few sentences of each result. Wikipedia Search API has complex documentationand is dificult to parse and clean up results. Parameters​ Parameter\tType\tDescription query string search phrase options? { filterDisambiguation: boolean; images: boolean; imageSize: number; limitSearchResults: number; plainText: boolean; searchInTitleOnly: boolean; summarySentenceLimit: number; } options.filterDisambiguation? boolean default=true Filter disambiguation pages options.images? boolean default=true Include image in results options.imageSize? number default=200 Image size in pixels options.limitSearchResults? number default=1 Limit number of search results options.plainText? boolean default=false Return plain text instead of HTML options.searchInTitleOnly? boolean default=false Search in title only options.summarySentenceLimit? number default=3 Limit summary to this many sentences Returns​ object Name\tTyperesults\tobject[] Example​ await searchWikipedia(&quot;JavaScript&quot;, { plainText: true }) Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"embeddings-to-graph","type":0,"sectionRef":"#","url":"/docs/functions/similarity/embeddings-to-graph","content":"embeddings-to-graph ai-research-agent / similarity/embeddings-to-graph Similarity​ convertEmbeddingsToUMAP()​ function convertEmbeddingsToUMAP(embeddingsDict, options?): Promise&lt;PlotDataPoint[]&gt; UMAP: Convert Embeddings to 2D or 3D Graph​ UMAP (Uniform Manifold Approximation and Projection) is a dimensionality reduction technique that takes high-dimensional embeddings and converts into lower-dimensional coordinates for visualization. Input: The process starts with high-dimensional embeddings. These could be word embeddings, image feature vectors, or any other type of high-dimensional data representation. Dimensionality reduction: UMAP algorithmically reduces the number of dimensions while trying to preserve the structure of the data. It typically reduces the data to 2 or 3 dimensions for easy visualization. Topological approach: UMAP uses concepts from topological data analysis and manifold learning to perform this reduction. It constructs a high-dimensional graph representation and then optimizes a low-dimensional layout to be as similar as possible. Output: The result is a set of 2D or 3D coordinates for each input embedding. These can be plotted on a scatter plot, where each point represents an original high-dimensional datapoint. Preservation of structure: UMAP aims to keep similar items close together and dissimilar items far apart in the lower-dimensional space, preserving both local and global structure of the data. Visualization: The resulting UMAP coordinates can reveal clusters, patterns, and relationships in the data that were not easily visible in the original high-dimensional space. Understanding UMAP UMAP Algorithm Overview Parameters​ Parameter\tType\tDescription embeddingsDict {} The dictionary of embeddings. options? { numberDimensions: number; numberDistance: number; numberNeighbors: number; } options.numberDimensions? number [default=2] - The number of dimensions for UMAP output. options.numberDistance? number [default=0.1] - The minimum distance parameter for UMAP. options.numberNeighbors? number [default=15] - The number of nearest neighbors for UMAP. Returns​ Promise&lt;PlotDataPoint[]&gt; An array of plot data points. Author​ McInnes et al. (2018) Coenen et al. (2019)","keywords":"","version":"Next"},{"title":"similarity-remote-api","type":0,"sectionRef":"#","url":"/docs/functions/similarity/similarity-remote-api","content":"similarity-remote-api ai-research-agent / similarity/similarity-remote-api Similarity​ weighRelevanceConceptVectorAPI()​ function weighRelevanceConceptVectorAPI( source_sentence, sentences, options?): Promise&lt;any&gt; Calculate the semantic similarity between one text and a list of other sentences by comparing their embeddings.https://huggingface.co/docs/api-inference/detailed_parameters#sentence-similarity-task Parameters​ Parameter\tType\tDescription source_sentence string The string that you wish to compare the other strings with. This can be a phrase, sentence, or longer passage, depending on the model being used. sentences string[] A list of strings which will be compared against the source_sentence. options? { HF_API_KEY: string; model: string; } options.HF_API_KEY? string Required https://huggingface.co/settings/tokens options.model? string default=&quot;sentence-transformers/all-MiniLM-L6-v2&quot; Returns​ Promise&lt;any&gt; array of 0-1 similarity scores for each sentence *","keywords":"","version":"Next"},{"title":"stopwords","type":0,"sectionRef":"#","url":"/docs/functions/tokenize/stopwords","content":"stopwords ai-research-agent / tokenize/stopwords Functions​ isWordCommonIgnored()​ function isWordCommonIgnored(word): boolean Checks word is in 320 commonly ignored &quot;stop words &quot;in queries, using efficient JS Set method Parameters​ Parameter\tType\tDescription word string Returns​ boolean","keywords":"","version":"Next"},{"title":"usearch","type":0,"sectionRef":"#","url":"/docs/functions/similarity/usearch","content":"usearch ai-research-agent / similarity/usearch Similarity​ convertTextToEmbedding()​ function convertTextToEmbedding(text, options?): Promise&lt;{ embedding: number[]; embeddingsDict: {}; }&gt; Text embeddings convert words or phrases into numerical vectors in a high-dimensional space, where each dimension represents a semantic feature extracted by a model like MiniLM-L6-v2. In this concept space, words with similar meanings have vectors that are close together, allowing for quantitative comparisons of semantic similarity. These vector representations enable powerful applications in natural language processing, including semantic search, text classification, and clustering, by leveraging the geometric properties of the embedding space to capture and analyze the relationships between words and concepts.Text Embeddings, Classification, and Semantic Search (Youtube) Parameters​ Parameter\tType\tDescription text string The text to embed. options? { pipeline: AutoTokenizer; precision: number; } options.pipeline? AutoTokenizer The pipeline to use for embedding. options.precision? number default=4 - The number of decimal places to round to. Returns​ Promise&lt;{embedding: number[];embeddingsDict: {}; }&gt; getEmbeddingModel()​ function getEmbeddingModel(options?): Promise&lt;AutoTokenizer&gt; Initialize HuggingFace Transformers pipeline for embedding text. Parameters​ Parameter\tType\tDescription options? { modelName: string; pipelineName: string; } options.modelName? string default=&quot;Xenova/all-MiniLM-L6-v2&quot; - The name of the model to use options.pipelineName? string default &quot;feature-extraction&quot;, Returns​ Promise&lt;AutoTokenizer&gt; The pipeline. *","keywords":"","version":"Next"},{"title":"suggest-complete-word","type":0,"sectionRef":"#","url":"/docs/functions/tokenize/suggest-complete-word","content":"suggest-complete-word ai-research-agent / tokenize/suggest-complete-word Topics​ suggestNextWordCompletions()​ function suggestNextWordCompletions(query, options?): Promise&lt;Object[]&gt; Autocomplete Topic Phrase Completions​ Completes the query with the most likely next words for phrases. If typing 2+ letters of a word, returns all possible words matching those few letters. Parameters​ Parameter\tType\tDescription query string The input query which can be pertial words or phrases. options? { limitMaxResults: number; numberOfLastWordsToCheck: number; phrasesModel: Object; } options.limitMaxResults? number default=10 - The maximum number of autocomplete suggestions to return. options.numberOfLastWordsToCheck? number default=5 - The number of last words in the query to check for phrase completions. options.phrasesModel? Object A custom phrases model to use for autocomplete suggestions. Returns​ Promise&lt;Object[]&gt; An array of autocomplete suggestions, each containing either a 'phrase' or 'word' property. Examples​ // Basic usage const suggestions = await suggestNextWordCompletions(&quot;self att&quot;); // Possible output: [{ phrase: &quot;self attention&quot; }, { phrase: &quot;self attract&quot; }, { phrase: &quot;self attack&quot; }] // Using options const customModel = await import(&quot;./custom-phrases-model.json&quot;); const suggestions = await suggestNextWordCompletions(&quot;artificial int&quot;, { phrasesModel: customModel, limitMaxResults: 5, numberOfLastWordsToCheck: 3 }); // Possible output: [{ phrase: &quot;artificial intelligence&quot; }, { phrase: &quot;artificial interpretation&quot; }] Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"text-to-chunks","type":0,"sectionRef":"#","url":"/docs/functions/tokenize/text-to-chunks","content":"text-to-chunks ai-research-agent / tokenize/text-to-chunks Topics​ splitTextSemanticChars()​ function splitTextSemanticChars(text, options?): string[] Split Text by Semantic Characters​ Splits document text into semantic chunks based on various textual and structural elements like HTML, markdown, and paragraphs. This function performs a comprehensive tokenization of the input text, considering a wide range of semantic elements and structural patterns commonly found in documents. It uses regular expressions to identify and separate the following elements: Headings (Setext-style, Markdown, and HTML-style)Citations (e.g., [1])List items (bulleted, numbered, lettered, or task lists, including nested up to three levels)Block quotes (including nested quotes and citations, up to three levels)Code blocks (fenced, indented, or HTML pre/code tags)Tables (Markdown, grid tables, and HTML tables)Horizontal rules (Markdown and HTML hr tag)Standalone lines or phrases (including single-line blocks and HTML elements)Sentences or phrases ending with punctuation (including ellipsis and Unicode punctuation)Quoted text, parenthetical phrases, or bracketed contentParagraphsHTML-like tags and their content (including self-closing tags and attributes)LaTeX-style math expressions (inline and block)Any remaining content (fallback) The function applies various length constraints to each type of element to ensure reasonable chunk sizes. It also handles nested structures and special cases like code blocks and math expressions. Sentence RAG Benchmarks Parameters​ Parameter\tType\tDescription text string The input text to be split into semantic chunks. options? Object Optional configuration options (currently unused). Returns​ string[] An array of text chunks, each representing a semantic unit of the document. Author​ Jina AI (2024) Example​ const text = &quot;# Heading\\n\\nThis is a paragraph.\\n\\n- List item 1\\n- List item 2\\n\\n&quot;; const chunks = splitTextSemanticChars(text); console.log(chunks); // Output: ['# Heading', 'This is a paragraph.', '- List item 1', '- List item 2'] ","keywords":"","version":"Next"},{"title":"text-to-sentences","type":0,"sectionRef":"#","url":"/docs/functions/tokenize/text-to-sentences","content":"text-to-sentences ai-research-agent / tokenize/text-to-sentences Topics​ splitSentences()​ function splitSentences(inputText, options?): string[] Splits text into sentences, handling 220+ common abbreviations, and infering acronyms, numbers, URLs, times, names, etc. Parameters​ Parameter\tType\tDescription inputText string The text to be split into sentences. options? { maxSize: number; minSize: number; splitOnHtmlTags: boolean; } options.maxSize? number default=600 - Maximum size for a sentence. options.minSize? number default=20 - Minimum size for a sentence. options.splitOnHtmlTags? boolean default=true - Split on HTML tags like P, DIV, UL, OL. Returns​ string[] An array of sentences. Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"similarity-vector","type":0,"sectionRef":"#","url":"/docs/functions/similarity/similarity-vector","content":"similarity-vector ai-research-agent / similarity/similarity-vector Other​ AutoTokenizer​ type AutoTokenizer&lt;&gt;: AutoTokenizer; Type Parameters​ Type Parameter calculateCosineSimilarity()​ function calculateCosineSimilarity(vectorA, vectorB): number Cosine similarity gets similarity of two vectors by whether they have the same direction (similar) or are poles apart. Cosine similarity is often used with text representations to compare how similar two documents or sentences are to each other. The output of cosine similarity ranges from -1 to 1, where -1 means the two vectors are completely dissimilar, and 1 indicates maximum similarity. Parameters​ Parameter\tType\tDescription vectorA number[] vectorB number[] Returns​ number -1 to 1 similarity score Similarity​ addEmbeddingVectorsToIndex()​ function addEmbeddingVectorsToIndex(documentVectors, options?): Promise&lt;HierarchicalNSW&gt; VSEARCH: Vector Similarity Embedding Approximation in RAM-Limited Cluster Hierarchy​ Compile hnswlib-node or NGT algorithm C++ to WASM JS for efficient similarity search.Vector index is split by K-means into regional clusters, each being a specific size to fit in RAM. This is better than popular vector engines that require costly 100gb-RAM servers because they load all the vectors at once.Vectors for centroids of each cluster are stored in a list in SQL, each cluster's binary quantized data is exported as base64 string to SQL, S3, etc.Search: Embed Query, Compare to each cluster centroid to pick top clusters, download base64 strings for those clusters, load each into WASM, find top neighbors per cluster, merge results sorted by distance. NGT AlgorithmNGT Clusterhttps://qdrant.tech/articles/memory-consumption/LancedbUsearch ANN Benchmarks Parameters​ Parameter\tType\tDescription documentVectors string[] An array of document texts to be vectorized. options? { maxElements: number; numDimensions: number; } Optional parameters for vector generation and indexing. options.maxElements? number The maximum number of data points. options.numDimensions? number The length of data point vector that will be indexed. Returns​ Promise&lt;HierarchicalNSW&gt; The created HNSW index. Author​ Malkov et al. (2016), convertTextToEmbedding()​ function convertTextToEmbedding(text, options?): Promise&lt;{ embedding: number[]; embeddingsDict: {}; }&gt; Text embeddings convert words or phrases into numerical vectors in a high-dimensional space, where each dimension represents a semantic feature extracted by a model like MiniLM-L6-v2. In this concept space, words with similar meanings have vectors that are close together, allowing for quantitative comparisons of semantic similarity. These vector representations enable powerful applications in natural language processing, including semantic search, text classification, and clustering, by leveraging the geometric properties of the embedding space to capture and analyze the relationships between words and concepts.Text Embeddings, Classification, and Semantic Search (Youtube) Parameters​ Parameter\tType\tDescription text string The text to embed. options? { pipeline: AutoTokenizer; precision: number; } options.pipeline? AutoTokenizer The pipeline to use for embedding. options.precision? number default=4 - The number of decimal places to round to. Returns​ Promise&lt;{embedding: number[];embeddingsDict: {}; }&gt; getAllEmbeddings()​ function getAllEmbeddings(index, precision): number[][] Retrieves all embeddings from the HNSW index. Parameters​ Parameter\tType\tDefault value\tDescription index HierarchicalNSW undefined The HNSW index containing the embeddings. precision number 8 default=8 - The number of decimal places to round to. Returns​ number[][] An array of embedding vectors. * getEmbeddingModel()​ function getEmbeddingModel(options?): Promise&lt;AutoTokenizer&gt; Initialize HuggingFace Transformers pipeline for embedding text. Parameters​ Parameter\tType\tDescription options? { modelName: string; pipelineName: string; } options.modelName? string default=&quot;Xenova/all-MiniLM-L6-v2&quot; - The name of the model to use options.pipelineName? string default &quot;feature-extraction&quot;, Returns​ Promise&lt;AutoTokenizer&gt; The pipeline. * searchVectorIndex()​ function searchVectorIndex( index, query, options?): Promise&lt;object[]&gt; Searches the vector index for the nearest neighbors of a given query. Parameters​ Parameter\tType\tDescription index HierarchicalNSW The HNSW index to search. query string The query string to search for. options? { numNeighbors: number; } Optional parameters for the search. options.numNeighbors? number The number of nearest neighbors to return. Returns​ Promise&lt;object[]&gt; A promise that resolves to an array of nearest neighbors, each with an id and distance. Throws​ If there's an error during the search process. Example​ const index = await addEmbeddingVectorsToIndex(documentVectors); const results = await searchVectorIndex(index, 'example query'); console.log(results); // [{id: 3, distance: 0.1}, {id: 7, distance: 0.2}, ...] weighRelevanceConceptVector()​ function weighRelevanceConceptVector( documents, query, options?): Promise&lt;object[]&gt; Rerank documents's chunks based on relevance to query, based on cosine similarity of their concept vectors generated by a 20MB MiniLM transformer model downloaded locally. A Complete Overview of Word Embeddings Parameters​ Parameter\tType\tDescription documents string[] query string options? Object Returns​ Promise&lt;object[]&gt;","keywords":"","version":"Next"},{"title":"text-to-topic-tokens","type":0,"sectionRef":"#","url":"/docs/functions/tokenize/text-to-topic-tokens","content":"text-to-topic-tokens ai-research-agent / tokenize/text-to-topic-tokens Other​ Token​ Properties​ term​ term: string; The actual term or phrase termCategory​ termCategory: number; The category of the term uniqueness​ uniqueness: number; The uniqueness score of the term Topics​ convertTextToTokens()​ function convertTextToTokens(phrase, options?): object[] Convert Text Query to Topic Phrase Tokens​ Returns a list of phrases that are found in Wiki Titles/ dictionary phrases World Model that match the input phrase, or just the single word if found. Search results will be more accurate if we infer likely phrases and search for those words occuring together and not just split into words and find frequency. Examples are &quot;white house&quot; or &quot;state of the art&quot; which should be searched as a phrase but would return different context if split into words. As Led Zeppelin famously put it: ♫ &quot;'Cause you know sometimes words have two meanings.&quot; Parameters​ Parameter\tType\tDescription phrase string options? { checkRootWords: number; checkTypos: number; ignoreStopWords: number; phrasesModel: Object; typosModel: Object; } options.checkRootWords? number check for word's root stem options.checkTypos? number check for typos options.ignoreStopWords? number ignore 300+ overused words options.phrasesModel? Object remote model options.typosModel? Object remote model Returns​ object[] Example​ const result = convertTextToTokens(&quot;The president of the united states is in the white house&quot;, { phrasesModel, typosModel }); console.log(result); Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"word-to-root-stem","type":0,"sectionRef":"#","url":"/docs/functions/tokenize/word-to-root-stem","content":"word-to-root-stem ai-research-agent / tokenize/word-to-root-stem Topics​ stemWordToRoot()​ function stemWordToRoot(word): string Stems a word using the Porter Stemmer for removing inflectional endings like &quot;ing&quot;, &quot;ist&quot;, &quot;ize&quot;. Parameters​ Parameter\tType\tDescription word string The word to be stemmed Returns​ string The stemmed word Author​ Porter, M. (1980) Example​ var rootWord = stemWordToRoot(&quot;running&quot;); // returns &quot;run&quot; ","keywords":"","version":"Next"},{"title":"rank-sentences-keyphrases","type":0,"sectionRef":"#","url":"/docs/functions/topics/rank-sentences-keyphrases","content":"rank-sentences-keyphrases ai-research-agent / topics/rank-sentences-keyphrases Functions​ rankSentencesCentralToKeyphrase()​ function rankSentencesCentralToKeyphrase(sentencesWithKeyphrases, options): Object[] Rank sentences based on their centrality to key phrases. This function implements the TextRank algorithm to weight each sentence based on the number of key phrases it shares with other sentences. It creates a weighted graph where edges connect sentences to matching keyphrases, then performs random walks to distribute probabilities. Hongyang Zhao and Qiang Xie 2021 J. Phys.: Conf. Ser. 2078 012021 &quot;An Improved TextRank Multi-feature Fusion Algorithm For Keyword Extraction of Educational Resources&quot;https://iopscience.iop.org/article/10.1088/1742-6596/2078/1/012021/pdf Pan, S. et al (2019). &quot;An improved TextRank keywords extraction algorithm&quot;https://dl.acm.org/doi/10.1145/3321408.3326659https://doi.org/10.1145/3321408.3326659 Parameters​ Parameter\tType\tDescription sentencesWithKeyphrases Object[] Array of objects, each containing (text, keyphrases) options {} ‐ Returns​ Object[] Updated array with added weights: text, keyphrases, weight","keywords":"","version":"Next"},{"title":"ngrams","type":0,"sectionRef":"#","url":"/docs/functions/topics/ngrams","content":"ngrams ai-research-agent / topics/ngrams Functions​ extractNounEdgeGrams()​ function extractNounEdgeGrams( nGramSize, terms, index, nGrams, minWordLength, sentenceNumber): object Extracts noun-based edge grams from a given set of terms. This function is crucial for identifying important multi-word concepts in the text. The function looks for sequences of words (n-grams) that: Start and end with a nounContain words that are either nouns or common ignored words (like articles or prepositions)Meet the minimum word length requirement Parameters​ Parameter\tType\tDescription nGramSize number The size of the n-grams to extract. For example, 2 for bigrams, 3 for trigrams, etc. terms (string | number)[][] Array of terms, where each term is an array containing the word and its part of speech tag. Example: [[&quot;The&quot;, 1], [&quot;quick&quot;, 2], [&quot;brown&quot;, 2], [&quot;fox&quot;, 3]] index number The starting index in the terms array to begin extraction. This allows for sliding window extraction. nGrams {} Object to store the extracted n-grams. minWordLength number The minimum length a word should have to be considered in the n-gram. sentenceNumber number The current sentence number being processed. Used to track which sentences contain the n-gram. Returns​ object The updated nGrams object with newly extracted n-grams. Example​ let terms = [[&quot;The&quot;, 1], [&quot;quick&quot;, 2], [&quot;brown&quot;, 2], [&quot;fox&quot;, 3], [&quot;jumps&quot;, 4]]; let nGrams = {}; extractNounEdgeGrams(3, terms, 0, nGrams, 3, 1); // nGrams might now contain: {3: {&quot;brown fox jumps&quot;: [1]}} ","keywords":"","version":"Next"},{"title":"topic-distribution","type":0,"sectionRef":"#","url":"/docs/functions/topics/topic-distribution","content":"topic-distribution ai-research-agent / topics/topic-distribution Topics​ extractTopicTermGroupsLDA()​ function extractTopicTermGroupsLDA(sentences, options?): any[] Latent Dirichlet (pronounced Dee-ruesh-ley) allocation is used in natural language processing to discover abstract topics in a collection of documents. It is a generative probabilistic model that assumes documents are mixtures of topics, where a topic is a probability distribution over words. LDA uses Bayesian inference to simultaneously learn the topics and topic mixtures that occur around each other in an unsupervised manner. Latent Dirichlet Allocation (LDA) with Gibbs Sampling Explained Latent Dirichlet Allocation Topic Models (Youtube) Parameters​ Parameter\tType\tDescription sentences string[] Array of input sentences. options? { alpha: number; beta: number; numberOfIterations: number; numberOfTermsPerTopic: number; topicCount: number; valueBurnIn: number; valueSampleLag: number; } Configuration options for LDA. options.alpha? number default=0.1 - Dirichlet prior on document-topic distributions. options.beta? number default=0.01 - Dirichlet prior on topic-word distributions. options.numberOfIterations? number default=1000 - Number of iterations for the LDA algorithm. options.numberOfTermsPerTopic? number default=10 - Number of terms to show for each topic. options.topicCount? number default=10 - Number of topics to extract. options.valueBurnIn? number default=100 - Number of burn-in iterations. options.valueSampleLag? number default=10 - Lag between samples. Returns​ any[] Array of topics, each containing term-probability pairs. Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"Extract from any URL the main content and cite","type":0,"sectionRef":"#","url":"/docs/routes/extract-from-any-url-the-main-content-and-cite","content":"Extract from any URL the main content and cite GET /extract Extracts main content and citation from URL Request​ Responses​ 200500 Extracted content or HTML","keywords":"","version":"Next"},{"title":"seektopic-keyphrases","type":0,"sectionRef":"#","url":"/docs/functions/topics/seektopic-keyphrases","content":"seektopic-keyphrases ai-research-agent / topics/seektopic-keyphrases Topics​ extractSEEKTOPIC()​ function extractSEEKTOPIC(docText, options?): object 🔤📊 SEEKTOPIC: Summarization by Extracting Entities, Keyword Tokens, and Outline Phrases Important to Context​ Extracts unique, domain-specific key phrases from a document using noun n-grams and ranks sentences based on their centrality to the most frequently referenced key phrase concepts, enabling efficient extraction of domain-specific content. This can be a first step to use key sentences or topics to vectorize or fit more docs into context limit and visualize them in vector space. Sentence Segmentation: Split the text into sentences, accounting for common abbreviations, numbers, URLs, and other exceptions.Tokenization and Phrase Extraction: Employ a Wiki Phrases tokenizer to identify wiki topics, phrases, and nouns. This includes spell-checking and root word verification using Porter Stemmer.Noun N-gram Extraction: Generate noun edge-grams, allowing for stop words in the middle (e.g., &quot;state of the art&quot;).Key Phrase Consolidation: Merge smaller n-grams that are subsets of larger ones by comparing weights.Domain Specificity Calculation: Determine named entities and phrase domain specificity using WikiIDF. This rewards unique key phrases specific to the document's field (e.g., &quot;endocrinology&quot; in medical texts or &quot;thou shall&quot; in religious texts).Key Phrase Filtering: Select top key phrases based on a combination of frequency and word count.Graph Construction: Create a double-ring weighted graph with key phrases in the central ring and sentences in the outer ring. Assign weights to links based on concept usage probability.Sentence Weighting: Apply TextRank algorithm to weight sentences, identifying those that centralize and connect key phrase concepts most referenced by other sentences. This process, based on TextRank and PageRank, includes random surfing and jumping to avoid loops.Top Results Selection: Select top sentences and key phrases based on overall weight and graph centrality, using either a fixed number or percentage for larger documents.Output Generation: Return top sentences (with associated key phrases) and top key phrases (with associated sentences).Dynamic Reranking: If a user interacts with a key phrase or if there's a search query leading to the document, compare query similarity to key phrases, heavily weight the most similar key phrase, and reapply TextRank from step 8. Parameters​ Parameter\tType\tDescription docText string input text to analyze options? { heavyWeightQuery: string; limitTopKeyphrases: number; limitTopSentences: number; maxWords: number; minKeyPhraseLength: number; minWordLength: number; minWords: number; phrasesModel: any; topKeyphrasesPercent: number; } options.heavyWeightQuery? string query to give heavy weight to options.limitTopKeyphrases? number default=10 - maximum number of top keyphrases to return options.limitTopSentences? number default=5 - maximum number of top sentences to return options.maxWords? number default=5 - maximum words in a keyphrase options.minKeyPhraseLength? number default=6 - minimum length of a keyphrase options.minWordLength? number default=3 - minimum length of a word options.minWords? number default=1 - minimum words in a keyphrase options.phrasesModel? any phrases model options.topKeyphrasesPercent? number default=0.2 - percentage of top keyphrases to consider Returns​ object Name\tTypekeyphrases\tObject[] sentences\tstring[] topSentences\tObject[] Example​ const result = extractSEEKTOPIC(testDoc, { phrasesModel, heavyWeightQuery: &quot;self attention&quot;, limitTopSentences: 10}); console.log(result.topSentences); // Array of top sentences with their keyphrases and weights console.log(result.keyphrases); // Array of top keyphrases with their weights and associated sentence indices console.log(result.sentences); // Array of all sentences in the input text Author​ ai-research-agent (2024)","keywords":"","version":"Next"},{"title":"Generate language model reply using agent prompts","type":0,"sectionRef":"#","url":"/docs/routes/generate-language-model-reply-using-agent-prompts","content":"Generate language model reply using agent prompts POST /agents Generates a language model reply using agent prompts. LLM provider - groq, openai, anthropic, together, xai, google summarize-bullets: article summarize: article suggest-followups: chat_historyarticle answer: chat_historyquery query-resolution: chat_historyquery knowledge-graph-nodes: queryarticle summary-longtext: articlesections Request​ Responses​ 200500 Generated reply","keywords":"","version":"Next"},{"title":"QwkSearch API","type":0,"sectionRef":"#","url":"/docs/routes/qwksearch-api","content":"Version: 1.0.0 QwkSearch API Search, extract, vectorize and outline a topic base with AI Research Agent. Terms of Service http://qwksearch.com/legal/terms/","keywords":"","version":"Next"},{"title":"User","type":0,"sectionRef":"#","url":"/docs/routes/schemas/user","content":"User usernamestring User supplied username Possible values: &gt;= 4 characters Example: John78 emailemail User email address Example: john.smith@example.com passwordpassword User password, MUST contain a mix of upper and lower case letters, as well as digits Possible values: &gt;= 8 characters, Value must match regular expression /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/ Example: drowssaP123 phonestring User phone number in international format Possible values: Value must match regular expression /^\\+(?:[0-9]-?){6,14}[0-9]$/ Example: +1-202-555-0192 userStatusint32 User status User { &quot;username&quot;: &quot;John78&quot;, &quot;email&quot;: &quot;john.smith@example.com&quot;, &quot;password&quot;: &quot;drowssaP123&quot;, &quot;phone&quot;: &quot;+1-202-555-0192&quot;, &quot;userStatus&quot;: 0 } ","keywords":"","version":"Next"},{"title":"Search the web","type":0,"sectionRef":"#","url":"/docs/routes/search-the-web","content":"Search the web GET /search Search web for query words in categories: general, news, videos, images, science, files, it Request​ Responses​ 200400500 A list of search results","keywords":"","version":"Next"},{"title":"Services","type":0,"sectionRef":"#","url":"/docs/routes/services","content":"Services Core services of QwkSearch API 📄️ Extract from any URL the main content and cite Extracts main content and citation from URL 📄️ Generate language model reply using agent prompts Generates a language model reply using agent prompts. 📄️ Search the web Search web for query words in categories:","keywords":"","version":"Next"},{"title":"neural-net","type":0,"sectionRef":"#","url":"/docs/functions/train/neural-net","content":"neural-net ai-research-agent / train/neural-net Neural Net​ torch​ TORCH: Tensor Operations with the Reasoning Capacity of Humans​ Torch is a powerful library for tensor computations and deep learning, offering a comprehensive set of tools for creating and manipulating multidimensional arrays. It provides a wide range of mathematical operations, and it includes a neural network module (torch.nn) that facilitates the construction of complex neural architectures through a modular approach, with various layer types and activation functions readily available. Torch also implements automatic differentiation, enabling efficient gradient computation for training neural networks, and offers optimization algorithms like Adam for parameter updates. Additionally, it includes utilities for saving and loading models, making it a versatile and complete framework for developing and deploying machine learning solutions. Torch is a neural net matrix multiplication library that uses PyTorch API syntaxfor tensors and neural nets.Uses GPU.js acceleration to translate matmul into WebGL shader code. GPU.js does matmul faster than PyTorch.Neural Net API: MultiHeadSelfAttention, FullyConnected, Block, Embedding, PositionalEmbedding, ReLU, Softmax, Dropout, LayerNorm, CrossEntropyLoss.Other Neural Nets: For LSTMs and CNNs, useTensorflow.jsor Brain.js Tensor Creation: tensor(): Creates a new Tensor filled with given data zeros(): Creates a new Tensor filled with zeros ones(): Creates a new Tensor filled with ones randn(): Creates a new Tensor filled with random values from a normal distribution rand(): Creates a new Tensor filled with random values from a uniform distribution Tensor Properties and Methods: backward(): Performs backpropagation from this tensor backwards zero_grad(): Clears the gradients stored in this tensor tolist(): Returns the tensor's data as a JavaScript Array Properties: data, length, ndims, grad Basic Arithmetic Operations: add(), sub(), mul(), div(): Element-wise arithmetic operations matmul(): Matrix multiplication between two tensors pow(): Element-wise power operation Statistical Operations: sum(): Gets the sum of the Tensor over a specified dimension mean(): Gets the mean of the Tensor over a specified dimension variance(): Gets the variance of the Tensor over a specified dimension Tensor Manipulation: transpose(): Transposes the tensor along two consecutive dimensions at(): Returns elements from the tensor based on given indices masked_fill(): Fills elements in the tensor based on a condition Mathematical Functions: sqrt(): Element-wise square root exp(): Element-wise exponentiation log(): Element-wise natural logarithm Neural Network Layers (torch.nn): Linear(): Applies a linear transformation MultiHeadSelfAttention(): Applies a self-attention layer Embedding(): Creates an embedding table for vocabulary Activation functions: ReLU(), Softmax() Optimization and Loss: optim.Adam(): Adam optimizer for updating model parameters nn.CrossEntropyLoss(): Computes Cross Entropy Loss torch Function​ tensor(data, requires_grad = false, device = 'cpu') Creates a new Tensor filled with the given data Function​ zeros(*shape, requires_grad = false, device = 'cpu') Creates a new Tensor filled with zeros Function​ ones(*shape, requires_grad = false, device = 'cpu') Creates a new Tensor filled with ones Function​ tril(*shape, requires_grad = false, device = 'cpu') Creates a new 2D lower triangular Tensor Function​ randn(*shape, requires_grad = false, device = 'cpu', xavier = false) Creates a new Tensor filled with random values from a normal distribution Function​ rand(*shape, requires_grad = false, device = 'cpu') Creates a new Tensor filled with random values from a uniform distribution Function​ randint(low, high, *shape, requires_grad = false, device = 'cpu') Creates a new Tensor filled with random integers Tensor Methods: Method​ tensor.backward() Performs backpropagation from this tensor backwards Method​ tensor.zero_grad() Clears the gradients stored in this tensor Method​ tensor.zero_grad_graph() Clears the gradients stored in this tensor and all tensors that led to it Method​ tensor.tolist() Returns the tensor's data as a JavaScript Array Function​ add(a, b) Performs element-wise addition of two tensors Function​ sub(a, b) Performs element-wise subtraction of two tensors Function​ neg(a) Returns the element-wise opposite of the given Tensor Function​ mul(a, b) Performs element-wise multiplication of two tensors Function​ div(a, b) Performs element-wise division of two tensors Function​ matmul(a, b) Performs matrix multiplication between two tensors Function​ sum(a, dim, keepdims = false) Gets the sum of the Tensor over a specified dimension Function​ mean(a, dim, keepdims = false) Gets the mean of the Tensor over a specified dimension Function​ variance(a, dim, keepdims = false) Gets the variance of the Tensor over a specified dimension Function​ transpose(a, dim1, dim2) Transposes the tensor along two consecutive dimensions Function​ at(a, index1, index2) Returns elements from the tensor based on given indices Function​ masked_fill(a, condition, value) Fills elements in the tensor based on a condition Function​ pow(a, n) Returns tensor raised to element-wise power Function​ sqrt(a) Returns element-wise square root of the tensor Function​ exp(a) Returns element-wise exponentiation of the tensor Function​ log(a) Returns element-wise natural log of the tensor torch.nn Neural Network Layers: Method​ nn.Linear(in_size, out_size, device, bias, xavier) Applies a linear transformation to the input tensor Method​ nn.MultiHeadSelfAttention(in_size, out_size, n_heads, n_timesteps, dropout_prob, device) Applies a self-attention layer on the input tensor Function​ nn.FullyConnected(in_size, out_size, dropout_prob, device, bias) Applies a fully-connected layer on the input tensor Function​ nn.Block(in_size, out_size, n_heads, n_timesteps, dropout_prob, device) Applies a transformer Block layer on the input tensor Function​ nn.Embedding(in_size, embed_size) Creates an embedding table for vocabulary Function​ nn.PositionalEmbedding(input_size, embed_size) Creates a positional embedding table Function​ nn.ReLU() Applies Rectified Linear Unit activation function Function​ nn.Softmax() Applies Softmax activation function Function​ nn.Dropout(drop_prob) Applies dropout to input tensor Function​ nn.LayerNorm(n_embed) Applies Layer Normalization to input tensor Function​ nn.CrossEntropyLoss() Computes Cross Entropy Loss between target and input tensor Optimization: optim.Adam(params, lr, reg, betas, eps) Adam optimizer for updating model parameters Utility Functions: Function​ save(model, file) Saves the model reruning data blob (for you to save) Function​ load(model, loadedData) Loads the model from saved data Author​ PyTorch Contributors,Leao, E. et al (2022), See also: Brain.js Properties​ _reshape()​ static _reshape: (a, shape) =&gt; any; Parameters​ Parameter\tType a any shape any Returns​ any add()​ static add: (a, b) =&gt; any; Parameters​ Parameter\tType a any b any Returns​ any at()​ static at: (a, idx1, idx2) =&gt; any; Parameters​ Parameter\tType a any idx1 any idx2 any Returns​ any broadcast()​ static broadcast: (a, b) =&gt; Tensor; Parameters​ Parameter\tType a any b any Returns​ Tensor div()​ static div: (a, b) =&gt; object; Parameters​ Parameter\tType a any b any Returns​ object exp()​ static exp: (a) =&gt; any; Parameters​ Parameter\tType a any Returns​ any getShape()​ static getShape: (data, shape) =&gt; any[]; Parameters​ Parameter\tType\tDefault value data any undefined shape any[] [] Returns​ any[] load()​ static load: (model, loadedData) =&gt; any; Parameters​ Parameter\tType model any loadedData any Returns​ any log()​ static log: (a) =&gt; any; Parameters​ Parameter\tType a any Returns​ any masked_fill()​ static masked_fill: (a, mask, condition, value) =&gt; any; Parameters​ Parameter\tType a any mask any condition any value any Returns​ any matmul()​ static matmul: (a, b) =&gt; any; Parameters​ Parameter\tType a any b any Returns​ any mean()​ static mean: (a, dim, keepdims) =&gt; any; Parameters​ Parameter\tType\tDefault value a any undefined dim number -1 keepdims boolean false Returns​ any mul()​ static mul: (a, b) =&gt; any; Parameters​ Parameter\tType a any b any Returns​ any neg()​ static neg: (a) =&gt; any; Parameters​ Parameter\tType a any Returns​ any nn​ static nn: object; Block​ Block: typeof Block; CrossEntropyLoss​ CrossEntropyLoss: typeof CrossEntropyLoss; Dropout​ Dropout: typeof Dropout; Embedding​ Embedding: typeof Embedding; FullyConnected​ FullyConnected: typeof FullyConnected; LayerNorm​ LayerNorm: typeof LayerNorm; Linear​ Linear: typeof Linear; Module​ Module: typeof Module; MultiHeadSelfAttention​ MultiHeadSelfAttention: typeof MultiHeadSelfAttention; PositionalEmbedding​ PositionalEmbedding: typeof PositionalEmbedding; ReLU​ ReLU: typeof ReLU; Softmax​ Softmax: typeof Softmax; ones()​ static ones: (shape, requires_grad, device) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value shape any undefined requires_grad boolean false device string &quot;cpu&quot; Returns​ Tensor optim​ static optim: object; Adam​ Adam: typeof Adam; Parameter​ static Parameter: typeof Parameter; pow()​ static pow: (a, n) =&gt; object; Parameters​ Parameter\tType a any n any Returns​ object rand()​ static rand: (shape, requires_grad, device) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value shape any undefined requires_grad boolean false device string &quot;cpu&quot; Returns​ Tensor randint()​ static randint: (low, high, shape, requires_grad) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value low number 0 high number 1 shape number[] ... requires_grad boolean false Returns​ Tensor randn()​ static randn: (shape, requires_grad, device, xavier) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value shape any undefined requires_grad boolean false device string &quot;cpu&quot; xavier boolean false Returns​ Tensor reshape()​ static reshape: (a, shape) =&gt; any; Parameters​ Parameter\tType a any shape any Returns​ any save()​ static save: (model, file) =&gt; string; Parameters​ Parameter\tType model any file any Returns​ string sqrt()​ static sqrt: (a) =&gt; any; Parameters​ Parameter\tType a any Returns​ any tensor()​ static tensor: (data, requires_grad, device) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value data any undefined requires_grad boolean false device string &quot;cpu&quot; Returns​ Tensor Tensor​ static Tensor: typeof Tensor; transpose()​ static transpose: (a, dim1, dim2) =&gt; any; Parameters​ Parameter\tType a any dim1 any dim2 any Returns​ any tril()​ static tril: (shape, requires_grad, device) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value shape any undefined requires_grad boolean false device string &quot;cpu&quot; Returns​ Tensor variance()​ static variance: (a, dim, keepdims) =&gt; any; Parameters​ Parameter\tType\tDefault value a any undefined dim number -1 keepdims boolean false Returns​ any zeros()​ static zeros: (shape, requires_grad, device) =&gt; Tensor; Parameters​ Parameter\tType\tDefault value shape any undefined requires_grad boolean false device string &quot;cpu&quot; Returns​ Tensor","keywords":"","version":"Next"}],"options":{"id":"default"}}