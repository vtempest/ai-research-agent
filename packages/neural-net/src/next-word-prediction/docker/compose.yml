# üê≥ Docker Compose for Transformer Training Environment
#
# This provides easy container management with different configurations
# for development, training, and Jupyter notebook access.
#
# Usage:
#   docker-compose up training          # Basic training
#   docker-compose up jupyter           # Jupyter notebook server
#   docker-compose up development       # Interactive development


services:
  # üèÉ Basic training service - runs the transformer training and exits
  training:
    build: .
    container_name: transformer-training
    command: python src/training/train_next_word_prediction.py
    volumes:
      # Mount local directory to persist logs and checkpoints
      - ./output:/app/logs
      - ./data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
    # Enable GPU support if available
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Optional: Limit memory usage
    mem_limit: 4g

  # üìä Jupyter notebook service for interactive exploration  
  jupyter:
    build: .
    container_name: transformer-jupyter
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/app/notebooks
      - ./output:/app/logs
      - ./data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - JUPYTER_ENABLE_LAB=yes
    # Enable GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # üõ†Ô∏è Development service for interactive coding and debugging
  development:
    build: .
    container_name: transformer-dev
    command: /app/scripts/start.sh
    stdin_open: true
    tty: true
    volumes:
      # Mount source code for live editing
      - .:/app/workspace
      - ./output:/app/logs
      - ./data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
    # Enable GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Keep container running for interactive use
    restart: unless-stopped

  # üß™ Testing service for quick environment verification
  test:
    build: .
    container_name: transformer-test
    command: /app/scripts/test_environment.sh
    environment:
      - PYTHONUNBUFFERED=1

# Define named volumes for persistent data
volumes:
  transformer_data:
    driver: local
  transformer_logs:
    driver: local

# Define network for potential multi-container setups
networks:
  transformer_network:
    driver: bridge