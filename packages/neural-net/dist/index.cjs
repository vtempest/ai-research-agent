"use strict";var N=Object.create;var y=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var j=(e,t,a,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of $(t))!x.call(e,s)&&s!==a&&y(e,s,{get:()=>t[s],enumerable:!(n=S(t,s))||n.enumerable});return e};var A=(e,t,a)=>(a=e!=null?N(q(e)):{},j(t||!e||!e.__esModule?y(a,"default",{value:e,enumerable:!0}):a,e));Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const m=require("xgboost_node");async function p(e,t={}){var{precision:a=4,pipeline:n}=t;n||(n=await _());const s=await n(e,{pooling:"mean",normalize:!0});return Array.from(s.data).map(o=>parseFloat(o.toFixed(a)))}async function _(e={}){const{pipeline:t}=await import("@huggingface/transformers"),{pipelineName:a="feature-extraction",modelName:n="Xenova/all-MiniLM-L6-v2",quantized:s=!0,gpu:r=!1}=e;return await t(a,n,{quantized:s,dtype:"fp32",device:r?"cuda":"cpu"})}async function O(e,t,a={}){const{numNeighbors:n=5}=a,s=await p(t);return e.searchKnn(s,n,null)}function w(e,t=8){const a=e.getCurrentCount(),n=[];for(let s=0;s<a;s++){const r=e.getPoint(s);n.push(r.map(o=>Number(o.toFixed(t))))}return n}function M(e,t){return e.reduce((a,n,s)=>a+n*t[s],0)/(Math.sqrt(e.reduce((a,n)=>a+n*n,0))*Math.sqrt(t.reduce((a,n)=>a+n*n,0)))}async function V(e,t,a={}){const n=await p(e,a),s=await p(t,a);return n.map((o,l)=>({index:l,similarity:M(s[0],o)})).sort((o,l)=>l.similarity-o.similarity).map(({index:o,similarity:l})=>({content:e[o],similarity:l}))}async function I(e,t,a={}){const{xgbParams:n={verbosity:0,max_depth:7,eta:.07,objective:"reg:squarederror",nthread:4,subsample:.85,colsample_bytree:.8,colsample_bylevel:.8,min_child_weight:5,gamma:.2,alpha:.1,lambda:1.5,early_stopping_rounds:50,seed:42,nrounds:2e3,tree_method:"hist",grow_policy:"depthwise",...a.xgbParams},testSize:s=.1,featuresToUse:r}=a;let l=e.map(i=>({...r.reduce((b,f)=>(b[f]=i[f],b),{})})).filter(i=>Object.values(i).length>0).map(i=>Object.values(i));l=l.map(i=>i.map(Number));const d=e.map(i=>i[t]),{trainFeatures:c,testFeatures:u,trainTarget:g,testTarget:v}=R(l,d,s),T=Object.values(c).map(i=>Object.values(i)).map(i=>i.map(Number)),C=Object.values(u).map(i=>Object.values(i)).map(i=>i.map(Number)),h=[];for(let i=0;i<g.length;i++)isNaN(g[i])||h.push(i);const E=h.map(i=>T[i]),F=h.map(i=>g[i]);return await m.train(E,F,n),z(await m.predict(C),v)}function R(e,t,a=.2){const n=e.length,s=Math.floor(n*a),r=n-s,o=Array.from({length:n},(c,u)=>u);for(let c=o.length-1;c>0;c--){const u=Math.floor(Math.random()*(c+1));[o[c],o[u]]=[o[u],o[c]]}const l=o.slice(0,r),d=o.slice(r);return{trainFeatures:l.map(c=>e[c]),testFeatures:d.map(c=>e[c]),trainTarget:l.map(c=>t[c]),testTarget:d.map(c=>t[c])}}function z(e,t){const a=t.reduce((r,o)=>r+o,0)/t.length,n=t.map(r=>Math.pow(r-a,2)).reduce((r,o)=>r+o,0),s=t.map((r,o)=>Math.pow(r-e[o],2)).reduce((r,o)=>r+o,0);return Math.round((1-s/n)*100)/100}function P(e,t={}){const{featuresToUse:a}=t,s=e.map(r=>({...a.reduce((o,l)=>(o[l]=r[l],o),{})})).map(r=>Object.values(r)).map(r=>r.map(Number)).filter(r=>r.length>1&&!!r[0]);return console.log(s),m.predict(s).then(r=>(e.forEach((o,l)=>{o.predicted=r[l]}),e))}async function L(e){await m.saveModel(e)}async function U(e){await m.loadModel(e)}function D(e,t,a=7){return e.map((n,s)=>{if(s<a-1)return{...n,[`${t}_rolling_mean_${a}d`]:n[t],[`${t}_rolling_std_${a}d`]:n[t]};const r=e.slice(s-a+1,s+1).map(c=>c[t]).filter(c=>c!=null&&!isNaN(c));if(r.length===0)return{...n,[`${t}_rolling_mean_${a}d`]:null,[`${t}_rolling_std_${a}d`]:null};const o=r.reduce((c,u)=>c+u,0)/r.length,l=r.reduce((c,u)=>c+Math.pow(u-o,2),0)/r.length,d=Math.sqrt(l);return{...n,[`${t}_rolling_mean_${a}d`]:Math.floor(o),[`${t}_rolling_std_${a}d`]:Math.floor(d)}})}exports.calculateCosineSimilarity=M;exports.calculateRollingStats=D;exports.convertTextToEmbedding=p;exports.getAllEmbeddings=w;exports.getEmbeddingModel=_;exports.loadModel=U;exports.predictFuture=P;exports.saveModel=L;exports.searchVectorIndex=O;exports.trainModels=I;exports.weighRelevanceConceptVector=V;
