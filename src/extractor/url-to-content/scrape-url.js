// try on the frontend  
// <iframe id="dom-iframe" style="width:0;height:0;border:0; border:none;"></iframe>
// document.getElementById('dom-iframe').src = '/get?url=' + url;
// document.getElementById('dom-iframe').contentWindow.document.body.innerHTML;

/**
 * Scrape  any domain's URL to get its HTML, JSON, or arraybuffer.<br />
 * Features: timeout, redirects, default UA, referer as google, and bot detection checking. <br />
 * Scraping internet pages is a <a href="https://blog.apify.com/is-web-scraping-legal/">free speech
 *  right globally</a>.
 * @async
 * @param {string} url - any domain's URL
 * @param {object} options
 * @param {number} options.timeout default=5 -  abort request if not retrived, in seconds
 * @param {number} options.maxRedirects default=3 - max redirects to follow
 * @param {number} options.checkBotDetection default=true - check for bot detection messages
 * @param {number} options.changeReferer default=true - set referer as google
 * @param {number} options.userAgentIndex default=0 - index of [google bot, default chrome]
 * @param {number} options.useCORSProxy default=false - use corsproxy.io to fetch url (in frontend JS)
 * @returns {Promise<Object|string>} -  HTML, JSON, arraybuffer, or error object
 * @category Extractor
 * @example await scrapeURL("https://hckrnews.com", {timeout: 5, userAgentIndex: 1})
 */
export async function scrapeURL(url, options = {}) {
  // try {
    let {
      timeout = 15,
      checkBotDetection = true,
      maxRedirects = 3,
      changeReferer = 0,
      userAgentIndex = 0,
      useCORSProxy = 0,
    } = options;

    if(useCORSProxy)
      url = 'https://corsproxy.io/?' + encodeURIComponent(url);


    var userAgentStrings =
      ['Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible ; Googlebot/2.1 ; +http://www.google.com/bot.html)',
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)"]


    var headers = {
      ...options,
      "Accept-Language": "en",
      // "User-Agent": userAgentStrings[userAgentIndex],
      signal: AbortSignal.timeout(timeout * 1000),
    };

    if (changeReferer)
      headers["Referer"] = "https://www.google.com/";


    let response = await fetch(url, headers);

    if (response.redirected) {
      if (maxRedirects <= 0)
        return { error: "Max redirects exceeded" };
      maxRedirects--;
      options = { ...options, maxRedirects };

      return scrapeURL(response.url, options);
    }

    //allow iframe embeds

    if (changeReferer) {
      delete response.headers['x-frame-options'];
      delete response.headers['content-security-policy'];
    }

    //return based on content type
    const contentType = response.headers.get("Content-Type");

    if (contentType.includes("application/json")) {
      return await response.json();
    } else if (contentType.includes("text")) {
      var html = await response.text();
      if (checkBotDetection && isHTMLBotDetection(html))
        return { error: "Bot detected" }; //, html: response.html };



      //spoof the base-url for relative paths on the target page
      // html = (html || "").replace(/<head[^>]*>/i, "<head><base href='" + url + "/'>")

      return html;
    } else {
      // For other types, return as arrayBuffer
      return await response.arrayBuffer();
    }
  // } catch (e) {
  //   return { error: "Error in fetch", msg: e.message };
  // }
}

/**
 * Check html for bot block messages
 * @param {string} html
 * @returns {Boolean} true if bot detection message found
 * @category Extractor
 */
function isHTMLBotDetection(html) {
  var commonBlocks = [
    "The security system for this website has been triggered",
    "You do not have permission to view this page.",
    "Our systems have detected unusual traffic from your computer network.",
    "Your request has been blocked due to a network policy.",
    "Cloudflare Ray ID found ",
    "Please verify you are a human",
    "Our systems have detected unusual traffic activity from your network. Please complete this reCAPTCHA",
    "Sorry, we just need to make sure you're not a robot",
    "Access to this page has been denied",
    "<p>Please enable JS and disable any ad blocker</p></p>",
    "Please make sure your browser supports JavaScript",
    "Please complete the security check to access",
    "https://errors.edgesuite.net",
    "Please enable JS and disable any ad blocker",
    "The resource you are looking for might have been removed, had its name changed, or is temporarily unavailable.",
    "We’re currently checking your connection. This shouldn’t take long.",
    "Generated by cloudfront (CloudFront) Request ID",
    "You don't have permission to access",

  ];

  return commonBlocks.filter(m => html?.indexOf(m) > -1).length > 0;
}
