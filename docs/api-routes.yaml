openapi: 3.0.0
servers:
  - url: https://qwksearch.com/api/
    description: Production Server URL
info:
  description: |
    Search, extract, vectorize and outline a topic base with 
    AI Research Agent.
   
  version: 1.0.0
  title: QwkSearch API
  termsOfService: "http://qwksearch.com/legal/terms/"
  x-logo:
    url: "https://qwksearch.com/icons/qwksearch-logo.svg"
    altText: logo

tags:
  - name: Services
    description: "Core services of QwkSearch API"
paths:
  /extract:
    get:
      tags:
        - Services
      summary: Extract from any URL the main content and cite 
      description: Extracts main content and citation from URL
      parameters:
        - name: url
          in: query
          description: URL to extract content from
          required: true
          schema:
            type: string
        - name: full
          in: query
          description: Return full HTML content if set to true 
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Extracted content or HTML
          content:
            application/json:
              schema:
                type: object
                properties:
                  html:
                    type: string
                    description: Full HTML of the page 
                  title:
                    type: string
                    description: Title of the page 
                  content:
                    type: string
                    description: Extracted content summary of the page
        '500':
          description: Server error or missing URL parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message

  /agents:
    post:
      tags:
        - Services
      summary: Generate language model reply using agent prompts
      description: |
        Generates a language model reply using agent prompts.

        LLM provider - groq, openai, anthropic, together, xai, google

          1. summarize-bullets:
              - article
          2. summarize:
              - article
          3. suggest-followups:
              - chat_history
              - article
          4. answer:
              - chat_history
              - query
          5. query-resolution:
              - chat_history
              - query
          6. knowledge-graph-nodes:
              - query
              - article
          7. summary-longtext:
              - article
              - sections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
              properties:
                prompt:
                  type: string
                  description: System prompt for the language model
                agent:
                  type: string
                  description: |
                    Agent name - summarize-bullets, summarize, suggest-followups, 
                    answer, query-resolution, knowledge-graph-nodes, 
                    summary-longtext
                context:
                  type: string
                  description: JSON Object String of variables with escaped \\" to insert into prompt like {chat_history:""}
                provider:
                  type: string
                  default: groq
                  description: LLM provider - groq, openai, anthropic, together, xai, google
                key:
                  type: string
                  description: Your API key for the AI provider
                model:
                  type: string
                  default: "llama-3.2-11b-vision-preview"
                html:
                  type: string
                  default: true
                  description: If true, reply format is HTML. If false, Markdown.
                temperature:
                  type: number
                  description: |
                    Temperature controls the randomness of the model's predictions.
                    A higher value means the model will be more creative and less deterministic,
                    while a lower value means the model will be more deterministic.
                  default: 0.7
        

      responses:
        '200':
          description: Generated reply
          content:
            application/json:
              schema:
                type: object
                properties:
                  reply:
                    type: string
                    description: Generated reply
        '500':
          description: Server error or missing prompt parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message

  /search:
    get:
      tags:
        - Services
      summary: Search the web
      description: |
          Search web for query words in categories: 
          general, news, videos, images, science, files, it
      parameters:
        - name: q
          in: query
          description: Search query string
          required: true
          schema:
            type: string
        - name: cat
          in: query
          description: Category - general, news, videos, images, science, files, it
          required: false
          schema:
            type: string
            default: general
        - name: recency
          in: query
          description: Recency filter - none, day, week, month, year
          required: false
          schema:
            type: number
            default: 0
        - name: public
          in: query
          description: Use public server instances (optional)
          required: false
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          description: Pagination for results (optional)
          required: false
          schema:
            type: integer
            default: 1
        - name: lang
          in: query
          description: Language
          required: false
          schema:
            type: string
            default: en-US
      responses:
        '200':
          description: A list of search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Title of the search result
                        link:
                          type: string
                          description: URL of the search result
                        snippet:
                          type: string
                          description: Snippet of the text around the query
        '400':
          description: Missing required query parameter `q`
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error when fetching search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string


components:
  schemas:
    
    User:
      type: object
      properties:
        username:
          description: User supplied username
          type: string
          minLength: 4
          example: John78
        email:
          description: User email address
          type: string
          format: email
          example: john.smith@example.com
        password:
          type: string
          description: >-
            User password, MUST contain a mix of upper and lower case letters,
            as well as digits
          format: password
          minLength: 8
          pattern: "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/"
          example: drowssaP123
        phone:
          description: User phone number in international format
          type: string
          pattern: '/^\+(?:[0-9]-?){6,14}[0-9]$/'
          example: +1-202-555-0192
        userStatus:
          description: User status
          type: integer
          format: int32